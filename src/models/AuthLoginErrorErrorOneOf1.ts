/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * User authorization timed out
 * @export
 * @interface AuthLoginErrorErrorOneOf1
 */
export interface AuthLoginErrorErrorOneOf1 {
    /**
     * 
     * @type {number}
     * @memberof AuthLoginErrorErrorOneOf1
     */
    code: AuthLoginErrorErrorOneOf1CodeEnum;
    /**
     * 
     * @type {string}
     * @memberof AuthLoginErrorErrorOneOf1
     */
    message: AuthLoginErrorErrorOneOf1MessageEnum;
    /**
     * 
     * @type {string}
     * @memberof AuthLoginErrorErrorOneOf1
     */
    field: string | null;
    /**
     * 
     * @type {string}
     * @memberof AuthLoginErrorErrorOneOf1
     */
    value: string | null;
}


/**
 * @export
 */
export const AuthLoginErrorErrorOneOf1CodeEnum = {
    NUMBER_403: 403
} as const;
export type AuthLoginErrorErrorOneOf1CodeEnum = typeof AuthLoginErrorErrorOneOf1CodeEnum[keyof typeof AuthLoginErrorErrorOneOf1CodeEnum];

/**
 * @export
 */
export const AuthLoginErrorErrorOneOf1MessageEnum = {
    AuthExpired: 'AUTH_EXPIRED'
} as const;
export type AuthLoginErrorErrorOneOf1MessageEnum = typeof AuthLoginErrorErrorOneOf1MessageEnum[keyof typeof AuthLoginErrorErrorOneOf1MessageEnum];


/**
 * Check if a given object implements the AuthLoginErrorErrorOneOf1 interface.
 */
export function instanceOfAuthLoginErrorErrorOneOf1(value: object): value is AuthLoginErrorErrorOneOf1 {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('field' in value) || value['field'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function AuthLoginErrorErrorOneOf1FromJSON(json: any): AuthLoginErrorErrorOneOf1 {
    return AuthLoginErrorErrorOneOf1FromJSONTyped(json, false);
}

export function AuthLoginErrorErrorOneOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthLoginErrorErrorOneOf1 {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'],
        'field': json['field'],
        'value': json['value'],
    };
}

export function AuthLoginErrorErrorOneOf1ToJSON(json: any): AuthLoginErrorErrorOneOf1 {
    return AuthLoginErrorErrorOneOf1ToJSONTyped(json, false);
}

export function AuthLoginErrorErrorOneOf1ToJSONTyped(value?: AuthLoginErrorErrorOneOf1 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'field': value['field'],
        'value': value['value'],
    };
}

