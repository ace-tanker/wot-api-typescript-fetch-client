/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AuthLoginError } from './AuthLoginError.js';
import {
    instanceOfAuthLoginError,
    AuthLoginErrorFromJSON,
    AuthLoginErrorFromJSONTyped,
    AuthLoginErrorToJSON,
} from './AuthLoginError.js';
import type { AuthLoginOk } from './AuthLoginOk.js';
import {
    instanceOfAuthLoginOk,
    AuthLoginOkFromJSON,
    AuthLoginOkFromJSONTyped,
    AuthLoginOkToJSON,
} from './AuthLoginOk.js';

/**
 * @type GetAuthLogin200Response
 * 
 * @export
 */
export type GetAuthLogin200Response = AuthLoginError | AuthLoginOk;

export function GetAuthLogin200ResponseFromJSON(json: any): GetAuthLogin200Response {
    return GetAuthLogin200ResponseFromJSONTyped(json, false);
}

export function GetAuthLogin200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAuthLogin200Response {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAuthLoginError(json)) {
        return AuthLoginErrorFromJSONTyped(json, true);
    }
    if (instanceOfAuthLoginOk(json)) {
        return AuthLoginOkFromJSONTyped(json, true);
    }

    return {} as any;
}

export function GetAuthLogin200ResponseToJSON(json: any): any {
    return GetAuthLogin200ResponseToJSONTyped(json, false);
}

export function GetAuthLogin200ResponseToJSONTyped(value?: GetAuthLogin200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAuthLoginError(value)) {
        return AuthLoginErrorToJSON(value as AuthLoginError);
    }
    if (instanceOfAuthLoginOk(value)) {
        return AuthLoginOkToJSON(value as AuthLoginOk);
    }

    return {};
}

