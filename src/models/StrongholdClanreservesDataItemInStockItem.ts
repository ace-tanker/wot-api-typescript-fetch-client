/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { StrongholdClanreservesDataItemInStockItemBonusValuesItem } from './StrongholdClanreservesDataItemInStockItemBonusValuesItem.js';
import {
    StrongholdClanreservesDataItemInStockItemBonusValuesItemFromJSON,
    StrongholdClanreservesDataItemInStockItemBonusValuesItemFromJSONTyped,
    StrongholdClanreservesDataItemInStockItemBonusValuesItemToJSON,
    StrongholdClanreservesDataItemInStockItemBonusValuesItemToJSONTyped,
} from './StrongholdClanreservesDataItemInStockItemBonusValuesItem.js';

/**
 * 
 * @export
 * @interface StrongholdClanreservesDataItemInStockItem
 */
export interface StrongholdClanreservesDataItemInStockItem {
    /**
     * Number of clan Reserves of each level
     * @type {number}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    amount: number;
    /**
     * Reserve efficiencies
     * @type {Array<StrongholdClanreservesDataItemInStockItemBonusValuesItem>}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    bonus_values: Array<StrongholdClanreservesDataItemInStockItemBonusValuesItem>;
    /**
     * Indicates if the Reserve is only for Tier X vehicles
     * @type {boolean}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    x_level_only: boolean;
    /**
     * Status of clan Reserves of each level
     * @type {string}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    status: string | null;
    /**
     * Duration of clan Reserves of each level
     * @type {number}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    action_time: number | null;
    /**
     * Activation time of clan Reserves of each level
     * @type {number}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    activated_at: number | null;
    /**
     * Expiration time of clan Reserves of each level
     * @type {number}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    active_till: number | null;
    /**
     * Level of available clan Reserves
     * @type {number}
     * @memberof StrongholdClanreservesDataItemInStockItem
     */
    level: number;
}

/**
 * Check if a given object implements the StrongholdClanreservesDataItemInStockItem interface.
 */
export function instanceOfStrongholdClanreservesDataItemInStockItem(value: object): value is StrongholdClanreservesDataItemInStockItem {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('bonus_values' in value) || value['bonus_values'] === undefined) return false;
    if (!('x_level_only' in value) || value['x_level_only'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('action_time' in value) || value['action_time'] === undefined) return false;
    if (!('activated_at' in value) || value['activated_at'] === undefined) return false;
    if (!('active_till' in value) || value['active_till'] === undefined) return false;
    if (!('level' in value) || value['level'] === undefined) return false;
    return true;
}

export function StrongholdClanreservesDataItemInStockItemFromJSON(json: any): StrongholdClanreservesDataItemInStockItem {
    return StrongholdClanreservesDataItemInStockItemFromJSONTyped(json, false);
}

export function StrongholdClanreservesDataItemInStockItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StrongholdClanreservesDataItemInStockItem {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'bonus_values': ((json['bonus_values'] as Array<any>).map(StrongholdClanreservesDataItemInStockItemBonusValuesItemFromJSON)),
        'x_level_only': json['x_level_only'],
        'status': json['status'],
        'action_time': json['action_time'],
        'activated_at': json['activated_at'],
        'active_till': json['active_till'],
        'level': json['level'],
    };
}

export function StrongholdClanreservesDataItemInStockItemToJSON(json: any): StrongholdClanreservesDataItemInStockItem {
    return StrongholdClanreservesDataItemInStockItemToJSONTyped(json, false);
}

export function StrongholdClanreservesDataItemInStockItemToJSONTyped(value?: StrongholdClanreservesDataItemInStockItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'bonus_values': ((value['bonus_values'] as Array<any>).map(StrongholdClanreservesDataItemInStockItemBonusValuesItemToJSON)),
        'x_level_only': value['x_level_only'],
        'status': value['status'],
        'action_time': value['action_time'],
        'activated_at': value['activated_at'],
        'active_till': value['active_till'],
        'level': value['level'],
    };
}

export const StrongholdClanreservesDataItemInStockItemPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

