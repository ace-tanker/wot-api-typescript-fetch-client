/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue } from './EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue.js';
import {
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueFromJSON,
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueFromJSONTyped,
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueToJSON,
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueToJSONTyped,
} from './EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue.js';
import type { EncyclopediaPersonalmissionsDataValueOperationsValueReward } from './EncyclopediaPersonalmissionsDataValueOperationsValueReward.js';
import {
    EncyclopediaPersonalmissionsDataValueOperationsValueRewardFromJSON,
    EncyclopediaPersonalmissionsDataValueOperationsValueRewardFromJSONTyped,
    EncyclopediaPersonalmissionsDataValueOperationsValueRewardToJSON,
    EncyclopediaPersonalmissionsDataValueOperationsValueRewardToJSONTyped,
} from './EncyclopediaPersonalmissionsDataValueOperationsValueReward.js';

/**
 * Campaign operations
 * @export
 * @interface EncyclopediaPersonalmissionsDataValueOperationsValue
 */
export interface EncyclopediaPersonalmissionsDataValueOperationsValue {
    /**
     * Operation ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    operation_id: number;
    /**
     * Operation name
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    name: string;
    /**
     * Operation description
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    description: string;
    /**
     * Link to an operation image
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    image: string;
    /**
     * Number of mission branches of the operation
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    sets_count: number;
    /**
     * Number of missions in the branch
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    missions_in_set: number;
    /**
     * Next operation ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    next_id: number;
    /**
     * Number of branches until the next operation
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    sets_to_next: number;
    /**
     * 
     * @type {EncyclopediaPersonalmissionsDataValueOperationsValueReward}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    reward: EncyclopediaPersonalmissionsDataValueOperationsValueReward;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue | undefined; }}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValue
     */
    missions: { [key: string]: EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue | undefined; };
}

/**
 * Check if a given object implements the EncyclopediaPersonalmissionsDataValueOperationsValue interface.
 */
export function instanceOfEncyclopediaPersonalmissionsDataValueOperationsValue(value: object): value is EncyclopediaPersonalmissionsDataValueOperationsValue {
    if (!('operation_id' in value) || value['operation_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('sets_count' in value) || value['sets_count'] === undefined) return false;
    if (!('missions_in_set' in value) || value['missions_in_set'] === undefined) return false;
    if (!('next_id' in value) || value['next_id'] === undefined) return false;
    if (!('sets_to_next' in value) || value['sets_to_next'] === undefined) return false;
    if (!('reward' in value) || value['reward'] === undefined) return false;
    if (!('missions' in value) || value['missions'] === undefined) return false;
    return true;
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueFromJSON(json: any): EncyclopediaPersonalmissionsDataValueOperationsValue {
    return EncyclopediaPersonalmissionsDataValueOperationsValueFromJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaPersonalmissionsDataValueOperationsValue {
    if (json == null) {
        return json;
    }
    return {
        
        'operation_id': json['operation_id'],
        'name': json['name'],
        'description': json['description'],
        'image': json['image'],
        'sets_count': json['sets_count'],
        'missions_in_set': json['missions_in_set'],
        'next_id': json['next_id'],
        'sets_to_next': json['sets_to_next'],
        'reward': EncyclopediaPersonalmissionsDataValueOperationsValueRewardFromJSON(json['reward']),
        'missions': (mapValues(json['missions'], EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueFromJSON)),
    };
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueToJSON(json: any): EncyclopediaPersonalmissionsDataValueOperationsValue {
    return EncyclopediaPersonalmissionsDataValueOperationsValueToJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueToJSONTyped(value?: EncyclopediaPersonalmissionsDataValueOperationsValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'operation_id': value['operation_id'],
        'name': value['name'],
        'description': value['description'],
        'image': value['image'],
        'sets_count': value['sets_count'],
        'missions_in_set': value['missions_in_set'],
        'next_id': value['next_id'],
        'sets_to_next': value['sets_to_next'],
        'reward': EncyclopediaPersonalmissionsDataValueOperationsValueRewardToJSON(value['reward']),
        'missions': (mapValues(value['missions'], EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueToJSON)),
    };
}

export const EncyclopediaPersonalmissionsDataValueOperationsValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

