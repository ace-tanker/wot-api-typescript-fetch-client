/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { GlobalmapSeasonratingneighborsItem } from './GlobalmapSeasonratingneighborsItem.js';
import {
    GlobalmapSeasonratingneighborsItemFromJSON,
    GlobalmapSeasonratingneighborsItemFromJSONTyped,
    GlobalmapSeasonratingneighborsItemToJSON,
    GlobalmapSeasonratingneighborsItemToJSONTyped,
} from './GlobalmapSeasonratingneighborsItem.js';
import type { GlobalmapSeasonratingneighborsMeta } from './GlobalmapSeasonratingneighborsMeta.js';
import {
    GlobalmapSeasonratingneighborsMetaFromJSON,
    GlobalmapSeasonratingneighborsMetaFromJSONTyped,
    GlobalmapSeasonratingneighborsMetaToJSON,
    GlobalmapSeasonratingneighborsMetaToJSONTyped,
} from './GlobalmapSeasonratingneighborsMeta.js';

/**
 * 
 * @export
 * @interface GlobalmapSeasonratingneighborsOk
 */
export interface GlobalmapSeasonratingneighborsOk {
    /**
     * 
     * @type {string}
     * @memberof GlobalmapSeasonratingneighborsOk
     */
    status: GlobalmapSeasonratingneighborsOkStatusEnum;
    /**
     * 
     * @type {GlobalmapSeasonratingneighborsMeta}
     * @memberof GlobalmapSeasonratingneighborsOk
     */
    meta: GlobalmapSeasonratingneighborsMeta;
    /**
     * 
     * @type {Array<GlobalmapSeasonratingneighborsItem>}
     * @memberof GlobalmapSeasonratingneighborsOk
     */
    data: Array<GlobalmapSeasonratingneighborsItem>;
}


/**
 * @export
 */
export const GlobalmapSeasonratingneighborsOkStatusEnum = {
    Ok: 'ok'
} as const;
export type GlobalmapSeasonratingneighborsOkStatusEnum = typeof GlobalmapSeasonratingneighborsOkStatusEnum[keyof typeof GlobalmapSeasonratingneighborsOkStatusEnum];


/**
 * Check if a given object implements the GlobalmapSeasonratingneighborsOk interface.
 */
export function instanceOfGlobalmapSeasonratingneighborsOk(value: object): value is GlobalmapSeasonratingneighborsOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function GlobalmapSeasonratingneighborsOkFromJSON(json: any): GlobalmapSeasonratingneighborsOk {
    return GlobalmapSeasonratingneighborsOkFromJSONTyped(json, false);
}

export function GlobalmapSeasonratingneighborsOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapSeasonratingneighborsOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': GlobalmapSeasonratingneighborsMetaFromJSON(json['meta']),
        'data': ((json['data'] as Array<any>).map(GlobalmapSeasonratingneighborsItemFromJSON)),
    };
}

export function GlobalmapSeasonratingneighborsOkToJSON(json: any): GlobalmapSeasonratingneighborsOk {
    return GlobalmapSeasonratingneighborsOkToJSONTyped(json, false);
}

export function GlobalmapSeasonratingneighborsOkToJSONTyped(value?: GlobalmapSeasonratingneighborsOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': GlobalmapSeasonratingneighborsMetaToJSON(value['meta']),
        'data': ((value['data'] as Array<any>).map(GlobalmapSeasonratingneighborsItemToJSON)),
    };
}

