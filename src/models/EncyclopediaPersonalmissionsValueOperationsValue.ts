/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaPersonalmissionsValueOperationsValueReward } from './EncyclopediaPersonalmissionsValueOperationsValueReward.js';
import {
    EncyclopediaPersonalmissionsValueOperationsValueRewardFromJSON,
    EncyclopediaPersonalmissionsValueOperationsValueRewardFromJSONTyped,
    EncyclopediaPersonalmissionsValueOperationsValueRewardToJSON,
    EncyclopediaPersonalmissionsValueOperationsValueRewardToJSONTyped,
} from './EncyclopediaPersonalmissionsValueOperationsValueReward.js';
import type { EncyclopediaPersonalmissionsValueOperationsValueMissionsValue } from './EncyclopediaPersonalmissionsValueOperationsValueMissionsValue.js';
import {
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueFromJSON,
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueFromJSONTyped,
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueToJSON,
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueToJSONTyped,
} from './EncyclopediaPersonalmissionsValueOperationsValueMissionsValue.js';

/**
 * Campaign operations
 * @export
 * @interface EncyclopediaPersonalmissionsValueOperationsValue
 */
export interface EncyclopediaPersonalmissionsValueOperationsValue {
    /**
     * Operation ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    operationId: number;
    /**
     * Operation name
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    name: string;
    /**
     * Operation description
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    description: string;
    /**
     * Link to an operation image
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    image: string;
    /**
     * Number of mission branches of the operation
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    setsCount: number;
    /**
     * Number of missions in the branch
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    missionsInSet: number;
    /**
     * Next operation ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    nextId: number;
    /**
     * Number of branches until the next operation
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    setsToNext: number;
    /**
     * 
     * @type {EncyclopediaPersonalmissionsValueOperationsValueReward}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    reward: EncyclopediaPersonalmissionsValueOperationsValueReward;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaPersonalmissionsValueOperationsValueMissionsValue; }}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValue
     */
    missions: { [key: string]: EncyclopediaPersonalmissionsValueOperationsValueMissionsValue; };
}

/**
 * Check if a given object implements the EncyclopediaPersonalmissionsValueOperationsValue interface.
 */
export function instanceOfEncyclopediaPersonalmissionsValueOperationsValue(value: object): value is EncyclopediaPersonalmissionsValueOperationsValue {
    if (!('operationId' in value) || value['operationId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('setsCount' in value) || value['setsCount'] === undefined) return false;
    if (!('missionsInSet' in value) || value['missionsInSet'] === undefined) return false;
    if (!('nextId' in value) || value['nextId'] === undefined) return false;
    if (!('setsToNext' in value) || value['setsToNext'] === undefined) return false;
    if (!('reward' in value) || value['reward'] === undefined) return false;
    if (!('missions' in value) || value['missions'] === undefined) return false;
    return true;
}

export function EncyclopediaPersonalmissionsValueOperationsValueFromJSON(json: any): EncyclopediaPersonalmissionsValueOperationsValue {
    return EncyclopediaPersonalmissionsValueOperationsValueFromJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsValueOperationsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaPersonalmissionsValueOperationsValue {
    if (json == null) {
        return json;
    }
    return {
        
        'operationId': json['operation_id'],
        'name': json['name'],
        'description': json['description'],
        'image': json['image'],
        'setsCount': json['sets_count'],
        'missionsInSet': json['missions_in_set'],
        'nextId': json['next_id'],
        'setsToNext': json['sets_to_next'],
        'reward': EncyclopediaPersonalmissionsValueOperationsValueRewardFromJSON(json['reward']),
        'missions': (mapValues(json['missions'], EncyclopediaPersonalmissionsValueOperationsValueMissionsValueFromJSON)),
    };
}

export function EncyclopediaPersonalmissionsValueOperationsValueToJSON(json: any): EncyclopediaPersonalmissionsValueOperationsValue {
    return EncyclopediaPersonalmissionsValueOperationsValueToJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsValueOperationsValueToJSONTyped(value?: EncyclopediaPersonalmissionsValueOperationsValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'operation_id': value['operationId'],
        'name': value['name'],
        'description': value['description'],
        'image': value['image'],
        'sets_count': value['setsCount'],
        'missions_in_set': value['missionsInSet'],
        'next_id': value['nextId'],
        'sets_to_next': value['setsToNext'],
        'reward': EncyclopediaPersonalmissionsValueOperationsValueRewardToJSON(value['reward']),
        'missions': (mapValues(value['missions'], EncyclopediaPersonalmissionsValueOperationsValueMissionsValueToJSON)),
    };
}

