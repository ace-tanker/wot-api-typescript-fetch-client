/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Vehicle characteristics in Siege mode
 * @export
 * @interface EncyclopediaVehicleprofileValueSiege
 */
export interface EncyclopediaVehicleprofileValueSiege {
    /**
     * Aiming time (s)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    aimTime: number;
    /**
     * Standard suspension traverse speed
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    suspensionTraverseSpeed: number;
    /**
     * Depression angle (deg)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    moveDownArc: number;
    /**
     * Elevation angle (deg)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    moveUpArc: number;
    /**
     * Reload time (s)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    reloadTime: number;
    /**
     * Dispersion at 100 m (m)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    dispersion: number;
    /**
     * Top reverse speed (km/h)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    speedBackward: number;
    /**
     * Time needed to switch on the Siege mode
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    switchOffTime: number;
    /**
     * Time required to switch to Siege mode
     * @type {number}
     * @memberof EncyclopediaVehicleprofileValueSiege
     */
    switchOnTime: number;
}

/**
 * Check if a given object implements the EncyclopediaVehicleprofileValueSiege interface.
 */
export function instanceOfEncyclopediaVehicleprofileValueSiege(value: object): value is EncyclopediaVehicleprofileValueSiege {
    if (!('aimTime' in value) || value['aimTime'] === undefined) return false;
    if (!('suspensionTraverseSpeed' in value) || value['suspensionTraverseSpeed'] === undefined) return false;
    if (!('moveDownArc' in value) || value['moveDownArc'] === undefined) return false;
    if (!('moveUpArc' in value) || value['moveUpArc'] === undefined) return false;
    if (!('reloadTime' in value) || value['reloadTime'] === undefined) return false;
    if (!('dispersion' in value) || value['dispersion'] === undefined) return false;
    if (!('speedBackward' in value) || value['speedBackward'] === undefined) return false;
    if (!('switchOffTime' in value) || value['switchOffTime'] === undefined) return false;
    if (!('switchOnTime' in value) || value['switchOnTime'] === undefined) return false;
    return true;
}

export function EncyclopediaVehicleprofileValueSiegeFromJSON(json: any): EncyclopediaVehicleprofileValueSiege {
    return EncyclopediaVehicleprofileValueSiegeFromJSONTyped(json, false);
}

export function EncyclopediaVehicleprofileValueSiegeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaVehicleprofileValueSiege {
    if (json == null) {
        return json;
    }
    return {
        
        'aimTime': json['aim_time'],
        'suspensionTraverseSpeed': json['suspension_traverse_speed'],
        'moveDownArc': json['move_down_arc'],
        'moveUpArc': json['move_up_arc'],
        'reloadTime': json['reload_time'],
        'dispersion': json['dispersion'],
        'speedBackward': json['speed_backward'],
        'switchOffTime': json['switch_off_time'],
        'switchOnTime': json['switch_on_time'],
    };
}

export function EncyclopediaVehicleprofileValueSiegeToJSON(json: any): EncyclopediaVehicleprofileValueSiege {
    return EncyclopediaVehicleprofileValueSiegeToJSONTyped(json, false);
}

export function EncyclopediaVehicleprofileValueSiegeToJSONTyped(value?: EncyclopediaVehicleprofileValueSiege | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aim_time': value['aimTime'],
        'suspension_traverse_speed': value['suspensionTraverseSpeed'],
        'move_down_arc': value['moveDownArc'],
        'move_up_arc': value['moveUpArc'],
        'reload_time': value['reloadTime'],
        'dispersion': value['dispersion'],
        'speed_backward': value['speedBackward'],
        'switch_off_time': value['switchOffTime'],
        'switch_on_time': value['switchOnTime'],
    };
}

