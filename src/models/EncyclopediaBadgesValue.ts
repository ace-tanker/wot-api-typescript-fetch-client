/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaBadgesValueImages } from './EncyclopediaBadgesValueImages.js';
import {
    EncyclopediaBadgesValueImagesFromJSON,
    EncyclopediaBadgesValueImagesFromJSONTyped,
    EncyclopediaBadgesValueImagesToJSON,
    EncyclopediaBadgesValueImagesToJSONTyped,
} from './EncyclopediaBadgesValueImages.js';

/**
 * 
 * @export
 * @interface EncyclopediaBadgesValue
 */
export interface EncyclopediaBadgesValue {
    /**
     * Badge ID
     * @type {number}
     * @memberof EncyclopediaBadgesValue
     */
    badgeId: number;
    /**
     * Badge name
     * @type {string}
     * @memberof EncyclopediaBadgesValue
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EncyclopediaBadgesValue
     */
    description: string | null;
    /**
     * 
     * @type {EncyclopediaBadgesValueImages}
     * @memberof EncyclopediaBadgesValue
     */
    images: EncyclopediaBadgesValueImages;
}

/**
 * Check if a given object implements the EncyclopediaBadgesValue interface.
 */
export function instanceOfEncyclopediaBadgesValue(value: object): value is EncyclopediaBadgesValue {
    if (!('badgeId' in value) || value['badgeId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    return true;
}

export function EncyclopediaBadgesValueFromJSON(json: any): EncyclopediaBadgesValue {
    return EncyclopediaBadgesValueFromJSONTyped(json, false);
}

export function EncyclopediaBadgesValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaBadgesValue {
    if (json == null) {
        return json;
    }
    return {
        
        'badgeId': json['badge_id'],
        'name': json['name'],
        'description': json['description'],
        'images': EncyclopediaBadgesValueImagesFromJSON(json['images']),
    };
}

export function EncyclopediaBadgesValueToJSON(json: any): EncyclopediaBadgesValue {
    return EncyclopediaBadgesValueToJSONTyped(json, false);
}

export function EncyclopediaBadgesValueToJSONTyped(value?: EncyclopediaBadgesValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'badge_id': value['badgeId'],
        'name': value['name'],
        'description': value['description'],
        'images': EncyclopediaBadgesValueImagesToJSON(value['images']),
    };
}

