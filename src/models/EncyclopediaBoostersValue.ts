/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaBoostersValueImages } from './EncyclopediaBoostersValueImages.js';
import {
    EncyclopediaBoostersValueImagesFromJSON,
    EncyclopediaBoostersValueImagesFromJSONTyped,
    EncyclopediaBoostersValueImagesToJSON,
    EncyclopediaBoostersValueImagesToJSONTyped,
} from './EncyclopediaBoostersValueImages.js';

/**
 * 
 * @export
 * @interface EncyclopediaBoostersValue
 */
export interface EncyclopediaBoostersValue {
    /**
     * Personal Reserve ID
     * @type {number}
     * @memberof EncyclopediaBoostersValue
     */
    boosterId: number;
    /**
     * Personal Reserve name
     * @type {string}
     * @memberof EncyclopediaBoostersValue
     */
    name: string;
    /**
     * Personal Reserve description
     * @type {string}
     * @memberof EncyclopediaBoostersValue
     */
    description: string;
    /**
     * 
     * @type {EncyclopediaBoostersValueImages}
     * @memberof EncyclopediaBoostersValue
     */
    images: EncyclopediaBoostersValueImages;
    /**
     * Personal Reserve duration in seconds
     * @type {number}
     * @memberof EncyclopediaBoostersValue
     */
    lifetime: number;
    /**
     * Resource affected by Personal Reserve. Valid values: credits, experience, crew_experience, free_experience.
     * @type {string}
     * @memberof EncyclopediaBoostersValue
     */
    resource: string;
    /**
     * Personal Reserve auto activation flag
     * @type {boolean}
     * @memberof EncyclopediaBoostersValue
     */
    isAuto: boolean;
    /**
     * 
     * @type {number}
     * @memberof EncyclopediaBoostersValue
     */
    expiresAt: number | null;
    /**
     * Cost in credits
     * @type {number}
     * @memberof EncyclopediaBoostersValue
     */
    priceCredit: number;
    /**
     * Price in gold
     * @type {number}
     * @memberof EncyclopediaBoostersValue
     */
    priceGold: number;
}

/**
 * Check if a given object implements the EncyclopediaBoostersValue interface.
 */
export function instanceOfEncyclopediaBoostersValue(value: object): value is EncyclopediaBoostersValue {
    if (!('boosterId' in value) || value['boosterId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    if (!('lifetime' in value) || value['lifetime'] === undefined) return false;
    if (!('resource' in value) || value['resource'] === undefined) return false;
    if (!('isAuto' in value) || value['isAuto'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('priceCredit' in value) || value['priceCredit'] === undefined) return false;
    if (!('priceGold' in value) || value['priceGold'] === undefined) return false;
    return true;
}

export function EncyclopediaBoostersValueFromJSON(json: any): EncyclopediaBoostersValue {
    return EncyclopediaBoostersValueFromJSONTyped(json, false);
}

export function EncyclopediaBoostersValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaBoostersValue {
    if (json == null) {
        return json;
    }
    return {
        
        'boosterId': json['booster_id'],
        'name': json['name'],
        'description': json['description'],
        'images': EncyclopediaBoostersValueImagesFromJSON(json['images']),
        'lifetime': json['lifetime'],
        'resource': json['resource'],
        'isAuto': json['is_auto'],
        'expiresAt': json['expires_at'],
        'priceCredit': json['price_credit'],
        'priceGold': json['price_gold'],
    };
}

export function EncyclopediaBoostersValueToJSON(json: any): EncyclopediaBoostersValue {
    return EncyclopediaBoostersValueToJSONTyped(json, false);
}

export function EncyclopediaBoostersValueToJSONTyped(value?: EncyclopediaBoostersValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'booster_id': value['boosterId'],
        'name': value['name'],
        'description': value['description'],
        'images': EncyclopediaBoostersValueImagesToJSON(value['images']),
        'lifetime': value['lifetime'],
        'resource': value['resource'],
        'is_auto': value['isAuto'],
        'expires_at': value['expiresAt'],
        'price_credit': value['priceCredit'],
        'price_gold': value['priceGold'],
    };
}

