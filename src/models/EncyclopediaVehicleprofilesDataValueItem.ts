/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface EncyclopediaVehicleprofilesDataValueItem
 */
export interface EncyclopediaVehicleprofilesDataValueItem {
    /**
     * Vehicle Configuration ID
     * @type {string}
     * @memberof EncyclopediaVehicleprofilesDataValueItem
     */
    profile_id: string;
    /**
     * Vehicle ID
     * @type {number}
     * @memberof EncyclopediaVehicleprofilesDataValueItem
     */
    tank_id: number;
    /**
     * Standard configuration
     * @type {boolean}
     * @memberof EncyclopediaVehicleprofilesDataValueItem
     */
    is_default: boolean;
    /**
     * Cost in credits
     * @type {number}
     * @memberof EncyclopediaVehicleprofilesDataValueItem
     */
    price_credit: number;
}

/**
 * Check if a given object implements the EncyclopediaVehicleprofilesDataValueItem interface.
 */
export function instanceOfEncyclopediaVehicleprofilesDataValueItem(value: object): value is EncyclopediaVehicleprofilesDataValueItem {
    if (!('profile_id' in value) || value['profile_id'] === undefined) return false;
    if (!('tank_id' in value) || value['tank_id'] === undefined) return false;
    if (!('is_default' in value) || value['is_default'] === undefined) return false;
    if (!('price_credit' in value) || value['price_credit'] === undefined) return false;
    return true;
}

export function EncyclopediaVehicleprofilesDataValueItemFromJSON(json: any): EncyclopediaVehicleprofilesDataValueItem {
    return EncyclopediaVehicleprofilesDataValueItemFromJSONTyped(json, false);
}

export function EncyclopediaVehicleprofilesDataValueItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaVehicleprofilesDataValueItem {
    if (json == null) {
        return json;
    }
    return {
        
        'profile_id': json['profile_id'],
        'tank_id': json['tank_id'],
        'is_default': json['is_default'],
        'price_credit': json['price_credit'],
    };
}

export function EncyclopediaVehicleprofilesDataValueItemToJSON(json: any): EncyclopediaVehicleprofilesDataValueItem {
    return EncyclopediaVehicleprofilesDataValueItemToJSONTyped(json, false);
}

export function EncyclopediaVehicleprofilesDataValueItemToJSONTyped(value?: EncyclopediaVehicleprofilesDataValueItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'profile_id': value['profile_id'],
        'tank_id': value['tank_id'],
        'is_default': value['is_default'],
        'price_credit': value['price_credit'],
    };
}

export const EncyclopediaVehicleprofilesDataValueItemPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

