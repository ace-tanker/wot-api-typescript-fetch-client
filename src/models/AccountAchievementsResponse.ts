/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AccountAchievementsError } from './AccountAchievementsError.js';
import {
    instanceOfAccountAchievementsError,
    AccountAchievementsErrorFromJSON,
    AccountAchievementsErrorFromJSONTyped,
    AccountAchievementsErrorToJSON,
} from './AccountAchievementsError.js';
import type { AccountAchievementsOk } from './AccountAchievementsOk.js';
import {
    instanceOfAccountAchievementsOk,
    AccountAchievementsOkFromJSON,
    AccountAchievementsOkFromJSONTyped,
    AccountAchievementsOkToJSON,
} from './AccountAchievementsOk.js';

/**
 * @type AccountAchievementsResponse
 * 
 * @export
 */
export type AccountAchievementsResponse = AccountAchievementsError | AccountAchievementsOk;

export function AccountAchievementsResponseFromJSON(json: any): AccountAchievementsResponse {
    return AccountAchievementsResponseFromJSONTyped(json, false);
}

export function AccountAchievementsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountAchievementsResponse {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAccountAchievementsError(json)) {
        return AccountAchievementsErrorFromJSONTyped(json, true);
    }
    if (instanceOfAccountAchievementsOk(json)) {
        return AccountAchievementsOkFromJSONTyped(json, true);
    }

    return {} as any;
}

export function AccountAchievementsResponseToJSON(json: any): any {
    return AccountAchievementsResponseToJSONTyped(json, false);
}

export function AccountAchievementsResponseToJSONTyped(value?: AccountAchievementsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAccountAchievementsError(value)) {
        return AccountAchievementsErrorToJSON(value as AccountAchievementsError);
    }
    if (instanceOfAccountAchievementsOk(value)) {
        return AccountAchievementsOkToJSON(value as AccountAchievementsOk);
    }

    return {};
}

