/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { StrongholdClanreservesDataItemInStockItem } from './StrongholdClanreservesDataItemInStockItem.js';
import {
    StrongholdClanreservesDataItemInStockItemFromJSON,
    StrongholdClanreservesDataItemInStockItemFromJSONTyped,
    StrongholdClanreservesDataItemInStockItemToJSON,
    StrongholdClanreservesDataItemInStockItemToJSONTyped,
} from './StrongholdClanreservesDataItemInStockItem.js';

/**
 * 
 * @export
 * @interface StrongholdClanreservesDataItem
 */
export interface StrongholdClanreservesDataItem {
    /**
     * Reserve name
     * @type {string}
     * @memberof StrongholdClanreservesDataItem
     */
    name: string;
    /**
     * Reserve type
     * @type {string}
     * @memberof StrongholdClanreservesDataItem
     */
    type: string;
    /**
     * Indicates if the Reserve is a One-Time-Effect Reserve
     * @type {boolean}
     * @memberof StrongholdClanreservesDataItem
     */
    disposable: boolean;
    /**
     * Reserve efficiency type
     * @type {string}
     * @memberof StrongholdClanreservesDataItem
     */
    bonus_type: string;
    /**
     * URL to icon
     * @type {string}
     * @memberof StrongholdClanreservesDataItem
     */
    icon: string;
    /**
     * Available clan Reserves and their status
     * @type {Array<StrongholdClanreservesDataItemInStockItem>}
     * @memberof StrongholdClanreservesDataItem
     */
    in_stock: Array<StrongholdClanreservesDataItemInStockItem>;
}

/**
 * Check if a given object implements the StrongholdClanreservesDataItem interface.
 */
export function instanceOfStrongholdClanreservesDataItem(value: object): value is StrongholdClanreservesDataItem {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('disposable' in value) || value['disposable'] === undefined) return false;
    if (!('bonus_type' in value) || value['bonus_type'] === undefined) return false;
    if (!('icon' in value) || value['icon'] === undefined) return false;
    if (!('in_stock' in value) || value['in_stock'] === undefined) return false;
    return true;
}

export function StrongholdClanreservesDataItemFromJSON(json: any): StrongholdClanreservesDataItem {
    return StrongholdClanreservesDataItemFromJSONTyped(json, false);
}

export function StrongholdClanreservesDataItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StrongholdClanreservesDataItem {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'disposable': json['disposable'],
        'bonus_type': json['bonus_type'],
        'icon': json['icon'],
        'in_stock': ((json['in_stock'] as Array<any>).map(StrongholdClanreservesDataItemInStockItemFromJSON)),
    };
}

export function StrongholdClanreservesDataItemToJSON(json: any): StrongholdClanreservesDataItem {
    return StrongholdClanreservesDataItemToJSONTyped(json, false);
}

export function StrongholdClanreservesDataItemToJSONTyped(value?: StrongholdClanreservesDataItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'disposable': value['disposable'],
        'bonus_type': value['bonus_type'],
        'icon': value['icon'],
        'in_stock': ((value['in_stock'] as Array<any>).map(StrongholdClanreservesDataItemInStockItemToJSON)),
    };
}

export const StrongholdClanreservesDataItemPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

