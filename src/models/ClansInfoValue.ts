/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ClansInfoValueMembersItem } from './ClansInfoValueMembersItem.js';
import {
    ClansInfoValueMembersItemFromJSON,
    ClansInfoValueMembersItemFromJSONTyped,
    ClansInfoValueMembersItemToJSON,
    ClansInfoValueMembersItemToJSONTyped,
} from './ClansInfoValueMembersItem.js';
import type { ClansInfoValuePrivate } from './ClansInfoValuePrivate.js';
import {
    ClansInfoValuePrivateFromJSON,
    ClansInfoValuePrivateFromJSONTyped,
    ClansInfoValuePrivateToJSON,
    ClansInfoValuePrivateToJSONTyped,
} from './ClansInfoValuePrivate.js';
import type { ClansInfoValueEmblems } from './ClansInfoValueEmblems.js';
import {
    ClansInfoValueEmblemsFromJSON,
    ClansInfoValueEmblemsFromJSONTyped,
    ClansInfoValueEmblemsToJSON,
    ClansInfoValueEmblemsToJSONTyped,
} from './ClansInfoValueEmblems.js';

/**
 * 
 * @export
 * @interface ClansInfoValue
 */
export interface ClansInfoValue {
    /**
     * Clan ID
     * @type {number}
     * @memberof ClansInfoValue
     */
    clanId: number;
    /**
     * Clan name
     * @type {string}
     * @memberof ClansInfoValue
     */
    name: string;
    /**
     * Clan tag
     * @type {string}
     * @memberof ClansInfoValue
     */
    tag: string;
    /**
     * Clan creation date
     * @type {number}
     * @memberof ClansInfoValue
     */
    createdAt: number;
    /**
     * Clan color in HEX #RRGGBB
     * @type {string}
     * @memberof ClansInfoValue
     */
    color: string;
    /**
     * Number of clan members
     * @type {number}
     * @memberof ClansInfoValue
     */
    membersCount: number;
    /**
     * 
     * @type {ClansInfoValueEmblems}
     * @memberof ClansInfoValue
     */
    emblems: ClansInfoValueEmblems | null;
    /**
     * Old clan name
     * @type {string}
     * @memberof ClansInfoValue
     */
    oldName: string;
    /**
     * Old clan tag
     * @type {string}
     * @memberof ClansInfoValue
     */
    oldTag: string;
    /**
     * Time (UTC) when clan name was changed
     * @type {number}
     * @memberof ClansInfoValue
     */
    renamedAt: number;
    /**
     * Clan description
     * @type {string}
     * @memberof ClansInfoValue
     */
    description: string;
    /**
     * Clan description in HTML
     * @type {string}
     * @memberof ClansInfoValue
     */
    descriptionHtml: string;
    /**
     * Clan motto
     * @type {string}
     * @memberof ClansInfoValue
     */
    motto: string;
    /**
     * Clan has been deleted. The deleted clan data contains valid values for the following fields only: **clan_id**, **is_clan_disbanded**, **updated_at**.
     * @type {boolean}
     * @memberof ClansInfoValue
     */
    isClanDisbanded: boolean;
    /**
     * Clan can invite players
     * @type {boolean}
     * @memberof ClansInfoValue
     */
    acceptsJoinRequests: boolean;
    /**
     * Time when clan details were updated
     * @type {number}
     * @memberof ClansInfoValue
     */
    updatedAt: number;
    /**
     * Clan creator ID
     * @type {number}
     * @memberof ClansInfoValue
     */
    creatorId: number;
    /**
     * Clan creator's name
     * @type {string}
     * @memberof ClansInfoValue
     */
    creatorName: string;
    /**
     * Clan Commander ID
     * @type {number}
     * @memberof ClansInfoValue
     */
    leaderId: number;
    /**
     * Commander's name
     * @type {string}
     * @memberof ClansInfoValue
     */
    leaderName: string;
    /**
     * Information on clan members. Field format depends on members_key input parameter.
     * @type {Array<ClansInfoValueMembersItem>}
     * @memberof ClansInfoValue
     */
    members: Array<ClansInfoValueMembersItem> | null;
    /**
     * 
     * @type {ClansInfoValuePrivate}
     * @memberof ClansInfoValue
     */
    _private: ClansInfoValuePrivate | null;
}

/**
 * Check if a given object implements the ClansInfoValue interface.
 */
export function instanceOfClansInfoValue(value: object): value is ClansInfoValue {
    if (!('clanId' in value) || value['clanId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('membersCount' in value) || value['membersCount'] === undefined) return false;
    if (!('emblems' in value) || value['emblems'] === undefined) return false;
    if (!('oldName' in value) || value['oldName'] === undefined) return false;
    if (!('oldTag' in value) || value['oldTag'] === undefined) return false;
    if (!('renamedAt' in value) || value['renamedAt'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('descriptionHtml' in value) || value['descriptionHtml'] === undefined) return false;
    if (!('motto' in value) || value['motto'] === undefined) return false;
    if (!('isClanDisbanded' in value) || value['isClanDisbanded'] === undefined) return false;
    if (!('acceptsJoinRequests' in value) || value['acceptsJoinRequests'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('creatorId' in value) || value['creatorId'] === undefined) return false;
    if (!('creatorName' in value) || value['creatorName'] === undefined) return false;
    if (!('leaderId' in value) || value['leaderId'] === undefined) return false;
    if (!('leaderName' in value) || value['leaderName'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    if (!('_private' in value) || value['_private'] === undefined) return false;
    return true;
}

export function ClansInfoValueFromJSON(json: any): ClansInfoValue {
    return ClansInfoValueFromJSONTyped(json, false);
}

export function ClansInfoValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClansInfoValue {
    if (json == null) {
        return json;
    }
    return {
        
        'clanId': json['clan_id'],
        'name': json['name'],
        'tag': json['tag'],
        'createdAt': json['created_at'],
        'color': json['color'],
        'membersCount': json['members_count'],
        'emblems': ClansInfoValueEmblemsFromJSON(json['emblems']),
        'oldName': json['old_name'],
        'oldTag': json['old_tag'],
        'renamedAt': json['renamed_at'],
        'description': json['description'],
        'descriptionHtml': json['description_html'],
        'motto': json['motto'],
        'isClanDisbanded': json['is_clan_disbanded'],
        'acceptsJoinRequests': json['accepts_join_requests'],
        'updatedAt': json['updated_at'],
        'creatorId': json['creator_id'],
        'creatorName': json['creator_name'],
        'leaderId': json['leader_id'],
        'leaderName': json['leader_name'],
        'members': (json['members'] == null ? null : (json['members'] as Array<any>).map(ClansInfoValueMembersItemFromJSON)),
        '_private': ClansInfoValuePrivateFromJSON(json['private']),
    };
}

export function ClansInfoValueToJSON(json: any): ClansInfoValue {
    return ClansInfoValueToJSONTyped(json, false);
}

export function ClansInfoValueToJSONTyped(value?: ClansInfoValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clan_id': value['clanId'],
        'name': value['name'],
        'tag': value['tag'],
        'created_at': value['createdAt'],
        'color': value['color'],
        'members_count': value['membersCount'],
        'emblems': ClansInfoValueEmblemsToJSON(value['emblems']),
        'old_name': value['oldName'],
        'old_tag': value['oldTag'],
        'renamed_at': value['renamedAt'],
        'description': value['description'],
        'description_html': value['descriptionHtml'],
        'motto': value['motto'],
        'is_clan_disbanded': value['isClanDisbanded'],
        'accepts_join_requests': value['acceptsJoinRequests'],
        'updated_at': value['updatedAt'],
        'creator_id': value['creatorId'],
        'creator_name': value['creatorName'],
        'leader_id': value['leaderId'],
        'leader_name': value['leaderName'],
        'members': (value['members'] == null ? null : (value['members'] as Array<any>).map(ClansInfoValueMembersItemToJSON)),
        'private': ClansInfoValuePrivateToJSON(value['_private']),
    };
}

