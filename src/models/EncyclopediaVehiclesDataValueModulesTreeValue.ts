/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Module research information
 * @export
 * @interface EncyclopediaVehiclesDataValueModulesTreeValue
 */
export interface EncyclopediaVehiclesDataValueModulesTreeValue {
    /**
     * Module ID
     * @type {number}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    module_id: number;
    /**
     * Module name
     * @type {string}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    name: string;
    /**
     * Module type
     * @type {string}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    type: string;
    /**
     * Cost in credits
     * @type {number}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    price_credit: number;
    /**
     * Research cost
     * @type {number}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    price_xp: number;
    /**
     * List of vehicle IDs available after research of the module
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    next_tanks: Array<number> | null;
    /**
     * List of module IDs available after research of the module
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    next_modules: Array<number> | null;
    /**
     * Indicates if the module is basic
     * @type {boolean}
     * @memberof EncyclopediaVehiclesDataValueModulesTreeValue
     */
    is_default: boolean;
}

/**
 * Check if a given object implements the EncyclopediaVehiclesDataValueModulesTreeValue interface.
 */
export function instanceOfEncyclopediaVehiclesDataValueModulesTreeValue(value: object): value is EncyclopediaVehiclesDataValueModulesTreeValue {
    if (!('module_id' in value) || value['module_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('price_credit' in value) || value['price_credit'] === undefined) return false;
    if (!('price_xp' in value) || value['price_xp'] === undefined) return false;
    if (!('next_tanks' in value) || value['next_tanks'] === undefined) return false;
    if (!('next_modules' in value) || value['next_modules'] === undefined) return false;
    if (!('is_default' in value) || value['is_default'] === undefined) return false;
    return true;
}

export function EncyclopediaVehiclesDataValueModulesTreeValueFromJSON(json: any): EncyclopediaVehiclesDataValueModulesTreeValue {
    return EncyclopediaVehiclesDataValueModulesTreeValueFromJSONTyped(json, false);
}

export function EncyclopediaVehiclesDataValueModulesTreeValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaVehiclesDataValueModulesTreeValue {
    if (json == null) {
        return json;
    }
    return {
        
        'module_id': json['module_id'],
        'name': json['name'],
        'type': json['type'],
        'price_credit': json['price_credit'],
        'price_xp': json['price_xp'],
        'next_tanks': json['next_tanks'] == null ? null : json['next_tanks'],
        'next_modules': json['next_modules'] == null ? null : json['next_modules'],
        'is_default': json['is_default'],
    };
}

export function EncyclopediaVehiclesDataValueModulesTreeValueToJSON(json: any): EncyclopediaVehiclesDataValueModulesTreeValue {
    return EncyclopediaVehiclesDataValueModulesTreeValueToJSONTyped(json, false);
}

export function EncyclopediaVehiclesDataValueModulesTreeValueToJSONTyped(value?: EncyclopediaVehiclesDataValueModulesTreeValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'module_id': value['module_id'],
        'name': value['name'],
        'type': value['type'],
        'price_credit': value['price_credit'],
        'price_xp': value['price_xp'],
        'next_tanks': value['next_tanks'],
        'next_modules': value['next_modules'],
        'is_default': value['is_default'],
    };
}

export const EncyclopediaVehiclesDataValueModulesTreeValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

