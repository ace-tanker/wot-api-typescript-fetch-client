/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Rewards grouped by mission conditions
 * @export
 * @interface EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
 */
export interface EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue {
    /**
     * Mission conditions
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    conditions: string;
    /**
     * Credits
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    credits: number | null;
    /**
     * List of equipment or consumables in the following format: Idâ€“number of items
     * @type {{ [key: string]: number | undefined; }}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    items: { [key: string]: number | undefined; };
    /**
     * Days of Premium Account
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    premium: number | null;
    /**
     * Free Experience
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    free_xp: number | null;
    /**
     * Tokens
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    tokens: number;
    /**
     * Slots
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    slots: number | null;
    /**
     * Bunks in Barracks
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue
     */
    berths: number | null;
}

/**
 * Check if a given object implements the EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue interface.
 */
export function instanceOfEncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue(value: object): value is EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue {
    if (!('conditions' in value) || value['conditions'] === undefined) return false;
    if (!('credits' in value) || value['credits'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('premium' in value) || value['premium'] === undefined) return false;
    if (!('free_xp' in value) || value['free_xp'] === undefined) return false;
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    if (!('slots' in value) || value['slots'] === undefined) return false;
    if (!('berths' in value) || value['berths'] === undefined) return false;
    return true;
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueFromJSON(json: any): EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue {
    return EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueFromJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue {
    if (json == null) {
        return json;
    }
    return {
        
        'conditions': json['conditions'],
        'credits': json['credits'],
        'items': json['items'],
        'premium': json['premium'],
        'free_xp': json['free_xp'],
        'tokens': json['tokens'],
        'slots': json['slots'],
        'berths': json['berths'],
    };
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueToJSON(json: any): EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue {
    return EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueToJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueToJSONTyped(value?: EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conditions': value['conditions'],
        'credits': value['credits'],
        'items': value['items'],
        'premium': value['premium'],
        'free_xp': value['free_xp'],
        'tokens': value['tokens'],
        'slots': value['slots'],
        'berths': value['berths'],
    };
}

export const EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

