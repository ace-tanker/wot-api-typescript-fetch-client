/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { AccountTanksValueItem } from './AccountTanksValueItem.js';
import {
    AccountTanksValueItemFromJSON,
    AccountTanksValueItemFromJSONTyped,
    AccountTanksValueItemToJSON,
    AccountTanksValueItemToJSONTyped,
} from './AccountTanksValueItem.js';
import type { AccountTanksMeta } from './AccountTanksMeta.js';
import {
    AccountTanksMetaFromJSON,
    AccountTanksMetaFromJSONTyped,
    AccountTanksMetaToJSON,
    AccountTanksMetaToJSONTyped,
} from './AccountTanksMeta.js';

/**
 * 
 * @export
 * @interface AccountTanksOk
 */
export interface AccountTanksOk {
    /**
     * 
     * @type {string}
     * @memberof AccountTanksOk
     */
    status: AccountTanksOkStatusEnum;
    /**
     * 
     * @type {AccountTanksMeta}
     * @memberof AccountTanksOk
     */
    meta: AccountTanksMeta;
    /**
     * 
     * @type {{ [key: string]: Array<AccountTanksValueItem> | null; }}
     * @memberof AccountTanksOk
     */
    data: { [key: string]: Array<AccountTanksValueItem> | null; };
}


/**
 * @export
 */
export const AccountTanksOkStatusEnum = {
    Ok: 'ok'
} as const;
export type AccountTanksOkStatusEnum = typeof AccountTanksOkStatusEnum[keyof typeof AccountTanksOkStatusEnum];


/**
 * Check if a given object implements the AccountTanksOk interface.
 */
export function instanceOfAccountTanksOk(value: object): value is AccountTanksOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function AccountTanksOkFromJSON(json: any): AccountTanksOk {
    return AccountTanksOkFromJSONTyped(json, false);
}

export function AccountTanksOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountTanksOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': AccountTanksMetaFromJSON(json['meta']),
        'data': json['data'],
    };
}

export function AccountTanksOkToJSON(json: any): AccountTanksOk {
    return AccountTanksOkToJSONTyped(json, false);
}

export function AccountTanksOkToJSONTyped(value?: AccountTanksOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': AccountTanksMetaToJSON(value['meta']),
        'data': value['data'],
    };
}

