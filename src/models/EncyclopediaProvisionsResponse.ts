/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { EncyclopediaProvisionsError } from './EncyclopediaProvisionsError.js';
import {
    instanceOfEncyclopediaProvisionsError,
    EncyclopediaProvisionsErrorFromJSON,
    EncyclopediaProvisionsErrorFromJSONTyped,
    EncyclopediaProvisionsErrorToJSON,
} from './EncyclopediaProvisionsError.js';
import type { EncyclopediaProvisionsOk } from './EncyclopediaProvisionsOk.js';
import {
    instanceOfEncyclopediaProvisionsOk,
    EncyclopediaProvisionsOkFromJSON,
    EncyclopediaProvisionsOkFromJSONTyped,
    EncyclopediaProvisionsOkToJSON,
} from './EncyclopediaProvisionsOk.js';

/**
 * @type EncyclopediaProvisionsResponse
 * 
 * @export
 */
export type EncyclopediaProvisionsResponse = EncyclopediaProvisionsError | EncyclopediaProvisionsOk;

export function EncyclopediaProvisionsResponseFromJSON(json: any): EncyclopediaProvisionsResponse {
    return EncyclopediaProvisionsResponseFromJSONTyped(json, false);
}

export function EncyclopediaProvisionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaProvisionsResponse {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfEncyclopediaProvisionsError(json)) {
        return EncyclopediaProvisionsErrorFromJSONTyped(json, true);
    }
    if (instanceOfEncyclopediaProvisionsOk(json)) {
        return EncyclopediaProvisionsOkFromJSONTyped(json, true);
    }

    return {} as any;
}

export function EncyclopediaProvisionsResponseToJSON(json: any): any {
    return EncyclopediaProvisionsResponseToJSONTyped(json, false);
}

export function EncyclopediaProvisionsResponseToJSONTyped(value?: EncyclopediaProvisionsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfEncyclopediaProvisionsError(value)) {
        return EncyclopediaProvisionsErrorToJSON(value as EncyclopediaProvisionsError);
    }
    if (instanceOfEncyclopediaProvisionsOk(value)) {
        return EncyclopediaProvisionsOkToJSON(value as EncyclopediaProvisionsOk);
    }

    return {};
}

