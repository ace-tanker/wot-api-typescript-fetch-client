/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaModulesDataValueDefaultProfile } from './EncyclopediaModulesDataValueDefaultProfile.js';
import {
    EncyclopediaModulesDataValueDefaultProfileFromJSON,
    EncyclopediaModulesDataValueDefaultProfileFromJSONTyped,
    EncyclopediaModulesDataValueDefaultProfileToJSON,
    EncyclopediaModulesDataValueDefaultProfileToJSONTyped,
} from './EncyclopediaModulesDataValueDefaultProfile.js';

/**
 * 
 * @export
 * @interface EncyclopediaModulesDataValue
 */
export interface EncyclopediaModulesDataValue {
    /**
     * Module ID
     * @type {number}
     * @memberof EncyclopediaModulesDataValue
     */
    module_id: number;
    /**
     * Module type
     * @type {string}
     * @memberof EncyclopediaModulesDataValue
     */
    type: string;
    /**
     * Module name
     * @type {string}
     * @memberof EncyclopediaModulesDataValue
     */
    name: string;
    /**
     * Cost in credits
     * @type {number}
     * @memberof EncyclopediaModulesDataValue
     */
    price_credit: number;
    /**
     * Image link
     * @type {string}
     * @memberof EncyclopediaModulesDataValue
     */
    image: string;
    /**
     * Weight (kg)
     * @type {number}
     * @memberof EncyclopediaModulesDataValue
     */
    weight: number;
    /**
     * Tier
     * @type {number}
     * @memberof EncyclopediaModulesDataValue
     */
    tier: number;
    /**
     * Nation
     * @type {string}
     * @memberof EncyclopediaModulesDataValue
     */
    nation: string;
    /**
     * Vehicles compatible with module
     * @type {Array<number>}
     * @memberof EncyclopediaModulesDataValue
     */
    tanks: Array<number>;
    /**
     * 
     * @type {EncyclopediaModulesDataValueDefaultProfile}
     * @memberof EncyclopediaModulesDataValue
     */
    default_profile?: EncyclopediaModulesDataValueDefaultProfile;
}

/**
 * Check if a given object implements the EncyclopediaModulesDataValue interface.
 */
export function instanceOfEncyclopediaModulesDataValue(value: object): value is EncyclopediaModulesDataValue {
    if (!('module_id' in value) || value['module_id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('price_credit' in value) || value['price_credit'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('weight' in value) || value['weight'] === undefined) return false;
    if (!('tier' in value) || value['tier'] === undefined) return false;
    if (!('nation' in value) || value['nation'] === undefined) return false;
    if (!('tanks' in value) || value['tanks'] === undefined) return false;
    return true;
}

export function EncyclopediaModulesDataValueFromJSON(json: any): EncyclopediaModulesDataValue {
    return EncyclopediaModulesDataValueFromJSONTyped(json, false);
}

export function EncyclopediaModulesDataValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaModulesDataValue {
    if (json == null) {
        return json;
    }
    return {
        
        'module_id': json['module_id'],
        'type': json['type'],
        'name': json['name'],
        'price_credit': json['price_credit'],
        'image': json['image'],
        'weight': json['weight'],
        'tier': json['tier'],
        'nation': json['nation'],
        'tanks': json['tanks'],
        'default_profile': json['default_profile'] == null ? undefined : EncyclopediaModulesDataValueDefaultProfileFromJSON(json['default_profile']),
    };
}

export function EncyclopediaModulesDataValueToJSON(json: any): EncyclopediaModulesDataValue {
    return EncyclopediaModulesDataValueToJSONTyped(json, false);
}

export function EncyclopediaModulesDataValueToJSONTyped(value?: EncyclopediaModulesDataValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'module_id': value['module_id'],
        'type': value['type'],
        'name': value['name'],
        'price_credit': value['price_credit'],
        'image': value['image'],
        'weight': value['weight'],
        'tier': value['tier'],
        'nation': value['nation'],
        'tanks': value['tanks'],
        'default_profile': EncyclopediaModulesDataValueDefaultProfileToJSON(value['default_profile']),
    };
}

export const EncyclopediaModulesDataValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

