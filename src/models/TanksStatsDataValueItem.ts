/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TanksStatsDataValueItemRankedBattles } from './TanksStatsDataValueItemRankedBattles.js';
import {
    TanksStatsDataValueItemRankedBattlesFromJSON,
    TanksStatsDataValueItemRankedBattlesFromJSONTyped,
    TanksStatsDataValueItemRankedBattlesToJSON,
    TanksStatsDataValueItemRankedBattlesToJSONTyped,
} from './TanksStatsDataValueItemRankedBattles.js';
import type { TanksStatsDataValueItemRegularTeam } from './TanksStatsDataValueItemRegularTeam.js';
import {
    TanksStatsDataValueItemRegularTeamFromJSON,
    TanksStatsDataValueItemRegularTeamFromJSONTyped,
    TanksStatsDataValueItemRegularTeamToJSON,
    TanksStatsDataValueItemRegularTeamToJSONTyped,
} from './TanksStatsDataValueItemRegularTeam.js';
import type { TanksStatsDataValueItemFallout } from './TanksStatsDataValueItemFallout.js';
import {
    TanksStatsDataValueItemFalloutFromJSON,
    TanksStatsDataValueItemFalloutFromJSONTyped,
    TanksStatsDataValueItemFalloutToJSON,
    TanksStatsDataValueItemFalloutToJSONTyped,
} from './TanksStatsDataValueItemFallout.js';
import type { TanksStatsDataValueItemClan } from './TanksStatsDataValueItemClan.js';
import {
    TanksStatsDataValueItemClanFromJSON,
    TanksStatsDataValueItemClanFromJSONTyped,
    TanksStatsDataValueItemClanToJSON,
    TanksStatsDataValueItemClanToJSONTyped,
} from './TanksStatsDataValueItemClan.js';
import type { TanksStatsDataValueItemStrongholdDefense } from './TanksStatsDataValueItemStrongholdDefense.js';
import {
    TanksStatsDataValueItemStrongholdDefenseFromJSON,
    TanksStatsDataValueItemStrongholdDefenseFromJSONTyped,
    TanksStatsDataValueItemStrongholdDefenseToJSON,
    TanksStatsDataValueItemStrongholdDefenseToJSONTyped,
} from './TanksStatsDataValueItemStrongholdDefense.js';
import type { TanksStatsDataValueItemAll } from './TanksStatsDataValueItemAll.js';
import {
    TanksStatsDataValueItemAllFromJSON,
    TanksStatsDataValueItemAllFromJSONTyped,
    TanksStatsDataValueItemAllToJSON,
    TanksStatsDataValueItemAllToJSONTyped,
} from './TanksStatsDataValueItemAll.js';
import type { TanksStatsDataValueItemRandom } from './TanksStatsDataValueItemRandom.js';
import {
    TanksStatsDataValueItemRandomFromJSON,
    TanksStatsDataValueItemRandomFromJSONTyped,
    TanksStatsDataValueItemRandomToJSON,
    TanksStatsDataValueItemRandomToJSONTyped,
} from './TanksStatsDataValueItemRandom.js';
import type { TanksStatsDataValueItemStrongholdSkirmish } from './TanksStatsDataValueItemStrongholdSkirmish.js';
import {
    TanksStatsDataValueItemStrongholdSkirmishFromJSON,
    TanksStatsDataValueItemStrongholdSkirmishFromJSONTyped,
    TanksStatsDataValueItemStrongholdSkirmishToJSON,
    TanksStatsDataValueItemStrongholdSkirmishToJSONTyped,
} from './TanksStatsDataValueItemStrongholdSkirmish.js';
import type { TanksStatsDataValueItemRanked10x10 } from './TanksStatsDataValueItemRanked10x10.js';
import {
    TanksStatsDataValueItemRanked10x10FromJSON,
    TanksStatsDataValueItemRanked10x10FromJSONTyped,
    TanksStatsDataValueItemRanked10x10ToJSON,
    TanksStatsDataValueItemRanked10x10ToJSONTyped,
} from './TanksStatsDataValueItemRanked10x10.js';
import type { TanksStatsDataValueItemGlobalmap } from './TanksStatsDataValueItemGlobalmap.js';
import {
    TanksStatsDataValueItemGlobalmapFromJSON,
    TanksStatsDataValueItemGlobalmapFromJSONTyped,
    TanksStatsDataValueItemGlobalmapToJSON,
    TanksStatsDataValueItemGlobalmapToJSONTyped,
} from './TanksStatsDataValueItemGlobalmap.js';
import type { TanksStatsDataValueItemCompany } from './TanksStatsDataValueItemCompany.js';
import {
    TanksStatsDataValueItemCompanyFromJSON,
    TanksStatsDataValueItemCompanyFromJSONTyped,
    TanksStatsDataValueItemCompanyToJSON,
    TanksStatsDataValueItemCompanyToJSONTyped,
} from './TanksStatsDataValueItemCompany.js';
import type { TanksStatsDataValueItemEpic } from './TanksStatsDataValueItemEpic.js';
import {
    TanksStatsDataValueItemEpicFromJSON,
    TanksStatsDataValueItemEpicFromJSONTyped,
    TanksStatsDataValueItemEpicToJSON,
    TanksStatsDataValueItemEpicToJSONTyped,
} from './TanksStatsDataValueItemEpic.js';
import type { TanksStatsDataValueItemTeam } from './TanksStatsDataValueItemTeam.js';
import {
    TanksStatsDataValueItemTeamFromJSON,
    TanksStatsDataValueItemTeamFromJSONTyped,
    TanksStatsDataValueItemTeamToJSON,
    TanksStatsDataValueItemTeamToJSONTyped,
} from './TanksStatsDataValueItemTeam.js';

/**
 * 
 * @export
 * @interface TanksStatsDataValueItem
 */
export interface TanksStatsDataValueItem {
    /**
     * Player account ID
     * @type {number}
     * @memberof TanksStatsDataValueItem
     */
    account_id: number;
    /**
     * Vehicle ID
     * @type {number}
     * @memberof TanksStatsDataValueItem
     */
    tank_id: number;
    /**
     * 
     * @type {TanksStatsDataValueItemAll}
     * @memberof TanksStatsDataValueItem
     */
    all: TanksStatsDataValueItemAll;
    /**
     * 
     * @type {TanksStatsDataValueItemCompany}
     * @memberof TanksStatsDataValueItem
     */
    company: TanksStatsDataValueItemCompany;
    /**
     * 
     * @type {TanksStatsDataValueItemStrongholdDefense}
     * @memberof TanksStatsDataValueItem
     */
    stronghold_defense: TanksStatsDataValueItemStrongholdDefense;
    /**
     * 
     * @type {TanksStatsDataValueItemStrongholdSkirmish}
     * @memberof TanksStatsDataValueItem
     */
    stronghold_skirmish: TanksStatsDataValueItemStrongholdSkirmish;
    /**
     * 
     * @type {TanksStatsDataValueItemClan}
     * @memberof TanksStatsDataValueItem
     */
    clan: TanksStatsDataValueItemClan;
    /**
     * 
     * @type {TanksStatsDataValueItemTeam}
     * @memberof TanksStatsDataValueItem
     */
    team: TanksStatsDataValueItemTeam;
    /**
     * 
     * @type {TanksStatsDataValueItemRegularTeam}
     * @memberof TanksStatsDataValueItem
     */
    regular_team: TanksStatsDataValueItemRegularTeam;
    /**
     * 
     * @type {TanksStatsDataValueItemGlobalmap}
     * @memberof TanksStatsDataValueItem
     */
    globalmap: TanksStatsDataValueItemGlobalmap;
    /**
     * Maximum experience per battle
     * @type {number}
     * @memberof TanksStatsDataValueItem
     */
    max_xp: number;
    /**
     * Maximum destroyed in battle
     * @type {number}
     * @memberof TanksStatsDataValueItem
     */
    max_frags: number;
    /**
     * Details on vehicles destroyed. This data requires a valid access_token for the specified account.
     * @type {{ [key: string]: number | undefined; }}
     * @memberof TanksStatsDataValueItem
     */
    frags: { [key: string]: number | undefined; } | null;
    /**
     * Availability of vehicle in the Garage. This data requires a valid access_token for the specified account.
     * @type {boolean}
     * @memberof TanksStatsDataValueItem
     */
    in_garage: boolean | null;
    /**
     * Mastery Badges:
     * 
     *  * 0 — None
     *  * 1 — 3rd Class 
     *  * 2 — 2nd Class
     *  * 3 — 1st Class
     *  * 4 — Ace Tanker
     * @type {number}
     * @memberof TanksStatsDataValueItem
     */
    mark_of_mastery: number;
    /**
     * 
     * @type {TanksStatsDataValueItemRandom}
     * @memberof TanksStatsDataValueItem
     */
    random?: TanksStatsDataValueItemRandom;
    /**
     * 
     * @type {TanksStatsDataValueItemFallout}
     * @memberof TanksStatsDataValueItem
     */
    fallout?: TanksStatsDataValueItemFallout;
    /**
     * 
     * @type {TanksStatsDataValueItemEpic}
     * @memberof TanksStatsDataValueItem
     */
    epic?: TanksStatsDataValueItemEpic;
    /**
     * 
     * @type {TanksStatsDataValueItemRankedBattles}
     * @memberof TanksStatsDataValueItem
     */
    ranked_battles?: TanksStatsDataValueItemRankedBattles | null;
    /**
     * 
     * @type {TanksStatsDataValueItemRanked10x10}
     * @memberof TanksStatsDataValueItem
     */
    ranked_10x10?: TanksStatsDataValueItemRanked10x10;
}

/**
 * Check if a given object implements the TanksStatsDataValueItem interface.
 */
export function instanceOfTanksStatsDataValueItem(value: object): value is TanksStatsDataValueItem {
    if (!('account_id' in value) || value['account_id'] === undefined) return false;
    if (!('tank_id' in value) || value['tank_id'] === undefined) return false;
    if (!('all' in value) || value['all'] === undefined) return false;
    if (!('company' in value) || value['company'] === undefined) return false;
    if (!('stronghold_defense' in value) || value['stronghold_defense'] === undefined) return false;
    if (!('stronghold_skirmish' in value) || value['stronghold_skirmish'] === undefined) return false;
    if (!('clan' in value) || value['clan'] === undefined) return false;
    if (!('team' in value) || value['team'] === undefined) return false;
    if (!('regular_team' in value) || value['regular_team'] === undefined) return false;
    if (!('globalmap' in value) || value['globalmap'] === undefined) return false;
    if (!('max_xp' in value) || value['max_xp'] === undefined) return false;
    if (!('max_frags' in value) || value['max_frags'] === undefined) return false;
    if (!('frags' in value) || value['frags'] === undefined) return false;
    if (!('in_garage' in value) || value['in_garage'] === undefined) return false;
    if (!('mark_of_mastery' in value) || value['mark_of_mastery'] === undefined) return false;
    return true;
}

export function TanksStatsDataValueItemFromJSON(json: any): TanksStatsDataValueItem {
    return TanksStatsDataValueItemFromJSONTyped(json, false);
}

export function TanksStatsDataValueItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TanksStatsDataValueItem {
    if (json == null) {
        return json;
    }
    return {
        
        'account_id': json['account_id'],
        'tank_id': json['tank_id'],
        'all': TanksStatsDataValueItemAllFromJSON(json['all']),
        'company': TanksStatsDataValueItemCompanyFromJSON(json['company']),
        'stronghold_defense': TanksStatsDataValueItemStrongholdDefenseFromJSON(json['stronghold_defense']),
        'stronghold_skirmish': TanksStatsDataValueItemStrongholdSkirmishFromJSON(json['stronghold_skirmish']),
        'clan': TanksStatsDataValueItemClanFromJSON(json['clan']),
        'team': TanksStatsDataValueItemTeamFromJSON(json['team']),
        'regular_team': TanksStatsDataValueItemRegularTeamFromJSON(json['regular_team']),
        'globalmap': TanksStatsDataValueItemGlobalmapFromJSON(json['globalmap']),
        'max_xp': json['max_xp'],
        'max_frags': json['max_frags'],
        'frags': json['frags'],
        'in_garage': json['in_garage'],
        'mark_of_mastery': json['mark_of_mastery'],
        'random': json['random'] == null ? undefined : TanksStatsDataValueItemRandomFromJSON(json['random']),
        'fallout': json['fallout'] == null ? undefined : TanksStatsDataValueItemFalloutFromJSON(json['fallout']),
        'epic': json['epic'] == null ? undefined : TanksStatsDataValueItemEpicFromJSON(json['epic']),
        'ranked_battles': json['ranked_battles'] == null ? undefined : TanksStatsDataValueItemRankedBattlesFromJSON(json['ranked_battles']),
        'ranked_10x10': json['ranked_10x10'] == null ? undefined : TanksStatsDataValueItemRanked10x10FromJSON(json['ranked_10x10']),
    };
}

export function TanksStatsDataValueItemToJSON(json: any): TanksStatsDataValueItem {
    return TanksStatsDataValueItemToJSONTyped(json, false);
}

export function TanksStatsDataValueItemToJSONTyped(value?: TanksStatsDataValueItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_id': value['account_id'],
        'tank_id': value['tank_id'],
        'all': TanksStatsDataValueItemAllToJSON(value['all']),
        'company': TanksStatsDataValueItemCompanyToJSON(value['company']),
        'stronghold_defense': TanksStatsDataValueItemStrongholdDefenseToJSON(value['stronghold_defense']),
        'stronghold_skirmish': TanksStatsDataValueItemStrongholdSkirmishToJSON(value['stronghold_skirmish']),
        'clan': TanksStatsDataValueItemClanToJSON(value['clan']),
        'team': TanksStatsDataValueItemTeamToJSON(value['team']),
        'regular_team': TanksStatsDataValueItemRegularTeamToJSON(value['regular_team']),
        'globalmap': TanksStatsDataValueItemGlobalmapToJSON(value['globalmap']),
        'max_xp': value['max_xp'],
        'max_frags': value['max_frags'],
        'frags': value['frags'],
        'in_garage': value['in_garage'],
        'mark_of_mastery': value['mark_of_mastery'],
        'random': TanksStatsDataValueItemRandomToJSON(value['random']),
        'fallout': TanksStatsDataValueItemFalloutToJSON(value['fallout']),
        'epic': TanksStatsDataValueItemEpicToJSON(value['epic']),
        'ranked_battles': TanksStatsDataValueItemRankedBattlesToJSON(value['ranked_battles']),
        'ranked_10x10': TanksStatsDataValueItemRanked10x10ToJSON(value['ranked_10x10']),
    };
}

export const TanksStatsDataValueItemPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

