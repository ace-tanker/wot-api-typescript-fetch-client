/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GlobalmapSeasonsItem
 */
export interface GlobalmapSeasonsItem {
    /**
     * Season ID
     * @type {string}
     * @memberof GlobalmapSeasonsItem
     */
    seasonId: string;
    /**
     * Season name
     * @type {string}
     * @memberof GlobalmapSeasonsItem
     */
    seasonName: string;
    /**
     * Start time
     * @type {string}
     * @memberof GlobalmapSeasonsItem
     */
    start: string;
    /**
     * Finishing time
     * @type {string}
     * @memberof GlobalmapSeasonsItem
     */
    end: string;
    /**
     * Status
     * @type {string}
     * @memberof GlobalmapSeasonsItem
     */
    status: string;
    /**
     * Fronts. Only season fronts are presented in response.
     * @type {Array<any>}
     * @memberof GlobalmapSeasonsItem
     */
    fronts: Array<any>;
}

/**
 * Check if a given object implements the GlobalmapSeasonsItem interface.
 */
export function instanceOfGlobalmapSeasonsItem(value: object): value is GlobalmapSeasonsItem {
    if (!('seasonId' in value) || value['seasonId'] === undefined) return false;
    if (!('seasonName' in value) || value['seasonName'] === undefined) return false;
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('end' in value) || value['end'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('fronts' in value) || value['fronts'] === undefined) return false;
    return true;
}

export function GlobalmapSeasonsItemFromJSON(json: any): GlobalmapSeasonsItem {
    return GlobalmapSeasonsItemFromJSONTyped(json, false);
}

export function GlobalmapSeasonsItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapSeasonsItem {
    if (json == null) {
        return json;
    }
    return {
        
        'seasonId': json['season_id'],
        'seasonName': json['season_name'],
        'start': json['start'],
        'end': json['end'],
        'status': json['status'],
        'fronts': json['fronts'],
    };
}

export function GlobalmapSeasonsItemToJSON(json: any): GlobalmapSeasonsItem {
    return GlobalmapSeasonsItemToJSONTyped(json, false);
}

export function GlobalmapSeasonsItemToJSONTyped(value?: GlobalmapSeasonsItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'season_id': value['seasonId'],
        'season_name': value['seasonName'],
        'start': value['start'],
        'end': value['end'],
        'status': value['status'],
        'fronts': value['fronts'],
    };
}

