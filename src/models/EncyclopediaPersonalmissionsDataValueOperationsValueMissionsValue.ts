/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue } from './EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue.js';
import {
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueFromJSON,
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueFromJSONTyped,
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueToJSON,
    EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueToJSONTyped,
} from './EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue.js';

/**
 * Operation missions
 * @export
 * @interface EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
 */
export interface EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue {
    /**
     * Mission ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    mission_id: number;
    /**
     * Mission branch ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    set_id: number;
    /**
     * Mission name
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    name: string;
    /**
     * Mission description
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    description: string;
    /**
     * Hints
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    hint: string | null;
    /**
     * Minimum vehicle Tier
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    min_level: number;
    /**
     * Maximum vehicle Tier
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    max_level: number;
    /**
     * Mission tags
     * @type {Array<string>}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    tags: Array<string>;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue | undefined; }}
     * @memberof EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue
     */
    rewards: { [key: string]: EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValue | undefined; };
}

/**
 * Check if a given object implements the EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue interface.
 */
export function instanceOfEncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue(value: object): value is EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue {
    if (!('mission_id' in value) || value['mission_id'] === undefined) return false;
    if (!('set_id' in value) || value['set_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('hint' in value) || value['hint'] === undefined) return false;
    if (!('min_level' in value) || value['min_level'] === undefined) return false;
    if (!('max_level' in value) || value['max_level'] === undefined) return false;
    if (!('tags' in value) || value['tags'] === undefined) return false;
    if (!('rewards' in value) || value['rewards'] === undefined) return false;
    return true;
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueFromJSON(json: any): EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue {
    return EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueFromJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue {
    if (json == null) {
        return json;
    }
    return {
        
        'mission_id': json['mission_id'],
        'set_id': json['set_id'],
        'name': json['name'],
        'description': json['description'],
        'hint': json['hint'],
        'min_level': json['min_level'],
        'max_level': json['max_level'],
        'tags': json['tags'],
        'rewards': (mapValues(json['rewards'], EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueFromJSON)),
    };
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueToJSON(json: any): EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue {
    return EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueToJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueToJSONTyped(value?: EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mission_id': value['mission_id'],
        'set_id': value['set_id'],
        'name': value['name'],
        'description': value['description'],
        'hint': value['hint'],
        'min_level': value['min_level'],
        'max_level': value['max_level'],
        'tags': value['tags'],
        'rewards': (mapValues(value['rewards'], EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValueRewardsValueToJSON)),
    };
}

export const EncyclopediaPersonalmissionsDataValueOperationsValueMissionsValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

