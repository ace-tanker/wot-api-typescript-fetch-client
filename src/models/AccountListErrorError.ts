/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AccountListErrorErrorOneOf } from './AccountListErrorErrorOneOf.js';
import {
    instanceOfAccountListErrorErrorOneOf,
    AccountListErrorErrorOneOfFromJSON,
    AccountListErrorErrorOneOfFromJSONTyped,
    AccountListErrorErrorOneOfToJSON,
} from './AccountListErrorErrorOneOf.js';
import type { AccountListErrorErrorOneOf1 } from './AccountListErrorErrorOneOf1.js';
import {
    instanceOfAccountListErrorErrorOneOf1,
    AccountListErrorErrorOneOf1FromJSON,
    AccountListErrorErrorOneOf1FromJSONTyped,
    AccountListErrorErrorOneOf1ToJSON,
} from './AccountListErrorErrorOneOf1.js';
import type { AccountListErrorErrorOneOf2 } from './AccountListErrorErrorOneOf2.js';
import {
    instanceOfAccountListErrorErrorOneOf2,
    AccountListErrorErrorOneOf2FromJSON,
    AccountListErrorErrorOneOf2FromJSONTyped,
    AccountListErrorErrorOneOf2ToJSON,
} from './AccountListErrorErrorOneOf2.js';
import type { AccountListErrorErrorOneOf3 } from './AccountListErrorErrorOneOf3.js';
import {
    instanceOfAccountListErrorErrorOneOf3,
    AccountListErrorErrorOneOf3FromJSON,
    AccountListErrorErrorOneOf3FromJSONTyped,
    AccountListErrorErrorOneOf3ToJSON,
} from './AccountListErrorErrorOneOf3.js';

/**
 * @type AccountListErrorError
 * 
 * @export
 */
export type AccountListErrorError = AccountListErrorErrorOneOf | AccountListErrorErrorOneOf1 | AccountListErrorErrorOneOf2 | AccountListErrorErrorOneOf3;

export function AccountListErrorErrorFromJSON(json: any): AccountListErrorError {
    return AccountListErrorErrorFromJSONTyped(json, false);
}

export function AccountListErrorErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountListErrorError {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAccountListErrorErrorOneOf(json)) {
        return AccountListErrorErrorOneOfFromJSONTyped(json, true);
    }
    if (instanceOfAccountListErrorErrorOneOf1(json)) {
        return AccountListErrorErrorOneOf1FromJSONTyped(json, true);
    }
    if (instanceOfAccountListErrorErrorOneOf2(json)) {
        return AccountListErrorErrorOneOf2FromJSONTyped(json, true);
    }
    if (instanceOfAccountListErrorErrorOneOf3(json)) {
        return AccountListErrorErrorOneOf3FromJSONTyped(json, true);
    }

    return {} as any;
}

export function AccountListErrorErrorToJSON(json: any): any {
    return AccountListErrorErrorToJSONTyped(json, false);
}

export function AccountListErrorErrorToJSONTyped(value?: AccountListErrorError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAccountListErrorErrorOneOf(value)) {
        return AccountListErrorErrorOneOfToJSON(value as AccountListErrorErrorOneOf);
    }
    if (instanceOfAccountListErrorErrorOneOf1(value)) {
        return AccountListErrorErrorOneOf1ToJSON(value as AccountListErrorErrorOneOf1);
    }
    if (instanceOfAccountListErrorErrorOneOf2(value)) {
        return AccountListErrorErrorOneOf2ToJSON(value as AccountListErrorErrorOneOf2);
    }
    if (instanceOfAccountListErrorErrorOneOf3(value)) {
        return AccountListErrorErrorOneOf3ToJSON(value as AccountListErrorErrorOneOf3);
    }

    return {};
}

