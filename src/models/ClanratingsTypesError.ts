/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { AccountListErrorErrorOneOf3 } from './AccountListErrorErrorOneOf3.js';
import {
    AccountListErrorErrorOneOf3FromJSON,
    AccountListErrorErrorOneOf3FromJSONTyped,
    AccountListErrorErrorOneOf3ToJSON,
    AccountListErrorErrorOneOf3ToJSONTyped,
} from './AccountListErrorErrorOneOf3.js';

/**
 * 
 * @export
 * @interface ClanratingsTypesError
 */
export interface ClanratingsTypesError {
    /**
     * 
     * @type {string}
     * @memberof ClanratingsTypesError
     */
    status: ClanratingsTypesErrorStatusEnum;
    /**
     * 
     * @type {AccountListErrorErrorOneOf3}
     * @memberof ClanratingsTypesError
     */
    error: AccountListErrorErrorOneOf3;
}

/**
* @export
* @enum {string}
*/
export enum ClanratingsTypesErrorStatusEnum {
    Error = 'error'
}


/**
 * Check if a given object implements the ClanratingsTypesError interface.
 */
export function instanceOfClanratingsTypesError(value: object): value is ClanratingsTypesError {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('error' in value) || value['error'] === undefined) return false;
    return true;
}

export function ClanratingsTypesErrorFromJSON(json: any): ClanratingsTypesError {
    return ClanratingsTypesErrorFromJSONTyped(json, false);
}

export function ClanratingsTypesErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClanratingsTypesError {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'error': AccountListErrorErrorOneOf3FromJSON(json['error']),
    };
}

export function ClanratingsTypesErrorToJSON(json: any): ClanratingsTypesError {
    return ClanratingsTypesErrorToJSONTyped(json, false);
}

export function ClanratingsTypesErrorToJSONTyped(value?: ClanratingsTypesError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'error': AccountListErrorErrorOneOf3ToJSON(value['error']),
    };
}

export const ClanratingsTypesErrorPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

