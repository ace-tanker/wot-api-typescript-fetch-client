/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface EncyclopediaProvisionsValue
 */
export interface EncyclopediaProvisionsValue {
    /**
     * Equipment or consumables ID
     * @type {number}
     * @memberof EncyclopediaProvisionsValue
     */
    provisionId: number;
    /**
     * Vehicle name
     * @type {string}
     * @memberof EncyclopediaProvisionsValue
     */
    name: string;
    /**
     * Technical name
     * @type {string}
     * @memberof EncyclopediaProvisionsValue
     */
    tag: string;
    /**
     * Cost in gold
     * @type {number}
     * @memberof EncyclopediaProvisionsValue
     */
    priceGold: number;
    /**
     * Cost in credits
     * @type {number}
     * @memberof EncyclopediaProvisionsValue
     */
    priceCredit: number;
    /**
     * Type: consumable or equipment
     * @type {string}
     * @memberof EncyclopediaProvisionsValue
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof EncyclopediaProvisionsValue
     */
    description: string | null;
    /**
     * 
     * @type {number}
     * @memberof EncyclopediaProvisionsValue
     */
    weight: number | null;
    /**
     * Image link
     * @type {string}
     * @memberof EncyclopediaProvisionsValue
     */
    image: string;
}

/**
 * Check if a given object implements the EncyclopediaProvisionsValue interface.
 */
export function instanceOfEncyclopediaProvisionsValue(value: object): value is EncyclopediaProvisionsValue {
    if (!('provisionId' in value) || value['provisionId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('priceGold' in value) || value['priceGold'] === undefined) return false;
    if (!('priceCredit' in value) || value['priceCredit'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('weight' in value) || value['weight'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    return true;
}

export function EncyclopediaProvisionsValueFromJSON(json: any): EncyclopediaProvisionsValue {
    return EncyclopediaProvisionsValueFromJSONTyped(json, false);
}

export function EncyclopediaProvisionsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaProvisionsValue {
    if (json == null) {
        return json;
    }
    return {
        
        'provisionId': json['provision_id'],
        'name': json['name'],
        'tag': json['tag'],
        'priceGold': json['price_gold'],
        'priceCredit': json['price_credit'],
        'type': json['type'],
        'description': json['description'],
        'weight': json['weight'],
        'image': json['image'],
    };
}

export function EncyclopediaProvisionsValueToJSON(json: any): EncyclopediaProvisionsValue {
    return EncyclopediaProvisionsValueToJSONTyped(json, false);
}

export function EncyclopediaProvisionsValueToJSONTyped(value?: EncyclopediaProvisionsValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provision_id': value['provisionId'],
        'name': value['name'],
        'tag': value['tag'],
        'price_gold': value['priceGold'],
        'price_credit': value['priceCredit'],
        'type': value['type'],
        'description': value['description'],
        'weight': value['weight'],
        'image': value['image'],
    };
}

