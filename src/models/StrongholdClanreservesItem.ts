/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { StrongholdClanreservesItemInStockItem } from './StrongholdClanreservesItemInStockItem.js';
import {
    StrongholdClanreservesItemInStockItemFromJSON,
    StrongholdClanreservesItemInStockItemFromJSONTyped,
    StrongholdClanreservesItemInStockItemToJSON,
    StrongholdClanreservesItemInStockItemToJSONTyped,
} from './StrongholdClanreservesItemInStockItem.js';

/**
 * 
 * @export
 * @interface StrongholdClanreservesItem
 */
export interface StrongholdClanreservesItem {
    /**
     * Reserve name
     * @type {string}
     * @memberof StrongholdClanreservesItem
     */
    name: string;
    /**
     * Reserve type
     * @type {string}
     * @memberof StrongholdClanreservesItem
     */
    type: string;
    /**
     * Indicates if the Reserve is a One-Time-Effect Reserve
     * @type {boolean}
     * @memberof StrongholdClanreservesItem
     */
    disposable: boolean;
    /**
     * Reserve efficiency type
     * @type {string}
     * @memberof StrongholdClanreservesItem
     */
    bonusType: string;
    /**
     * URL to icon
     * @type {string}
     * @memberof StrongholdClanreservesItem
     */
    icon: string;
    /**
     * Available clan Reserves and their status
     * @type {Array<StrongholdClanreservesItemInStockItem>}
     * @memberof StrongholdClanreservesItem
     */
    inStock: Array<StrongholdClanreservesItemInStockItem>;
}

/**
 * Check if a given object implements the StrongholdClanreservesItem interface.
 */
export function instanceOfStrongholdClanreservesItem(value: object): value is StrongholdClanreservesItem {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('disposable' in value) || value['disposable'] === undefined) return false;
    if (!('bonusType' in value) || value['bonusType'] === undefined) return false;
    if (!('icon' in value) || value['icon'] === undefined) return false;
    if (!('inStock' in value) || value['inStock'] === undefined) return false;
    return true;
}

export function StrongholdClanreservesItemFromJSON(json: any): StrongholdClanreservesItem {
    return StrongholdClanreservesItemFromJSONTyped(json, false);
}

export function StrongholdClanreservesItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StrongholdClanreservesItem {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'disposable': json['disposable'],
        'bonusType': json['bonus_type'],
        'icon': json['icon'],
        'inStock': ((json['in_stock'] as Array<any>).map(StrongholdClanreservesItemInStockItemFromJSON)),
    };
}

export function StrongholdClanreservesItemToJSON(json: any): StrongholdClanreservesItem {
    return StrongholdClanreservesItemToJSONTyped(json, false);
}

export function StrongholdClanreservesItemToJSONTyped(value?: StrongholdClanreservesItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'disposable': value['disposable'],
        'bonus_type': value['bonusType'],
        'icon': value['icon'],
        'in_stock': ((value['inStock'] as Array<any>).map(StrongholdClanreservesItemInStockItemToJSON)),
    };
}

