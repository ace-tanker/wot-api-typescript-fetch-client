/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Second challenging clan ID
 * @export
 * @interface GlobalmapProvincesDataItemActiveBattlesItemClanB
 */
export interface GlobalmapProvincesDataItemActiveBattlesItemClanB {
    /**
     * Clan ID
     * @type {number}
     * @memberof GlobalmapProvincesDataItemActiveBattlesItemClanB
     */
    clan_id: number;
    /**
     * Changes in Elo-rating due to victory
     * @type {number}
     * @memberof GlobalmapProvincesDataItemActiveBattlesItemClanB
     */
    win_elo_delta: number;
    /**
     * Changes in Elo-rating due to defeat
     * @type {number}
     * @memberof GlobalmapProvincesDataItemActiveBattlesItemClanB
     */
    loose_elo_delta: number;
    /**
     * Award
     * @type {number}
     * @memberof GlobalmapProvincesDataItemActiveBattlesItemClanB
     */
    battle_reward: number;
}

/**
 * Check if a given object implements the GlobalmapProvincesDataItemActiveBattlesItemClanB interface.
 */
export function instanceOfGlobalmapProvincesDataItemActiveBattlesItemClanB(value: object): value is GlobalmapProvincesDataItemActiveBattlesItemClanB {
    if (!('clan_id' in value) || value['clan_id'] === undefined) return false;
    if (!('win_elo_delta' in value) || value['win_elo_delta'] === undefined) return false;
    if (!('loose_elo_delta' in value) || value['loose_elo_delta'] === undefined) return false;
    if (!('battle_reward' in value) || value['battle_reward'] === undefined) return false;
    return true;
}

export function GlobalmapProvincesDataItemActiveBattlesItemClanBFromJSON(json: any): GlobalmapProvincesDataItemActiveBattlesItemClanB {
    return GlobalmapProvincesDataItemActiveBattlesItemClanBFromJSONTyped(json, false);
}

export function GlobalmapProvincesDataItemActiveBattlesItemClanBFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapProvincesDataItemActiveBattlesItemClanB {
    if (json == null) {
        return json;
    }
    return {
        
        'clan_id': json['clan_id'],
        'win_elo_delta': json['win_elo_delta'],
        'loose_elo_delta': json['loose_elo_delta'],
        'battle_reward': json['battle_reward'],
    };
}

export function GlobalmapProvincesDataItemActiveBattlesItemClanBToJSON(json: any): GlobalmapProvincesDataItemActiveBattlesItemClanB {
    return GlobalmapProvincesDataItemActiveBattlesItemClanBToJSONTyped(json, false);
}

export function GlobalmapProvincesDataItemActiveBattlesItemClanBToJSONTyped(value?: GlobalmapProvincesDataItemActiveBattlesItemClanB | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clan_id': value['clan_id'],
        'win_elo_delta': value['win_elo_delta'],
        'loose_elo_delta': value['loose_elo_delta'],
        'battle_reward': value['battle_reward'],
    };
}

export const GlobalmapProvincesDataItemActiveBattlesItemClanBPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

