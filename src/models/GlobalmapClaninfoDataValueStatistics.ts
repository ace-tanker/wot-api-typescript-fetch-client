/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Clan statistics on the Global Map
 * @export
 * @interface GlobalmapClaninfoDataValueStatistics
 */
export interface GlobalmapClaninfoDataValueStatistics {
    /**
     * Battles fought
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    battles: number;
    /**
     * Victories
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    wins: number;
    /**
     * Defeats
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    losses: number;
    /**
     * Battles fought in Absolute division
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    battles_10_level: number;
    /**
     * Battles fought in Champion division
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    battles_8_level: number;
    /**
     * Battles fought in Medium division
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    battles_6_level: number;
    /**
     * Victories in Absolute division
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    wins_10_level: number;
    /**
     * Victories in Champion division
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    wins_8_level: number;
    /**
     * Victories in Medium division
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    wins_6_level: number;
    /**
     * Total number by provinces captured by clan
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    captures: number;
    /**
     * Current number of captured provinces
     * @type {number}
     * @memberof GlobalmapClaninfoDataValueStatistics
     */
    provinces_count: number;
}

/**
 * Check if a given object implements the GlobalmapClaninfoDataValueStatistics interface.
 */
export function instanceOfGlobalmapClaninfoDataValueStatistics(value: object): value is GlobalmapClaninfoDataValueStatistics {
    if (!('battles' in value) || value['battles'] === undefined) return false;
    if (!('wins' in value) || value['wins'] === undefined) return false;
    if (!('losses' in value) || value['losses'] === undefined) return false;
    if (!('battles_10_level' in value) || value['battles_10_level'] === undefined) return false;
    if (!('battles_8_level' in value) || value['battles_8_level'] === undefined) return false;
    if (!('battles_6_level' in value) || value['battles_6_level'] === undefined) return false;
    if (!('wins_10_level' in value) || value['wins_10_level'] === undefined) return false;
    if (!('wins_8_level' in value) || value['wins_8_level'] === undefined) return false;
    if (!('wins_6_level' in value) || value['wins_6_level'] === undefined) return false;
    if (!('captures' in value) || value['captures'] === undefined) return false;
    if (!('provinces_count' in value) || value['provinces_count'] === undefined) return false;
    return true;
}

export function GlobalmapClaninfoDataValueStatisticsFromJSON(json: any): GlobalmapClaninfoDataValueStatistics {
    return GlobalmapClaninfoDataValueStatisticsFromJSONTyped(json, false);
}

export function GlobalmapClaninfoDataValueStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapClaninfoDataValueStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        'battles': json['battles'],
        'wins': json['wins'],
        'losses': json['losses'],
        'battles_10_level': json['battles_10_level'],
        'battles_8_level': json['battles_8_level'],
        'battles_6_level': json['battles_6_level'],
        'wins_10_level': json['wins_10_level'],
        'wins_8_level': json['wins_8_level'],
        'wins_6_level': json['wins_6_level'],
        'captures': json['captures'],
        'provinces_count': json['provinces_count'],
    };
}

export function GlobalmapClaninfoDataValueStatisticsToJSON(json: any): GlobalmapClaninfoDataValueStatistics {
    return GlobalmapClaninfoDataValueStatisticsToJSONTyped(json, false);
}

export function GlobalmapClaninfoDataValueStatisticsToJSONTyped(value?: GlobalmapClaninfoDataValueStatistics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'battles': value['battles'],
        'wins': value['wins'],
        'losses': value['losses'],
        'battles_10_level': value['battles_10_level'],
        'battles_8_level': value['battles_8_level'],
        'battles_6_level': value['battles_6_level'],
        'wins_10_level': value['wins_10_level'],
        'wins_8_level': value['wins_8_level'],
        'wins_6_level': value['wins_6_level'],
        'captures': value['captures'],
        'provinces_count': value['provinces_count'],
    };
}

export const GlobalmapClaninfoDataValueStatisticsPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

