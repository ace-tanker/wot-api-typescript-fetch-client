/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { GlobalmapProvincesItemActiveBattlesItem } from './GlobalmapProvincesItemActiveBattlesItem.js';
import {
    GlobalmapProvincesItemActiveBattlesItemFromJSON,
    GlobalmapProvincesItemActiveBattlesItemFromJSONTyped,
    GlobalmapProvincesItemActiveBattlesItemToJSON,
    GlobalmapProvincesItemActiveBattlesItemToJSONTyped,
} from './GlobalmapProvincesItemActiveBattlesItem.js';

/**
 * 
 * @export
 * @interface GlobalmapProvincesItem
 */
export interface GlobalmapProvincesItem {
    /**
     * Map ID
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    arenaId: string;
    /**
     * Localized map name
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    arenaName: string;
    /**
     * Daily income
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    dailyRevenue: number;
    /**
     * Front ID
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    frontId: string;
    /**
     * Front name
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    frontName: string;
    /**
     * Income level from 0 to 11. 0 value means that income was not raised.
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    revenueLevel: number;
    /**
     * Prime Time in UTC
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    primeTime: string;
    /**
     * Province ID
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    provinceId: string;
    /**
     * Province name
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    provinceName: string;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    landingType: string | null;
    /**
     * Indicates if Repartition of the World is active
     * @type {boolean}
     * @memberof GlobalmapProvincesItem
     */
    worldRedivision: boolean;
    /**
     * Current minimum bid
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    currentMinBet: number;
    /**
     * Last winning bid
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    lastWonBet: number;
    /**
     * List of adjacent provinces' IDs
     * @type {Array<string>}
     * @memberof GlobalmapProvincesItem
     */
    neighbours: Array<string>;
    /**
     * Relative link to province
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    uri: string;
    /**
     * 
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    roundNumber: number | null;
    /**
     * Battles start time in UTC
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    battlesStartAt: string;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    status: string | null;
    /**
     * Maximum number of bids
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    maxBets: number;
    /**
     * List of IDs of participating clans
     * @type {Array<number>}
     * @memberof GlobalmapProvincesItem
     */
    competitors: Array<number>;
    /**
     * List of IDs of attacking clans
     * @type {Array<number>}
     * @memberof GlobalmapProvincesItem
     */
    attackers: Array<number>;
    /**
     * Current battles
     * @type {Array<GlobalmapProvincesItemActiveBattlesItem>}
     * @memberof GlobalmapProvincesItem
     */
    activeBattles: Array<GlobalmapProvincesItemActiveBattlesItem>;
    /**
     * Owning clan ID
     * @type {number}
     * @memberof GlobalmapProvincesItem
     */
    ownerClanId: number;
    /**
     * Province borders are closed
     * @type {boolean}
     * @memberof GlobalmapProvincesItem
     */
    isBordersDisabled: boolean;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    pillageEndAt: string | null;
    /**
     * Server ID
     * @type {string}
     * @memberof GlobalmapProvincesItem
     */
    server: string;
}

/**
 * Check if a given object implements the GlobalmapProvincesItem interface.
 */
export function instanceOfGlobalmapProvincesItem(value: object): value is GlobalmapProvincesItem {
    if (!('arenaId' in value) || value['arenaId'] === undefined) return false;
    if (!('arenaName' in value) || value['arenaName'] === undefined) return false;
    if (!('dailyRevenue' in value) || value['dailyRevenue'] === undefined) return false;
    if (!('frontId' in value) || value['frontId'] === undefined) return false;
    if (!('frontName' in value) || value['frontName'] === undefined) return false;
    if (!('revenueLevel' in value) || value['revenueLevel'] === undefined) return false;
    if (!('primeTime' in value) || value['primeTime'] === undefined) return false;
    if (!('provinceId' in value) || value['provinceId'] === undefined) return false;
    if (!('provinceName' in value) || value['provinceName'] === undefined) return false;
    if (!('landingType' in value) || value['landingType'] === undefined) return false;
    if (!('worldRedivision' in value) || value['worldRedivision'] === undefined) return false;
    if (!('currentMinBet' in value) || value['currentMinBet'] === undefined) return false;
    if (!('lastWonBet' in value) || value['lastWonBet'] === undefined) return false;
    if (!('neighbours' in value) || value['neighbours'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    if (!('roundNumber' in value) || value['roundNumber'] === undefined) return false;
    if (!('battlesStartAt' in value) || value['battlesStartAt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('maxBets' in value) || value['maxBets'] === undefined) return false;
    if (!('competitors' in value) || value['competitors'] === undefined) return false;
    if (!('attackers' in value) || value['attackers'] === undefined) return false;
    if (!('activeBattles' in value) || value['activeBattles'] === undefined) return false;
    if (!('ownerClanId' in value) || value['ownerClanId'] === undefined) return false;
    if (!('isBordersDisabled' in value) || value['isBordersDisabled'] === undefined) return false;
    if (!('pillageEndAt' in value) || value['pillageEndAt'] === undefined) return false;
    if (!('server' in value) || value['server'] === undefined) return false;
    return true;
}

export function GlobalmapProvincesItemFromJSON(json: any): GlobalmapProvincesItem {
    return GlobalmapProvincesItemFromJSONTyped(json, false);
}

export function GlobalmapProvincesItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapProvincesItem {
    if (json == null) {
        return json;
    }
    return {
        
        'arenaId': json['arena_id'],
        'arenaName': json['arena_name'],
        'dailyRevenue': json['daily_revenue'],
        'frontId': json['front_id'],
        'frontName': json['front_name'],
        'revenueLevel': json['revenue_level'],
        'primeTime': json['prime_time'],
        'provinceId': json['province_id'],
        'provinceName': json['province_name'],
        'landingType': json['landing_type'],
        'worldRedivision': json['world_redivision'],
        'currentMinBet': json['current_min_bet'],
        'lastWonBet': json['last_won_bet'],
        'neighbours': json['neighbours'],
        'uri': json['uri'],
        'roundNumber': json['round_number'],
        'battlesStartAt': json['battles_start_at'],
        'status': json['status'],
        'maxBets': json['max_bets'],
        'competitors': json['competitors'],
        'attackers': json['attackers'],
        'activeBattles': ((json['active_battles'] as Array<any>).map(GlobalmapProvincesItemActiveBattlesItemFromJSON)),
        'ownerClanId': json['owner_clan_id'],
        'isBordersDisabled': json['is_borders_disabled'],
        'pillageEndAt': json['pillage_end_at'],
        'server': json['server'],
    };
}

export function GlobalmapProvincesItemToJSON(json: any): GlobalmapProvincesItem {
    return GlobalmapProvincesItemToJSONTyped(json, false);
}

export function GlobalmapProvincesItemToJSONTyped(value?: GlobalmapProvincesItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arena_id': value['arenaId'],
        'arena_name': value['arenaName'],
        'daily_revenue': value['dailyRevenue'],
        'front_id': value['frontId'],
        'front_name': value['frontName'],
        'revenue_level': value['revenueLevel'],
        'prime_time': value['primeTime'],
        'province_id': value['provinceId'],
        'province_name': value['provinceName'],
        'landing_type': value['landingType'],
        'world_redivision': value['worldRedivision'],
        'current_min_bet': value['currentMinBet'],
        'last_won_bet': value['lastWonBet'],
        'neighbours': value['neighbours'],
        'uri': value['uri'],
        'round_number': value['roundNumber'],
        'battles_start_at': value['battlesStartAt'],
        'status': value['status'],
        'max_bets': value['maxBets'],
        'competitors': value['competitors'],
        'attackers': value['attackers'],
        'active_battles': ((value['activeBattles'] as Array<any>).map(GlobalmapProvincesItemActiveBattlesItemToJSON)),
        'owner_clan_id': value['ownerClanId'],
        'is_borders_disabled': value['isBordersDisabled'],
        'pillage_end_at': value['pillageEndAt'],
        'server': value['server'],
    };
}

