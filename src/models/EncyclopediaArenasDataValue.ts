/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface EncyclopediaArenasDataValue
 */
export interface EncyclopediaArenasDataValue {
    /**
     * Map ID
     * @type {string}
     * @memberof EncyclopediaArenasDataValue
     */
    arena_id: string;
    /**
     * Map type
     * @type {string}
     * @memberof EncyclopediaArenasDataValue
     */
    camouflage_type: string;
    /**
     * Localized map name
     * @type {string}
     * @memberof EncyclopediaArenasDataValue
     */
    name_i18n: string;
    /**
     * Short map description
     * @type {string}
     * @memberof EncyclopediaArenasDataValue
     */
    description: string;
}

/**
 * Check if a given object implements the EncyclopediaArenasDataValue interface.
 */
export function instanceOfEncyclopediaArenasDataValue(value: object): value is EncyclopediaArenasDataValue {
    if (!('arena_id' in value) || value['arena_id'] === undefined) return false;
    if (!('camouflage_type' in value) || value['camouflage_type'] === undefined) return false;
    if (!('name_i18n' in value) || value['name_i18n'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function EncyclopediaArenasDataValueFromJSON(json: any): EncyclopediaArenasDataValue {
    return EncyclopediaArenasDataValueFromJSONTyped(json, false);
}

export function EncyclopediaArenasDataValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaArenasDataValue {
    if (json == null) {
        return json;
    }
    return {
        
        'arena_id': json['arena_id'],
        'camouflage_type': json['camouflage_type'],
        'name_i18n': json['name_i18n'],
        'description': json['description'],
    };
}

export function EncyclopediaArenasDataValueToJSON(json: any): EncyclopediaArenasDataValue {
    return EncyclopediaArenasDataValueToJSONTyped(json, false);
}

export function EncyclopediaArenasDataValueToJSONTyped(value?: EncyclopediaArenasDataValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arena_id': value['arena_id'],
        'camouflage_type': value['camouflage_type'],
        'name_i18n': value['name_i18n'],
        'description': value['description'],
    };
}

export const EncyclopediaArenasDataValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

