/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { AccountInfoDataValuePrivate } from './AccountInfoDataValuePrivate.js';
import {
    AccountInfoDataValuePrivateFromJSON,
    AccountInfoDataValuePrivateFromJSONTyped,
    AccountInfoDataValuePrivateToJSON,
    AccountInfoDataValuePrivateToJSONTyped,
} from './AccountInfoDataValuePrivate.js';
import type { AccountInfoDataValueStatistics } from './AccountInfoDataValueStatistics.js';
import {
    AccountInfoDataValueStatisticsFromJSON,
    AccountInfoDataValueStatisticsFromJSONTyped,
    AccountInfoDataValueStatisticsToJSON,
    AccountInfoDataValueStatisticsToJSONTyped,
} from './AccountInfoDataValueStatistics.js';

/**
 * 
 * @export
 * @interface AccountInfoDataValue
 */
export interface AccountInfoDataValue {
    /**
     * 
     * @type {AccountInfoDataValueStatistics}
     * @memberof AccountInfoDataValue
     */
    statistics: AccountInfoDataValueStatistics;
    /**
     * Player account ID
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    account_id: number;
    /**
     * Date when player's account was created
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    created_at: number;
    /**
     * Date when player details were updated
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    updated_at: number;
    /**
     * End time of last game session
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    logout_at: number;
    /**
     * Last battle time
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    last_battle_time: number;
    /**
     * Player name
     * @type {string}
     * @memberof AccountInfoDataValue
     */
    nickname: string;
    /**
     * Personal rating
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    global_rating: number;
    /**
     * 
     * @type {AccountInfoDataValuePrivate}
     * @memberof AccountInfoDataValue
     */
    _private: AccountInfoDataValuePrivate | null;
    /**
     * Language selected in the game client
     * @type {string}
     * @memberof AccountInfoDataValue
     */
    client_language: string;
    /**
     * Clan ID
     * @type {number}
     * @memberof AccountInfoDataValue
     */
    clan_id: number | null;
}

/**
 * Check if a given object implements the AccountInfoDataValue interface.
 */
export function instanceOfAccountInfoDataValue(value: object): value is AccountInfoDataValue {
    if (!('statistics' in value) || value['statistics'] === undefined) return false;
    if (!('account_id' in value) || value['account_id'] === undefined) return false;
    if (!('created_at' in value) || value['created_at'] === undefined) return false;
    if (!('updated_at' in value) || value['updated_at'] === undefined) return false;
    if (!('logout_at' in value) || value['logout_at'] === undefined) return false;
    if (!('last_battle_time' in value) || value['last_battle_time'] === undefined) return false;
    if (!('nickname' in value) || value['nickname'] === undefined) return false;
    if (!('global_rating' in value) || value['global_rating'] === undefined) return false;
    if (!('_private' in value) || value['_private'] === undefined) return false;
    if (!('client_language' in value) || value['client_language'] === undefined) return false;
    if (!('clan_id' in value) || value['clan_id'] === undefined) return false;
    return true;
}

export function AccountInfoDataValueFromJSON(json: any): AccountInfoDataValue {
    return AccountInfoDataValueFromJSONTyped(json, false);
}

export function AccountInfoDataValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfoDataValue {
    if (json == null) {
        return json;
    }
    return {
        
        'statistics': AccountInfoDataValueStatisticsFromJSON(json['statistics']),
        'account_id': json['account_id'],
        'created_at': json['created_at'],
        'updated_at': json['updated_at'],
        'logout_at': json['logout_at'],
        'last_battle_time': json['last_battle_time'],
        'nickname': json['nickname'],
        'global_rating': json['global_rating'],
        '_private': AccountInfoDataValuePrivateFromJSON(json['private']),
        'client_language': json['client_language'],
        'clan_id': json['clan_id'],
    };
}

export function AccountInfoDataValueToJSON(json: any): AccountInfoDataValue {
    return AccountInfoDataValueToJSONTyped(json, false);
}

export function AccountInfoDataValueToJSONTyped(value?: AccountInfoDataValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'statistics': AccountInfoDataValueStatisticsToJSON(value['statistics']),
        'account_id': value['account_id'],
        'created_at': value['created_at'],
        'updated_at': value['updated_at'],
        'logout_at': value['logout_at'],
        'last_battle_time': value['last_battle_time'],
        'nickname': value['nickname'],
        'global_rating': value['global_rating'],
        'private': AccountInfoDataValuePrivateToJSON(value['_private']),
        'client_language': value['client_language'],
        'clan_id': value['clan_id'],
    };
}

export const AccountInfoDataValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

