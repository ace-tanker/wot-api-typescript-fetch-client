/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Radio characteristics
 * @export
 * @interface EncyclopediaVehiclesValueDefaultProfileRadio
 */
export interface EncyclopediaVehiclesValueDefaultProfileRadio {
    /**
     * Tier
     * @type {number}
     * @memberof EncyclopediaVehiclesValueDefaultProfileRadio
     */
    tier: number;
    /**
     * Module name
     * @type {string}
     * @memberof EncyclopediaVehiclesValueDefaultProfileRadio
     */
    name: string;
    /**
     * Weight (kg)
     * @type {number}
     * @memberof EncyclopediaVehiclesValueDefaultProfileRadio
     */
    weight: number;
    /**
     * Module tag
     * @type {string}
     * @memberof EncyclopediaVehiclesValueDefaultProfileRadio
     */
    tag: string;
    /**
     * Signal range
     * @type {number}
     * @memberof EncyclopediaVehiclesValueDefaultProfileRadio
     */
    signalRange: number;
}

/**
 * Check if a given object implements the EncyclopediaVehiclesValueDefaultProfileRadio interface.
 */
export function instanceOfEncyclopediaVehiclesValueDefaultProfileRadio(value: object): value is EncyclopediaVehiclesValueDefaultProfileRadio {
    if (!('tier' in value) || value['tier'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('weight' in value) || value['weight'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('signalRange' in value) || value['signalRange'] === undefined) return false;
    return true;
}

export function EncyclopediaVehiclesValueDefaultProfileRadioFromJSON(json: any): EncyclopediaVehiclesValueDefaultProfileRadio {
    return EncyclopediaVehiclesValueDefaultProfileRadioFromJSONTyped(json, false);
}

export function EncyclopediaVehiclesValueDefaultProfileRadioFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaVehiclesValueDefaultProfileRadio {
    if (json == null) {
        return json;
    }
    return {
        
        'tier': json['tier'],
        'name': json['name'],
        'weight': json['weight'],
        'tag': json['tag'],
        'signalRange': json['signal_range'],
    };
}

export function EncyclopediaVehiclesValueDefaultProfileRadioToJSON(json: any): EncyclopediaVehiclesValueDefaultProfileRadio {
    return EncyclopediaVehiclesValueDefaultProfileRadioToJSONTyped(json, false);
}

export function EncyclopediaVehiclesValueDefaultProfileRadioToJSONTyped(value?: EncyclopediaVehiclesValueDefaultProfileRadio | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tier': value['tier'],
        'name': value['name'],
        'weight': value['weight'],
        'tag': value['tag'],
        'signal_range': value['signalRange'],
    };
}

