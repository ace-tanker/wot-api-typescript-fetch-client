/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GlobalmapEventratingneighborsMeta
 */
export interface GlobalmapEventratingneighborsMeta {
    /**
     * 
     * @type {number}
     * @memberof GlobalmapEventratingneighborsMeta
     */
    count: number;
}

/**
 * Check if a given object implements the GlobalmapEventratingneighborsMeta interface.
 */
export function instanceOfGlobalmapEventratingneighborsMeta(value: object): value is GlobalmapEventratingneighborsMeta {
    if (!('count' in value) || value['count'] === undefined) return false;
    return true;
}

export function GlobalmapEventratingneighborsMetaFromJSON(json: any): GlobalmapEventratingneighborsMeta {
    return GlobalmapEventratingneighborsMetaFromJSONTyped(json, false);
}

export function GlobalmapEventratingneighborsMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapEventratingneighborsMeta {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
    };
}

export function GlobalmapEventratingneighborsMetaToJSON(json: any): GlobalmapEventratingneighborsMeta {
    return GlobalmapEventratingneighborsMetaToJSONTyped(json, false);
}

export function GlobalmapEventratingneighborsMetaToJSONTyped(value?: GlobalmapEventratingneighborsMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
    };
}

export const GlobalmapEventratingneighborsMetaPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

