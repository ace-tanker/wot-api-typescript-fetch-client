/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Personal Reserves.
 * @export
 * @interface AccountInfoDataValuePrivateBoostersValue
 */
export interface AccountInfoDataValuePrivateBoostersValue {
    /**
     * Status of Personal Reserves. Valid values:
     * 
     *  * ACTIVE - Active
     *  * INACTIVE - Inactive
     *  * USED - Used
     * @type {string}
     * @memberof AccountInfoDataValuePrivateBoostersValue
     */
    state: string;
    /**
     * Amount of Personal Reserves
     * @type {number}
     * @memberof AccountInfoDataValuePrivateBoostersValue
     */
    count: number;
    /**
     * Expiration time
     * @type {number}
     * @memberof AccountInfoDataValuePrivateBoostersValue
     */
    expiration_time: number;
}

/**
 * Check if a given object implements the AccountInfoDataValuePrivateBoostersValue interface.
 */
export function instanceOfAccountInfoDataValuePrivateBoostersValue(value: object): value is AccountInfoDataValuePrivateBoostersValue {
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('expiration_time' in value) || value['expiration_time'] === undefined) return false;
    return true;
}

export function AccountInfoDataValuePrivateBoostersValueFromJSON(json: any): AccountInfoDataValuePrivateBoostersValue {
    return AccountInfoDataValuePrivateBoostersValueFromJSONTyped(json, false);
}

export function AccountInfoDataValuePrivateBoostersValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfoDataValuePrivateBoostersValue {
    if (json == null) {
        return json;
    }
    return {
        
        'state': json['state'],
        'count': json['count'],
        'expiration_time': json['expiration_time'],
    };
}

export function AccountInfoDataValuePrivateBoostersValueToJSON(json: any): AccountInfoDataValuePrivateBoostersValue {
    return AccountInfoDataValuePrivateBoostersValueToJSONTyped(json, false);
}

export function AccountInfoDataValuePrivateBoostersValueToJSONTyped(value?: AccountInfoDataValuePrivateBoostersValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'state': value['state'],
        'count': value['count'],
        'expiration_time': value['expiration_time'],
    };
}

export const AccountInfoDataValuePrivateBoostersValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

