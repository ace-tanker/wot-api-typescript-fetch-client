/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { AccountTanksDataValueItemStatistics } from './AccountTanksDataValueItemStatistics.js';
import {
    AccountTanksDataValueItemStatisticsFromJSON,
    AccountTanksDataValueItemStatisticsFromJSONTyped,
    AccountTanksDataValueItemStatisticsToJSON,
    AccountTanksDataValueItemStatisticsToJSONTyped,
} from './AccountTanksDataValueItemStatistics.js';

/**
 * 
 * @export
 * @interface AccountTanksDataValueItem
 */
export interface AccountTanksDataValueItem {
    /**
     * Vehicle ID
     * @type {number}
     * @memberof AccountTanksDataValueItem
     */
    tank_id: number;
    /**
     * Mastery Badges:
     * 
     *  * 0 — None
     *  * 1 — 3rd Class 
     *  * 2 — 2nd Class
     *  * 3 — 1st Class
     *  * 4 — Ace Tanker
     * @type {number}
     * @memberof AccountTanksDataValueItem
     */
    mark_of_mastery: number;
    /**
     * 
     * @type {AccountTanksDataValueItemStatistics}
     * @memberof AccountTanksDataValueItem
     */
    statistics: AccountTanksDataValueItemStatistics;
}

/**
 * Check if a given object implements the AccountTanksDataValueItem interface.
 */
export function instanceOfAccountTanksDataValueItem(value: object): value is AccountTanksDataValueItem {
    if (!('tank_id' in value) || value['tank_id'] === undefined) return false;
    if (!('mark_of_mastery' in value) || value['mark_of_mastery'] === undefined) return false;
    if (!('statistics' in value) || value['statistics'] === undefined) return false;
    return true;
}

export function AccountTanksDataValueItemFromJSON(json: any): AccountTanksDataValueItem {
    return AccountTanksDataValueItemFromJSONTyped(json, false);
}

export function AccountTanksDataValueItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountTanksDataValueItem {
    if (json == null) {
        return json;
    }
    return {
        
        'tank_id': json['tank_id'],
        'mark_of_mastery': json['mark_of_mastery'],
        'statistics': AccountTanksDataValueItemStatisticsFromJSON(json['statistics']),
    };
}

export function AccountTanksDataValueItemToJSON(json: any): AccountTanksDataValueItem {
    return AccountTanksDataValueItemToJSONTyped(json, false);
}

export function AccountTanksDataValueItemToJSONTyped(value?: AccountTanksDataValueItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tank_id': value['tank_id'],
        'mark_of_mastery': value['mark_of_mastery'],
        'statistics': AccountTanksDataValueItemStatisticsToJSON(value['statistics']),
    };
}

export const AccountTanksDataValueItemPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

