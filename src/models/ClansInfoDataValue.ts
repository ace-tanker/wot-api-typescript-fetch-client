/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ClansInfoDataValuePrivate } from './ClansInfoDataValuePrivate.js';
import {
    ClansInfoDataValuePrivateFromJSON,
    ClansInfoDataValuePrivateFromJSONTyped,
    ClansInfoDataValuePrivateToJSON,
    ClansInfoDataValuePrivateToJSONTyped,
} from './ClansInfoDataValuePrivate.js';
import type { ClansInfoDataValueEmblems } from './ClansInfoDataValueEmblems.js';
import {
    ClansInfoDataValueEmblemsFromJSON,
    ClansInfoDataValueEmblemsFromJSONTyped,
    ClansInfoDataValueEmblemsToJSON,
    ClansInfoDataValueEmblemsToJSONTyped,
} from './ClansInfoDataValueEmblems.js';
import type { ClansInfoDataValueMembersItem } from './ClansInfoDataValueMembersItem.js';
import {
    ClansInfoDataValueMembersItemFromJSON,
    ClansInfoDataValueMembersItemFromJSONTyped,
    ClansInfoDataValueMembersItemToJSON,
    ClansInfoDataValueMembersItemToJSONTyped,
} from './ClansInfoDataValueMembersItem.js';

/**
 * 
 * @export
 * @interface ClansInfoDataValue
 */
export interface ClansInfoDataValue {
    /**
     * Clan ID
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    clan_id: number;
    /**
     * Clan name
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    name: string;
    /**
     * Clan tag
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    tag: string;
    /**
     * Clan creation date
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    created_at: number;
    /**
     * Clan color in HEX #RRGGBB
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    color: string;
    /**
     * Number of clan members
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    members_count: number;
    /**
     * 
     * @type {ClansInfoDataValueEmblems}
     * @memberof ClansInfoDataValue
     */
    emblems: ClansInfoDataValueEmblems | null;
    /**
     * Old clan name
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    old_name: string;
    /**
     * Old clan tag
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    old_tag: string;
    /**
     * Time (UTC) when clan name was changed
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    renamed_at: number;
    /**
     * Clan description
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    description: string;
    /**
     * Clan description in HTML
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    description_html: string;
    /**
     * Clan motto
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    motto: string;
    /**
     * Clan has been deleted. The deleted clan data contains valid values for the following fields only: **clan_id**, **is_clan_disbanded**, **updated_at**.
     * @type {boolean}
     * @memberof ClansInfoDataValue
     */
    is_clan_disbanded: boolean;
    /**
     * Clan can invite players
     * @type {boolean}
     * @memberof ClansInfoDataValue
     */
    accepts_join_requests: boolean;
    /**
     * Time when clan details were updated
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    updated_at: number;
    /**
     * Clan creator ID
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    creator_id: number;
    /**
     * Clan creator's name
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    creator_name: string;
    /**
     * Clan Commander ID
     * @type {number}
     * @memberof ClansInfoDataValue
     */
    leader_id: number;
    /**
     * Commander's name
     * @type {string}
     * @memberof ClansInfoDataValue
     */
    leader_name: string;
    /**
     * Information on clan members. Field format depends on members_key input parameter.
     * @type {Array<ClansInfoDataValueMembersItem>}
     * @memberof ClansInfoDataValue
     */
    members: Array<ClansInfoDataValueMembersItem> | null;
    /**
     * 
     * @type {ClansInfoDataValuePrivate}
     * @memberof ClansInfoDataValue
     */
    _private: ClansInfoDataValuePrivate | null;
}

/**
 * Check if a given object implements the ClansInfoDataValue interface.
 */
export function instanceOfClansInfoDataValue(value: object): value is ClansInfoDataValue {
    if (!('clan_id' in value) || value['clan_id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('created_at' in value) || value['created_at'] === undefined) return false;
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('members_count' in value) || value['members_count'] === undefined) return false;
    if (!('emblems' in value) || value['emblems'] === undefined) return false;
    if (!('old_name' in value) || value['old_name'] === undefined) return false;
    if (!('old_tag' in value) || value['old_tag'] === undefined) return false;
    if (!('renamed_at' in value) || value['renamed_at'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('description_html' in value) || value['description_html'] === undefined) return false;
    if (!('motto' in value) || value['motto'] === undefined) return false;
    if (!('is_clan_disbanded' in value) || value['is_clan_disbanded'] === undefined) return false;
    if (!('accepts_join_requests' in value) || value['accepts_join_requests'] === undefined) return false;
    if (!('updated_at' in value) || value['updated_at'] === undefined) return false;
    if (!('creator_id' in value) || value['creator_id'] === undefined) return false;
    if (!('creator_name' in value) || value['creator_name'] === undefined) return false;
    if (!('leader_id' in value) || value['leader_id'] === undefined) return false;
    if (!('leader_name' in value) || value['leader_name'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    if (!('_private' in value) || value['_private'] === undefined) return false;
    return true;
}

export function ClansInfoDataValueFromJSON(json: any): ClansInfoDataValue {
    return ClansInfoDataValueFromJSONTyped(json, false);
}

export function ClansInfoDataValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClansInfoDataValue {
    if (json == null) {
        return json;
    }
    return {
        
        'clan_id': json['clan_id'],
        'name': json['name'],
        'tag': json['tag'],
        'created_at': json['created_at'],
        'color': json['color'],
        'members_count': json['members_count'],
        'emblems': ClansInfoDataValueEmblemsFromJSON(json['emblems']),
        'old_name': json['old_name'],
        'old_tag': json['old_tag'],
        'renamed_at': json['renamed_at'],
        'description': json['description'],
        'description_html': json['description_html'],
        'motto': json['motto'],
        'is_clan_disbanded': json['is_clan_disbanded'],
        'accepts_join_requests': json['accepts_join_requests'],
        'updated_at': json['updated_at'],
        'creator_id': json['creator_id'],
        'creator_name': json['creator_name'],
        'leader_id': json['leader_id'],
        'leader_name': json['leader_name'],
        'members': (json['members'] == null ? null : (json['members'] as Array<any>).map(ClansInfoDataValueMembersItemFromJSON)),
        '_private': ClansInfoDataValuePrivateFromJSON(json['private']),
    };
}

export function ClansInfoDataValueToJSON(json: any): ClansInfoDataValue {
    return ClansInfoDataValueToJSONTyped(json, false);
}

export function ClansInfoDataValueToJSONTyped(value?: ClansInfoDataValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clan_id': value['clan_id'],
        'name': value['name'],
        'tag': value['tag'],
        'created_at': value['created_at'],
        'color': value['color'],
        'members_count': value['members_count'],
        'emblems': ClansInfoDataValueEmblemsToJSON(value['emblems']),
        'old_name': value['old_name'],
        'old_tag': value['old_tag'],
        'renamed_at': value['renamed_at'],
        'description': value['description'],
        'description_html': value['description_html'],
        'motto': value['motto'],
        'is_clan_disbanded': value['is_clan_disbanded'],
        'accepts_join_requests': value['accepts_join_requests'],
        'updated_at': value['updated_at'],
        'creator_id': value['creator_id'],
        'creator_name': value['creator_name'],
        'leader_id': value['leader_id'],
        'leader_name': value['leader_name'],
        'members': (value['members'] == null ? null : (value['members'] as Array<any>).map(ClansInfoDataValueMembersItemToJSON)),
        'private': ClansInfoDataValuePrivateToJSON(value['_private']),
    };
}

export const ClansInfoDataValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

