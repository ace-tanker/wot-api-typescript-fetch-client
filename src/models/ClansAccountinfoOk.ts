/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ClansAccountinfoMeta } from './ClansAccountinfoMeta.js';
import {
    ClansAccountinfoMetaFromJSON,
    ClansAccountinfoMetaFromJSONTyped,
    ClansAccountinfoMetaToJSON,
    ClansAccountinfoMetaToJSONTyped,
} from './ClansAccountinfoMeta.js';
import type { ClansAccountinfoDataValue } from './ClansAccountinfoDataValue.js';
import {
    ClansAccountinfoDataValueFromJSON,
    ClansAccountinfoDataValueFromJSONTyped,
    ClansAccountinfoDataValueToJSON,
    ClansAccountinfoDataValueToJSONTyped,
} from './ClansAccountinfoDataValue.js';

/**
 * 
 * @export
 * @interface ClansAccountinfoOk
 */
export interface ClansAccountinfoOk {
    /**
     * 
     * @type {string}
     * @memberof ClansAccountinfoOk
     */
    status: ClansAccountinfoOkStatusEnum;
    /**
     * 
     * @type {ClansAccountinfoMeta}
     * @memberof ClansAccountinfoOk
     */
    meta: ClansAccountinfoMeta;
    /**
     * 
     * @type {{ [key: string]: ClansAccountinfoDataValue | undefined; }}
     * @memberof ClansAccountinfoOk
     */
    data: { [key: string]: ClansAccountinfoDataValue | undefined; };
}

/**
* @export
* @enum {string}
*/
export enum ClansAccountinfoOkStatusEnum {
    Ok = 'ok'
}


/**
 * Check if a given object implements the ClansAccountinfoOk interface.
 */
export function instanceOfClansAccountinfoOk(value: object): value is ClansAccountinfoOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function ClansAccountinfoOkFromJSON(json: any): ClansAccountinfoOk {
    return ClansAccountinfoOkFromJSONTyped(json, false);
}

export function ClansAccountinfoOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClansAccountinfoOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': ClansAccountinfoMetaFromJSON(json['meta']),
        'data': (mapValues(json['data'], ClansAccountinfoDataValueFromJSON)),
    };
}

export function ClansAccountinfoOkToJSON(json: any): ClansAccountinfoOk {
    return ClansAccountinfoOkToJSONTyped(json, false);
}

export function ClansAccountinfoOkToJSONTyped(value?: ClansAccountinfoOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': ClansAccountinfoMetaToJSON(value['meta']),
        'data': (mapValues(value['data'], ClansAccountinfoDataValueToJSON)),
    };
}

export const ClansAccountinfoOkPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

