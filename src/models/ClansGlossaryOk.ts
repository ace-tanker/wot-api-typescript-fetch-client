/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ClansGlossaryData } from './ClansGlossaryData.js';
import {
    ClansGlossaryDataFromJSON,
    ClansGlossaryDataFromJSONTyped,
    ClansGlossaryDataToJSON,
    ClansGlossaryDataToJSONTyped,
} from './ClansGlossaryData.js';

/**
 * 
 * @export
 * @interface ClansGlossaryOk
 */
export interface ClansGlossaryOk {
    /**
     * 
     * @type {string}
     * @memberof ClansGlossaryOk
     */
    status: ClansGlossaryOkStatusEnum;
    /**
     * 
     * @type {object}
     * @memberof ClansGlossaryOk
     */
    meta: object;
    /**
     * 
     * @type {ClansGlossaryData}
     * @memberof ClansGlossaryOk
     */
    data: ClansGlossaryData;
}


/**
 * @export
 */
export const ClansGlossaryOkStatusEnum = {
    Ok: 'ok'
} as const;
export type ClansGlossaryOkStatusEnum = typeof ClansGlossaryOkStatusEnum[keyof typeof ClansGlossaryOkStatusEnum];


/**
 * Check if a given object implements the ClansGlossaryOk interface.
 */
export function instanceOfClansGlossaryOk(value: object): value is ClansGlossaryOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function ClansGlossaryOkFromJSON(json: any): ClansGlossaryOk {
    return ClansGlossaryOkFromJSONTyped(json, false);
}

export function ClansGlossaryOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClansGlossaryOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': json['meta'],
        'data': ClansGlossaryDataFromJSON(json['data']),
    };
}

export function ClansGlossaryOkToJSON(json: any): ClansGlossaryOk {
    return ClansGlossaryOkToJSONTyped(json, false);
}

export function ClansGlossaryOkToJSONTyped(value?: ClansGlossaryOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': value['meta'],
        'data': ClansGlossaryDataToJSON(value['data']),
    };
}

