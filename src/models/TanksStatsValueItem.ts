/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { TanksStatsValueItemAll } from './TanksStatsValueItemAll.js';
import {
    TanksStatsValueItemAllFromJSON,
    TanksStatsValueItemAllFromJSONTyped,
    TanksStatsValueItemAllToJSON,
    TanksStatsValueItemAllToJSONTyped,
} from './TanksStatsValueItemAll.js';
import type { TanksStatsValueItemFallout } from './TanksStatsValueItemFallout.js';
import {
    TanksStatsValueItemFalloutFromJSON,
    TanksStatsValueItemFalloutFromJSONTyped,
    TanksStatsValueItemFalloutToJSON,
    TanksStatsValueItemFalloutToJSONTyped,
} from './TanksStatsValueItemFallout.js';
import type { TanksStatsValueItemStrongholdDefense } from './TanksStatsValueItemStrongholdDefense.js';
import {
    TanksStatsValueItemStrongholdDefenseFromJSON,
    TanksStatsValueItemStrongholdDefenseFromJSONTyped,
    TanksStatsValueItemStrongholdDefenseToJSON,
    TanksStatsValueItemStrongholdDefenseToJSONTyped,
} from './TanksStatsValueItemStrongholdDefense.js';
import type { TanksStatsValueItemRegularTeam } from './TanksStatsValueItemRegularTeam.js';
import {
    TanksStatsValueItemRegularTeamFromJSON,
    TanksStatsValueItemRegularTeamFromJSONTyped,
    TanksStatsValueItemRegularTeamToJSON,
    TanksStatsValueItemRegularTeamToJSONTyped,
} from './TanksStatsValueItemRegularTeam.js';
import type { TanksStatsValueItemEpic } from './TanksStatsValueItemEpic.js';
import {
    TanksStatsValueItemEpicFromJSON,
    TanksStatsValueItemEpicFromJSONTyped,
    TanksStatsValueItemEpicToJSON,
    TanksStatsValueItemEpicToJSONTyped,
} from './TanksStatsValueItemEpic.js';
import type { TanksStatsValueItemCompany } from './TanksStatsValueItemCompany.js';
import {
    TanksStatsValueItemCompanyFromJSON,
    TanksStatsValueItemCompanyFromJSONTyped,
    TanksStatsValueItemCompanyToJSON,
    TanksStatsValueItemCompanyToJSONTyped,
} from './TanksStatsValueItemCompany.js';
import type { TanksStatsValueItemTeam } from './TanksStatsValueItemTeam.js';
import {
    TanksStatsValueItemTeamFromJSON,
    TanksStatsValueItemTeamFromJSONTyped,
    TanksStatsValueItemTeamToJSON,
    TanksStatsValueItemTeamToJSONTyped,
} from './TanksStatsValueItemTeam.js';
import type { TanksStatsValueItemClan } from './TanksStatsValueItemClan.js';
import {
    TanksStatsValueItemClanFromJSON,
    TanksStatsValueItemClanFromJSONTyped,
    TanksStatsValueItemClanToJSON,
    TanksStatsValueItemClanToJSONTyped,
} from './TanksStatsValueItemClan.js';
import type { TanksStatsValueItemStrongholdSkirmish } from './TanksStatsValueItemStrongholdSkirmish.js';
import {
    TanksStatsValueItemStrongholdSkirmishFromJSON,
    TanksStatsValueItemStrongholdSkirmishFromJSONTyped,
    TanksStatsValueItemStrongholdSkirmishToJSON,
    TanksStatsValueItemStrongholdSkirmishToJSONTyped,
} from './TanksStatsValueItemStrongholdSkirmish.js';
import type { TanksStatsValueItemGlobalmap } from './TanksStatsValueItemGlobalmap.js';
import {
    TanksStatsValueItemGlobalmapFromJSON,
    TanksStatsValueItemGlobalmapFromJSONTyped,
    TanksStatsValueItemGlobalmapToJSON,
    TanksStatsValueItemGlobalmapToJSONTyped,
} from './TanksStatsValueItemGlobalmap.js';
import type { TanksStatsValueItemRandom } from './TanksStatsValueItemRandom.js';
import {
    TanksStatsValueItemRandomFromJSON,
    TanksStatsValueItemRandomFromJSONTyped,
    TanksStatsValueItemRandomToJSON,
    TanksStatsValueItemRandomToJSONTyped,
} from './TanksStatsValueItemRandom.js';
import type { TanksStatsValueItemRanked10x10 } from './TanksStatsValueItemRanked10x10.js';
import {
    TanksStatsValueItemRanked10x10FromJSON,
    TanksStatsValueItemRanked10x10FromJSONTyped,
    TanksStatsValueItemRanked10x10ToJSON,
    TanksStatsValueItemRanked10x10ToJSONTyped,
} from './TanksStatsValueItemRanked10x10.js';
import type { TanksStatsValueItemRankedBattles } from './TanksStatsValueItemRankedBattles.js';
import {
    TanksStatsValueItemRankedBattlesFromJSON,
    TanksStatsValueItemRankedBattlesFromJSONTyped,
    TanksStatsValueItemRankedBattlesToJSON,
    TanksStatsValueItemRankedBattlesToJSONTyped,
} from './TanksStatsValueItemRankedBattles.js';

/**
 * 
 * @export
 * @interface TanksStatsValueItem
 */
export interface TanksStatsValueItem {
    /**
     * Player account ID
     * @type {number}
     * @memberof TanksStatsValueItem
     */
    accountId: number;
    /**
     * Vehicle ID
     * @type {number}
     * @memberof TanksStatsValueItem
     */
    tankId: number;
    /**
     * 
     * @type {TanksStatsValueItemAll}
     * @memberof TanksStatsValueItem
     */
    all: TanksStatsValueItemAll;
    /**
     * 
     * @type {TanksStatsValueItemCompany}
     * @memberof TanksStatsValueItem
     */
    company: TanksStatsValueItemCompany;
    /**
     * 
     * @type {TanksStatsValueItemStrongholdDefense}
     * @memberof TanksStatsValueItem
     */
    strongholdDefense: TanksStatsValueItemStrongholdDefense;
    /**
     * 
     * @type {TanksStatsValueItemStrongholdSkirmish}
     * @memberof TanksStatsValueItem
     */
    strongholdSkirmish: TanksStatsValueItemStrongholdSkirmish;
    /**
     * 
     * @type {TanksStatsValueItemClan}
     * @memberof TanksStatsValueItem
     */
    clan: TanksStatsValueItemClan;
    /**
     * 
     * @type {TanksStatsValueItemRandom}
     * @memberof TanksStatsValueItem
     */
    random?: TanksStatsValueItemRandom;
    /**
     * 
     * @type {TanksStatsValueItemFallout}
     * @memberof TanksStatsValueItem
     */
    fallout?: TanksStatsValueItemFallout;
    /**
     * 
     * @type {TanksStatsValueItemTeam}
     * @memberof TanksStatsValueItem
     */
    team: TanksStatsValueItemTeam;
    /**
     * 
     * @type {TanksStatsValueItemRegularTeam}
     * @memberof TanksStatsValueItem
     */
    regularTeam: TanksStatsValueItemRegularTeam;
    /**
     * 
     * @type {TanksStatsValueItemGlobalmap}
     * @memberof TanksStatsValueItem
     */
    globalmap: TanksStatsValueItemGlobalmap;
    /**
     * 
     * @type {TanksStatsValueItemEpic}
     * @memberof TanksStatsValueItem
     */
    epic?: TanksStatsValueItemEpic;
    /**
     * 
     * @type {TanksStatsValueItemRankedBattles}
     * @memberof TanksStatsValueItem
     */
    rankedBattles?: TanksStatsValueItemRankedBattles | null;
    /**
     * Maximum experience per battle
     * @type {number}
     * @memberof TanksStatsValueItem
     */
    maxXp: number;
    /**
     * Maximum destroyed in battle
     * @type {number}
     * @memberof TanksStatsValueItem
     */
    maxFrags: number;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof TanksStatsValueItem
     */
    frags: { [key: string]: number; } | null;
    /**
     * 
     * @type {boolean}
     * @memberof TanksStatsValueItem
     */
    inGarage: boolean | null;
    /**
     * Mastery Badges:
     * 
     *  * 0 — None
     *  * 1 — 3rd Class 
     *  * 2 — 2nd Class
     *  * 3 — 1st Class
     *  * 4 — Ace Tanker
     * @type {number}
     * @memberof TanksStatsValueItem
     */
    markOfMastery: number;
    /**
     * 
     * @type {TanksStatsValueItemRanked10x10}
     * @memberof TanksStatsValueItem
     */
    ranked10x10?: TanksStatsValueItemRanked10x10;
}

/**
 * Check if a given object implements the TanksStatsValueItem interface.
 */
export function instanceOfTanksStatsValueItem(value: object): value is TanksStatsValueItem {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('tankId' in value) || value['tankId'] === undefined) return false;
    if (!('all' in value) || value['all'] === undefined) return false;
    if (!('company' in value) || value['company'] === undefined) return false;
    if (!('strongholdDefense' in value) || value['strongholdDefense'] === undefined) return false;
    if (!('strongholdSkirmish' in value) || value['strongholdSkirmish'] === undefined) return false;
    if (!('clan' in value) || value['clan'] === undefined) return false;
    if (!('team' in value) || value['team'] === undefined) return false;
    if (!('regularTeam' in value) || value['regularTeam'] === undefined) return false;
    if (!('globalmap' in value) || value['globalmap'] === undefined) return false;
    if (!('maxXp' in value) || value['maxXp'] === undefined) return false;
    if (!('maxFrags' in value) || value['maxFrags'] === undefined) return false;
    if (!('frags' in value) || value['frags'] === undefined) return false;
    if (!('inGarage' in value) || value['inGarage'] === undefined) return false;
    if (!('markOfMastery' in value) || value['markOfMastery'] === undefined) return false;
    return true;
}

export function TanksStatsValueItemFromJSON(json: any): TanksStatsValueItem {
    return TanksStatsValueItemFromJSONTyped(json, false);
}

export function TanksStatsValueItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): TanksStatsValueItem {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['account_id'],
        'tankId': json['tank_id'],
        'all': TanksStatsValueItemAllFromJSON(json['all']),
        'company': TanksStatsValueItemCompanyFromJSON(json['company']),
        'strongholdDefense': TanksStatsValueItemStrongholdDefenseFromJSON(json['stronghold_defense']),
        'strongholdSkirmish': TanksStatsValueItemStrongholdSkirmishFromJSON(json['stronghold_skirmish']),
        'clan': TanksStatsValueItemClanFromJSON(json['clan']),
        'random': json['random'] == null ? undefined : TanksStatsValueItemRandomFromJSON(json['random']),
        'fallout': json['fallout'] == null ? undefined : TanksStatsValueItemFalloutFromJSON(json['fallout']),
        'team': TanksStatsValueItemTeamFromJSON(json['team']),
        'regularTeam': TanksStatsValueItemRegularTeamFromJSON(json['regular_team']),
        'globalmap': TanksStatsValueItemGlobalmapFromJSON(json['globalmap']),
        'epic': json['epic'] == null ? undefined : TanksStatsValueItemEpicFromJSON(json['epic']),
        'rankedBattles': json['ranked_battles'] == null ? undefined : TanksStatsValueItemRankedBattlesFromJSON(json['ranked_battles']),
        'maxXp': json['max_xp'],
        'maxFrags': json['max_frags'],
        'frags': json['frags'],
        'inGarage': json['in_garage'],
        'markOfMastery': json['mark_of_mastery'],
        'ranked10x10': json['ranked_10x10'] == null ? undefined : TanksStatsValueItemRanked10x10FromJSON(json['ranked_10x10']),
    };
}

export function TanksStatsValueItemToJSON(json: any): TanksStatsValueItem {
    return TanksStatsValueItemToJSONTyped(json, false);
}

export function TanksStatsValueItemToJSONTyped(value?: TanksStatsValueItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_id': value['accountId'],
        'tank_id': value['tankId'],
        'all': TanksStatsValueItemAllToJSON(value['all']),
        'company': TanksStatsValueItemCompanyToJSON(value['company']),
        'stronghold_defense': TanksStatsValueItemStrongholdDefenseToJSON(value['strongholdDefense']),
        'stronghold_skirmish': TanksStatsValueItemStrongholdSkirmishToJSON(value['strongholdSkirmish']),
        'clan': TanksStatsValueItemClanToJSON(value['clan']),
        'random': TanksStatsValueItemRandomToJSON(value['random']),
        'fallout': TanksStatsValueItemFalloutToJSON(value['fallout']),
        'team': TanksStatsValueItemTeamToJSON(value['team']),
        'regular_team': TanksStatsValueItemRegularTeamToJSON(value['regularTeam']),
        'globalmap': TanksStatsValueItemGlobalmapToJSON(value['globalmap']),
        'epic': TanksStatsValueItemEpicToJSON(value['epic']),
        'ranked_battles': TanksStatsValueItemRankedBattlesToJSON(value['rankedBattles']),
        'max_xp': value['maxXp'],
        'max_frags': value['maxFrags'],
        'frags': value['frags'],
        'in_garage': value['inGarage'],
        'mark_of_mastery': value['markOfMastery'],
        'ranked_10x10': TanksStatsValueItemRanked10x10ToJSON(value['ranked10x10']),
    };
}

