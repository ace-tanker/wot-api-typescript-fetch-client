/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Vehicle Rental.
 * @export
 * @interface AccountInfoDataValuePrivateRentedValue
 */
export interface AccountInfoDataValuePrivateRentedValue {
    /**
     * Rented vehicle ID
     * @type {number}
     * @memberof AccountInfoDataValuePrivateRentedValue
     */
    tank_id: number;
    /**
     * Rental compensation in credits
     * @type {number}
     * @memberof AccountInfoDataValuePrivateRentedValue
     */
    compensation_credits: number;
    /**
     * Rental compensation in gold
     * @type {number}
     * @memberof AccountInfoDataValuePrivateRentedValue
     */
    compensation_gold: number;
    /**
     * Vehicle Rental expiration time
     * @type {number}
     * @memberof AccountInfoDataValuePrivateRentedValue
     */
    expiration_time: number;
}

/**
 * Check if a given object implements the AccountInfoDataValuePrivateRentedValue interface.
 */
export function instanceOfAccountInfoDataValuePrivateRentedValue(value: object): value is AccountInfoDataValuePrivateRentedValue {
    if (!('tank_id' in value) || value['tank_id'] === undefined) return false;
    if (!('compensation_credits' in value) || value['compensation_credits'] === undefined) return false;
    if (!('compensation_gold' in value) || value['compensation_gold'] === undefined) return false;
    if (!('expiration_time' in value) || value['expiration_time'] === undefined) return false;
    return true;
}

export function AccountInfoDataValuePrivateRentedValueFromJSON(json: any): AccountInfoDataValuePrivateRentedValue {
    return AccountInfoDataValuePrivateRentedValueFromJSONTyped(json, false);
}

export function AccountInfoDataValuePrivateRentedValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfoDataValuePrivateRentedValue {
    if (json == null) {
        return json;
    }
    return {
        
        'tank_id': json['tank_id'],
        'compensation_credits': json['compensation_credits'],
        'compensation_gold': json['compensation_gold'],
        'expiration_time': json['expiration_time'],
    };
}

export function AccountInfoDataValuePrivateRentedValueToJSON(json: any): AccountInfoDataValuePrivateRentedValue {
    return AccountInfoDataValuePrivateRentedValueToJSONTyped(json, false);
}

export function AccountInfoDataValuePrivateRentedValueToJSONTyped(value?: AccountInfoDataValuePrivateRentedValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tank_id': value['tank_id'],
        'compensation_credits': value['compensation_credits'],
        'compensation_gold': value['compensation_gold'],
        'expiration_time': value['expiration_time'],
    };
}

export const AccountInfoDataValuePrivateRentedValuePropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

