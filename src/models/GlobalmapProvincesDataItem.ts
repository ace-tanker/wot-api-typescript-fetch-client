/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { GlobalmapProvincesDataItemActiveBattlesItem } from './GlobalmapProvincesDataItemActiveBattlesItem.js';
import {
    GlobalmapProvincesDataItemActiveBattlesItemFromJSON,
    GlobalmapProvincesDataItemActiveBattlesItemFromJSONTyped,
    GlobalmapProvincesDataItemActiveBattlesItemToJSON,
    GlobalmapProvincesDataItemActiveBattlesItemToJSONTyped,
} from './GlobalmapProvincesDataItemActiveBattlesItem.js';

/**
 * 
 * @export
 * @interface GlobalmapProvincesDataItem
 */
export interface GlobalmapProvincesDataItem {
    /**
     * Map ID
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    arena_id: string;
    /**
     * Localized map name
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    arena_name: string;
    /**
     * Daily income
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    daily_revenue: number;
    /**
     * Front ID
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    front_id: string;
    /**
     * Front name
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    front_name: string;
    /**
     * Income level from 0 to 11. 0 value means that income was not raised.
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    revenue_level: number;
    /**
     * Prime Time in UTC
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    prime_time: string;
    /**
     * Province ID
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    province_id: string;
    /**
     * Province name
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    province_name: string;
    /**
     * Landing type: auction, tournament or null
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    landing_type: string | null;
    /**
     * Indicates if Repartition of the World is active
     * @type {boolean}
     * @memberof GlobalmapProvincesDataItem
     */
    world_redivision: boolean;
    /**
     * Current minimum bid
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    current_min_bet: number;
    /**
     * Last winning bid
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    last_won_bet: number;
    /**
     * List of adjacent provinces' IDs
     * @type {Array<string>}
     * @memberof GlobalmapProvincesDataItem
     */
    neighbours: Array<string>;
    /**
     * Relative link to province
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    uri: string;
    /**
     * Round
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    round_number: number | null;
    /**
     * Battles start time in UTC
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    battles_start_at: string;
    /**
     * Tournament status: STARTED, FINISHED or null
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    status: string | null;
    /**
     * Maximum number of bids
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    max_bets: number;
    /**
     * List of IDs of participating clans
     * @type {Array<number>}
     * @memberof GlobalmapProvincesDataItem
     */
    competitors: Array<number>;
    /**
     * List of IDs of attacking clans
     * @type {Array<number>}
     * @memberof GlobalmapProvincesDataItem
     */
    attackers: Array<number>;
    /**
     * Current battles
     * @type {Array<GlobalmapProvincesDataItemActiveBattlesItem>}
     * @memberof GlobalmapProvincesDataItem
     */
    active_battles: Array<GlobalmapProvincesDataItemActiveBattlesItem>;
    /**
     * Owning clan ID
     * @type {number}
     * @memberof GlobalmapProvincesDataItem
     */
    owner_clan_id: number;
    /**
     * Province borders are closed
     * @type {boolean}
     * @memberof GlobalmapProvincesDataItem
     */
    is_borders_disabled: boolean;
    /**
     * Date when province will restore its revenue after ransack
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    pillage_end_at: string | null;
    /**
     * Server ID
     * @type {string}
     * @memberof GlobalmapProvincesDataItem
     */
    server: string;
}

/**
 * Check if a given object implements the GlobalmapProvincesDataItem interface.
 */
export function instanceOfGlobalmapProvincesDataItem(value: object): value is GlobalmapProvincesDataItem {
    if (!('arena_id' in value) || value['arena_id'] === undefined) return false;
    if (!('arena_name' in value) || value['arena_name'] === undefined) return false;
    if (!('daily_revenue' in value) || value['daily_revenue'] === undefined) return false;
    if (!('front_id' in value) || value['front_id'] === undefined) return false;
    if (!('front_name' in value) || value['front_name'] === undefined) return false;
    if (!('revenue_level' in value) || value['revenue_level'] === undefined) return false;
    if (!('prime_time' in value) || value['prime_time'] === undefined) return false;
    if (!('province_id' in value) || value['province_id'] === undefined) return false;
    if (!('province_name' in value) || value['province_name'] === undefined) return false;
    if (!('landing_type' in value) || value['landing_type'] === undefined) return false;
    if (!('world_redivision' in value) || value['world_redivision'] === undefined) return false;
    if (!('current_min_bet' in value) || value['current_min_bet'] === undefined) return false;
    if (!('last_won_bet' in value) || value['last_won_bet'] === undefined) return false;
    if (!('neighbours' in value) || value['neighbours'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    if (!('round_number' in value) || value['round_number'] === undefined) return false;
    if (!('battles_start_at' in value) || value['battles_start_at'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('max_bets' in value) || value['max_bets'] === undefined) return false;
    if (!('competitors' in value) || value['competitors'] === undefined) return false;
    if (!('attackers' in value) || value['attackers'] === undefined) return false;
    if (!('active_battles' in value) || value['active_battles'] === undefined) return false;
    if (!('owner_clan_id' in value) || value['owner_clan_id'] === undefined) return false;
    if (!('is_borders_disabled' in value) || value['is_borders_disabled'] === undefined) return false;
    if (!('pillage_end_at' in value) || value['pillage_end_at'] === undefined) return false;
    if (!('server' in value) || value['server'] === undefined) return false;
    return true;
}

export function GlobalmapProvincesDataItemFromJSON(json: any): GlobalmapProvincesDataItem {
    return GlobalmapProvincesDataItemFromJSONTyped(json, false);
}

export function GlobalmapProvincesDataItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapProvincesDataItem {
    if (json == null) {
        return json;
    }
    return {
        
        'arena_id': json['arena_id'],
        'arena_name': json['arena_name'],
        'daily_revenue': json['daily_revenue'],
        'front_id': json['front_id'],
        'front_name': json['front_name'],
        'revenue_level': json['revenue_level'],
        'prime_time': json['prime_time'],
        'province_id': json['province_id'],
        'province_name': json['province_name'],
        'landing_type': json['landing_type'],
        'world_redivision': json['world_redivision'],
        'current_min_bet': json['current_min_bet'],
        'last_won_bet': json['last_won_bet'],
        'neighbours': json['neighbours'],
        'uri': json['uri'],
        'round_number': json['round_number'],
        'battles_start_at': json['battles_start_at'],
        'status': json['status'],
        'max_bets': json['max_bets'],
        'competitors': json['competitors'],
        'attackers': json['attackers'],
        'active_battles': ((json['active_battles'] as Array<any>).map(GlobalmapProvincesDataItemActiveBattlesItemFromJSON)),
        'owner_clan_id': json['owner_clan_id'],
        'is_borders_disabled': json['is_borders_disabled'],
        'pillage_end_at': json['pillage_end_at'],
        'server': json['server'],
    };
}

export function GlobalmapProvincesDataItemToJSON(json: any): GlobalmapProvincesDataItem {
    return GlobalmapProvincesDataItemToJSONTyped(json, false);
}

export function GlobalmapProvincesDataItemToJSONTyped(value?: GlobalmapProvincesDataItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arena_id': value['arena_id'],
        'arena_name': value['arena_name'],
        'daily_revenue': value['daily_revenue'],
        'front_id': value['front_id'],
        'front_name': value['front_name'],
        'revenue_level': value['revenue_level'],
        'prime_time': value['prime_time'],
        'province_id': value['province_id'],
        'province_name': value['province_name'],
        'landing_type': value['landing_type'],
        'world_redivision': value['world_redivision'],
        'current_min_bet': value['current_min_bet'],
        'last_won_bet': value['last_won_bet'],
        'neighbours': value['neighbours'],
        'uri': value['uri'],
        'round_number': value['round_number'],
        'battles_start_at': value['battles_start_at'],
        'status': value['status'],
        'max_bets': value['max_bets'],
        'competitors': value['competitors'],
        'attackers': value['attackers'],
        'active_battles': ((value['active_battles'] as Array<any>).map(GlobalmapProvincesDataItemActiveBattlesItemToJSON)),
        'owner_clan_id': value['owner_clan_id'],
        'is_borders_disabled': value['is_borders_disabled'],
        'pillage_end_at': value['pillage_end_at'],
        'server': value['server'],
    };
}

export const GlobalmapProvincesDataItemPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

