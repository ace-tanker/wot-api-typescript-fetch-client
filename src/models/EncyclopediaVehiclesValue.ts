/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaVehiclesValueImages } from './EncyclopediaVehiclesValueImages.js';
import {
    EncyclopediaVehiclesValueImagesFromJSON,
    EncyclopediaVehiclesValueImagesFromJSONTyped,
    EncyclopediaVehiclesValueImagesToJSON,
    EncyclopediaVehiclesValueImagesToJSONTyped,
} from './EncyclopediaVehiclesValueImages.js';
import type { EncyclopediaVehiclesValueCrewItem } from './EncyclopediaVehiclesValueCrewItem.js';
import {
    EncyclopediaVehiclesValueCrewItemFromJSON,
    EncyclopediaVehiclesValueCrewItemFromJSONTyped,
    EncyclopediaVehiclesValueCrewItemToJSON,
    EncyclopediaVehiclesValueCrewItemToJSONTyped,
} from './EncyclopediaVehiclesValueCrewItem.js';
import type { EncyclopediaVehiclesValueDefaultProfile } from './EncyclopediaVehiclesValueDefaultProfile.js';
import {
    EncyclopediaVehiclesValueDefaultProfileFromJSON,
    EncyclopediaVehiclesValueDefaultProfileFromJSONTyped,
    EncyclopediaVehiclesValueDefaultProfileToJSON,
    EncyclopediaVehiclesValueDefaultProfileToJSONTyped,
} from './EncyclopediaVehiclesValueDefaultProfile.js';
import type { EncyclopediaVehiclesValueModulesTreeValue } from './EncyclopediaVehiclesValueModulesTreeValue.js';
import {
    EncyclopediaVehiclesValueModulesTreeValueFromJSON,
    EncyclopediaVehiclesValueModulesTreeValueFromJSONTyped,
    EncyclopediaVehiclesValueModulesTreeValueToJSON,
    EncyclopediaVehiclesValueModulesTreeValueToJSONTyped,
} from './EncyclopediaVehiclesValueModulesTreeValue.js';
import type { EncyclopediaVehiclesValueMultinationValue } from './EncyclopediaVehiclesValueMultinationValue.js';
import {
    EncyclopediaVehiclesValueMultinationValueFromJSON,
    EncyclopediaVehiclesValueMultinationValueFromJSONTyped,
    EncyclopediaVehiclesValueMultinationValueToJSON,
    EncyclopediaVehiclesValueMultinationValueToJSONTyped,
} from './EncyclopediaVehiclesValueMultinationValue.js';

/**
 * 
 * @export
 * @interface EncyclopediaVehiclesValue
 */
export interface EncyclopediaVehiclesValue {
    /**
     * Vehicle ID
     * @type {number}
     * @memberof EncyclopediaVehiclesValue
     */
    tankId: number;
    /**
     * Vehicle type
     * @type {string}
     * @memberof EncyclopediaVehiclesValue
     */
    type: string;
    /**
     * Vehicle tag
     * @type {string}
     * @memberof EncyclopediaVehiclesValue
     */
    tag: string;
    /**
     * Vehicle name
     * @type {string}
     * @memberof EncyclopediaVehiclesValue
     */
    name: string;
    /**
     * Vehicle short name
     * @type {string}
     * @memberof EncyclopediaVehiclesValue
     */
    shortName: string;
    /**
     * Vehicle description
     * @type {string}
     * @memberof EncyclopediaVehiclesValue
     */
    description: string;
    /**
     * Nation
     * @type {string}
     * @memberof EncyclopediaVehiclesValue
     */
    nation: string;
    /**
     * Tier
     * @type {number}
     * @memberof EncyclopediaVehiclesValue
     */
    tier: number;
    /**
     * Indicates if the vehicle is Premium vehicle
     * @type {boolean}
     * @memberof EncyclopediaVehiclesValue
     */
    isPremium: boolean;
    /**
     * Indicates if the vehicle is a gift vehicle
     * @type {boolean}
     * @memberof EncyclopediaVehiclesValue
     */
    isGift: boolean;
    /**
     * Indicates if the vehicle is a wheeled vehicle
     * @type {boolean}
     * @memberof EncyclopediaVehiclesValue
     */
    isWheeled: boolean;
    /**
     * Indicates the IGR vehicle. Active only for Korea realm
     * @type {boolean}
     * @memberof EncyclopediaVehiclesValue
     */
    isPremiumIgr: boolean;
    /**
     * 
     * @type {EncyclopediaVehiclesValueImages}
     * @memberof EncyclopediaVehiclesValue
     */
    images: EncyclopediaVehiclesValueImages;
    /**
     * 
     * @type {number}
     * @memberof EncyclopediaVehiclesValue
     */
    priceCredit: number | null;
    /**
     * 
     * @type {number}
     * @memberof EncyclopediaVehiclesValue
     */
    priceGold: number | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof EncyclopediaVehiclesValue
     */
    pricesXp: { [key: string]: number; } | null;
    /**
     * 
     * @type {{ [key: string]: number; }}
     * @memberof EncyclopediaVehiclesValue
     */
    nextTanks: { [key: string]: number; } | null;
    /**
     * 
     * @type {EncyclopediaVehiclesValueDefaultProfile}
     * @memberof EncyclopediaVehiclesValue
     */
    defaultProfile: EncyclopediaVehiclesValueDefaultProfile;
    /**
     * List of compatible gun IDs
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesValue
     */
    guns: Array<number>;
    /**
     * List of compatible turret IDs
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesValue
     */
    turrets: Array<number>;
    /**
     * List of compatible engine IDs
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesValue
     */
    engines: Array<number>;
    /**
     * List of compatible suspension IDs
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesValue
     */
    suspensions: Array<number>;
    /**
     * List of compatible radio IDs
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesValue
     */
    radios: Array<number>;
    /**
     * List of IDs of compatible equipment and consumables
     * @type {Array<number>}
     * @memberof EncyclopediaVehiclesValue
     */
    provisions: Array<number>;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaVehiclesValueModulesTreeValue; }}
     * @memberof EncyclopediaVehiclesValue
     */
    modulesTree: { [key: string]: EncyclopediaVehiclesValueModulesTreeValue; };
    /**
     * Crew
     * @type {Array<EncyclopediaVehiclesValueCrewItem>}
     * @memberof EncyclopediaVehiclesValue
     */
    crew: Array<EncyclopediaVehiclesValueCrewItem>;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaVehiclesValueMultinationValue; }}
     * @memberof EncyclopediaVehiclesValue
     */
    multination: { [key: string]: EncyclopediaVehiclesValueMultinationValue; } | null;
}

/**
 * Check if a given object implements the EncyclopediaVehiclesValue interface.
 */
export function instanceOfEncyclopediaVehiclesValue(value: object): value is EncyclopediaVehiclesValue {
    if (!('tankId' in value) || value['tankId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('shortName' in value) || value['shortName'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('nation' in value) || value['nation'] === undefined) return false;
    if (!('tier' in value) || value['tier'] === undefined) return false;
    if (!('isPremium' in value) || value['isPremium'] === undefined) return false;
    if (!('isGift' in value) || value['isGift'] === undefined) return false;
    if (!('isWheeled' in value) || value['isWheeled'] === undefined) return false;
    if (!('isPremiumIgr' in value) || value['isPremiumIgr'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    if (!('priceCredit' in value) || value['priceCredit'] === undefined) return false;
    if (!('priceGold' in value) || value['priceGold'] === undefined) return false;
    if (!('pricesXp' in value) || value['pricesXp'] === undefined) return false;
    if (!('nextTanks' in value) || value['nextTanks'] === undefined) return false;
    if (!('defaultProfile' in value) || value['defaultProfile'] === undefined) return false;
    if (!('guns' in value) || value['guns'] === undefined) return false;
    if (!('turrets' in value) || value['turrets'] === undefined) return false;
    if (!('engines' in value) || value['engines'] === undefined) return false;
    if (!('suspensions' in value) || value['suspensions'] === undefined) return false;
    if (!('radios' in value) || value['radios'] === undefined) return false;
    if (!('provisions' in value) || value['provisions'] === undefined) return false;
    if (!('modulesTree' in value) || value['modulesTree'] === undefined) return false;
    if (!('crew' in value) || value['crew'] === undefined) return false;
    if (!('multination' in value) || value['multination'] === undefined) return false;
    return true;
}

export function EncyclopediaVehiclesValueFromJSON(json: any): EncyclopediaVehiclesValue {
    return EncyclopediaVehiclesValueFromJSONTyped(json, false);
}

export function EncyclopediaVehiclesValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaVehiclesValue {
    if (json == null) {
        return json;
    }
    return {
        
        'tankId': json['tank_id'],
        'type': json['type'],
        'tag': json['tag'],
        'name': json['name'],
        'shortName': json['short_name'],
        'description': json['description'],
        'nation': json['nation'],
        'tier': json['tier'],
        'isPremium': json['is_premium'],
        'isGift': json['is_gift'],
        'isWheeled': json['is_wheeled'],
        'isPremiumIgr': json['is_premium_igr'],
        'images': EncyclopediaVehiclesValueImagesFromJSON(json['images']),
        'priceCredit': json['price_credit'],
        'priceGold': json['price_gold'],
        'pricesXp': json['prices_xp'],
        'nextTanks': json['next_tanks'],
        'defaultProfile': EncyclopediaVehiclesValueDefaultProfileFromJSON(json['default_profile']),
        'guns': json['guns'],
        'turrets': json['turrets'],
        'engines': json['engines'],
        'suspensions': json['suspensions'],
        'radios': json['radios'],
        'provisions': json['provisions'],
        'modulesTree': (mapValues(json['modules_tree'], EncyclopediaVehiclesValueModulesTreeValueFromJSON)),
        'crew': ((json['crew'] as Array<any>).map(EncyclopediaVehiclesValueCrewItemFromJSON)),
        'multination': (json['multination'] == null ? null : mapValues(json['multination'], EncyclopediaVehiclesValueMultinationValueFromJSON)),
    };
}

export function EncyclopediaVehiclesValueToJSON(json: any): EncyclopediaVehiclesValue {
    return EncyclopediaVehiclesValueToJSONTyped(json, false);
}

export function EncyclopediaVehiclesValueToJSONTyped(value?: EncyclopediaVehiclesValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tank_id': value['tankId'],
        'type': value['type'],
        'tag': value['tag'],
        'name': value['name'],
        'short_name': value['shortName'],
        'description': value['description'],
        'nation': value['nation'],
        'tier': value['tier'],
        'is_premium': value['isPremium'],
        'is_gift': value['isGift'],
        'is_wheeled': value['isWheeled'],
        'is_premium_igr': value['isPremiumIgr'],
        'images': EncyclopediaVehiclesValueImagesToJSON(value['images']),
        'price_credit': value['priceCredit'],
        'price_gold': value['priceGold'],
        'prices_xp': value['pricesXp'],
        'next_tanks': value['nextTanks'],
        'default_profile': EncyclopediaVehiclesValueDefaultProfileToJSON(value['defaultProfile']),
        'guns': value['guns'],
        'turrets': value['turrets'],
        'engines': value['engines'],
        'suspensions': value['suspensions'],
        'radios': value['radios'],
        'provisions': value['provisions'],
        'modules_tree': (mapValues(value['modulesTree'], EncyclopediaVehiclesValueModulesTreeValueToJSON)),
        'crew': ((value['crew'] as Array<any>).map(EncyclopediaVehiclesValueCrewItemToJSON)),
        'multination': (value['multination'] == null ? null : mapValues(value['multination'], EncyclopediaVehiclesValueMultinationValueToJSON)),
    };
}

