/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaInfoDataAchievementSectionsValue } from './EncyclopediaInfoDataAchievementSectionsValue.js';
import {
    EncyclopediaInfoDataAchievementSectionsValueFromJSON,
    EncyclopediaInfoDataAchievementSectionsValueFromJSONTyped,
    EncyclopediaInfoDataAchievementSectionsValueToJSON,
    EncyclopediaInfoDataAchievementSectionsValueToJSONTyped,
} from './EncyclopediaInfoDataAchievementSectionsValue.js';

/**
 * 
 * @export
 * @interface EncyclopediaInfoData
 */
export interface EncyclopediaInfoData {
    /**
     * Game client version
     * @type {string}
     * @memberof EncyclopediaInfoData
     */
    game_version: string;
    /**
     * Time when vehicles details in Tankopedia were updated
     * @type {number}
     * @memberof EncyclopediaInfoData
     */
    tanks_updated_at: number;
    /**
     * Available vehicle types
     * @type {{ [key: string]: string | undefined; }}
     * @memberof EncyclopediaInfoData
     */
    vehicle_types: { [key: string]: string | undefined; };
    /**
     * Nations available
     * @type {{ [key: string]: string | undefined; }}
     * @memberof EncyclopediaInfoData
     */
    vehicle_nations: { [key: string]: string | undefined; };
    /**
     * Available crew qualifications
     * @type {{ [key: string]: string | undefined; }}
     * @memberof EncyclopediaInfoData
     */
    vehicle_crew_roles: { [key: string]: string | undefined; };
    /**
     * List of supported languages
     * @type {{ [key: string]: string | undefined; }}
     * @memberof EncyclopediaInfoData
     */
    languages: { [key: string]: string | undefined; };
    /**
     * 
     * @type {{ [key: string]: EncyclopediaInfoDataAchievementSectionsValue | undefined; }}
     * @memberof EncyclopediaInfoData
     */
    achievement_sections: { [key: string]: EncyclopediaInfoDataAchievementSectionsValue | undefined; };
}

/**
 * Check if a given object implements the EncyclopediaInfoData interface.
 */
export function instanceOfEncyclopediaInfoData(value: object): value is EncyclopediaInfoData {
    if (!('game_version' in value) || value['game_version'] === undefined) return false;
    if (!('tanks_updated_at' in value) || value['tanks_updated_at'] === undefined) return false;
    if (!('vehicle_types' in value) || value['vehicle_types'] === undefined) return false;
    if (!('vehicle_nations' in value) || value['vehicle_nations'] === undefined) return false;
    if (!('vehicle_crew_roles' in value) || value['vehicle_crew_roles'] === undefined) return false;
    if (!('languages' in value) || value['languages'] === undefined) return false;
    if (!('achievement_sections' in value) || value['achievement_sections'] === undefined) return false;
    return true;
}

export function EncyclopediaInfoDataFromJSON(json: any): EncyclopediaInfoData {
    return EncyclopediaInfoDataFromJSONTyped(json, false);
}

export function EncyclopediaInfoDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaInfoData {
    if (json == null) {
        return json;
    }
    return {
        
        'game_version': json['game_version'],
        'tanks_updated_at': json['tanks_updated_at'],
        'vehicle_types': json['vehicle_types'],
        'vehicle_nations': json['vehicle_nations'],
        'vehicle_crew_roles': json['vehicle_crew_roles'],
        'languages': json['languages'],
        'achievement_sections': (mapValues(json['achievement_sections'], EncyclopediaInfoDataAchievementSectionsValueFromJSON)),
    };
}

export function EncyclopediaInfoDataToJSON(json: any): EncyclopediaInfoData {
    return EncyclopediaInfoDataToJSONTyped(json, false);
}

export function EncyclopediaInfoDataToJSONTyped(value?: EncyclopediaInfoData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'game_version': value['game_version'],
        'tanks_updated_at': value['tanks_updated_at'],
        'vehicle_types': value['vehicle_types'],
        'vehicle_nations': value['vehicle_nations'],
        'vehicle_crew_roles': value['vehicle_crew_roles'],
        'languages': value['languages'],
        'achievement_sections': (mapValues(value['achievement_sections'], EncyclopediaInfoDataAchievementSectionsValueToJSON)),
    };
}

export const EncyclopediaInfoDataPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

