/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Player is not a clan member
 * @export
 * @interface ClansMessageboardErrorErrorOneOf
 */
export interface ClansMessageboardErrorErrorOneOf {
    /**
     * 
     * @type {number}
     * @memberof ClansMessageboardErrorErrorOneOf
     */
    code: ClansMessageboardErrorErrorOneOfCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof ClansMessageboardErrorErrorOneOf
     */
    message: ClansMessageboardErrorErrorOneOfMessageEnum;
    /**
     * 
     * @type {string}
     * @memberof ClansMessageboardErrorErrorOneOf
     */
    field: string | null;
    /**
     * 
     * @type {string}
     * @memberof ClansMessageboardErrorErrorOneOf
     */
    value: string | null;
}


/**
 * @export
 */
export const ClansMessageboardErrorErrorOneOfCodeEnum = {
    NUMBER_404: 404
} as const;
export type ClansMessageboardErrorErrorOneOfCodeEnum = typeof ClansMessageboardErrorErrorOneOfCodeEnum[keyof typeof ClansMessageboardErrorErrorOneOfCodeEnum];

/**
 * @export
 */
export const ClansMessageboardErrorErrorOneOfMessageEnum = {
    ClanNotFound: 'CLAN_NOT_FOUND'
} as const;
export type ClansMessageboardErrorErrorOneOfMessageEnum = typeof ClansMessageboardErrorErrorOneOfMessageEnum[keyof typeof ClansMessageboardErrorErrorOneOfMessageEnum];


/**
 * Check if a given object implements the ClansMessageboardErrorErrorOneOf interface.
 */
export function instanceOfClansMessageboardErrorErrorOneOf(value: object): value is ClansMessageboardErrorErrorOneOf {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('field' in value) || value['field'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    return true;
}

export function ClansMessageboardErrorErrorOneOfFromJSON(json: any): ClansMessageboardErrorErrorOneOf {
    return ClansMessageboardErrorErrorOneOfFromJSONTyped(json, false);
}

export function ClansMessageboardErrorErrorOneOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClansMessageboardErrorErrorOneOf {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'],
        'field': json['field'],
        'value': json['value'],
    };
}

export function ClansMessageboardErrorErrorOneOfToJSON(json: any): ClansMessageboardErrorErrorOneOf {
    return ClansMessageboardErrorErrorOneOfToJSONTyped(json, false);
}

export function ClansMessageboardErrorErrorOneOfToJSONTyped(value?: ClansMessageboardErrorErrorOneOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
        'field': value['field'],
        'value': value['value'],
    };
}

