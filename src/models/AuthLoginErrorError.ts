/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AccountListErrorErrorOneOf3 } from './AccountListErrorErrorOneOf3.js';
import {
    instanceOfAccountListErrorErrorOneOf3,
    AccountListErrorErrorOneOf3FromJSON,
    AccountListErrorErrorOneOf3FromJSONTyped,
    AccountListErrorErrorOneOf3ToJSON,
} from './AccountListErrorErrorOneOf3.js';
import type { AuthLoginErrorErrorOneOf } from './AuthLoginErrorErrorOneOf.js';
import {
    instanceOfAuthLoginErrorErrorOneOf,
    AuthLoginErrorErrorOneOfFromJSON,
    AuthLoginErrorErrorOneOfFromJSONTyped,
    AuthLoginErrorErrorOneOfToJSON,
} from './AuthLoginErrorErrorOneOf.js';
import type { AuthLoginErrorErrorOneOf1 } from './AuthLoginErrorErrorOneOf1.js';
import {
    instanceOfAuthLoginErrorErrorOneOf1,
    AuthLoginErrorErrorOneOf1FromJSON,
    AuthLoginErrorErrorOneOf1FromJSONTyped,
    AuthLoginErrorErrorOneOf1ToJSON,
} from './AuthLoginErrorErrorOneOf1.js';
import type { AuthLoginErrorErrorOneOf2 } from './AuthLoginErrorErrorOneOf2.js';
import {
    instanceOfAuthLoginErrorErrorOneOf2,
    AuthLoginErrorErrorOneOf2FromJSON,
    AuthLoginErrorErrorOneOf2FromJSONTyped,
    AuthLoginErrorErrorOneOf2ToJSON,
} from './AuthLoginErrorErrorOneOf2.js';

/**
 * @type AuthLoginErrorError
 * 
 * @export
 */
export type AuthLoginErrorError = AccountListErrorErrorOneOf3 | AuthLoginErrorErrorOneOf | AuthLoginErrorErrorOneOf1 | AuthLoginErrorErrorOneOf2;

export function AuthLoginErrorErrorFromJSON(json: any): AuthLoginErrorError {
    return AuthLoginErrorErrorFromJSONTyped(json, false);
}

export function AuthLoginErrorErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthLoginErrorError {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAccountListErrorErrorOneOf3(json)) {
        return AccountListErrorErrorOneOf3FromJSONTyped(json, true);
    }
    if (instanceOfAuthLoginErrorErrorOneOf(json)) {
        return AuthLoginErrorErrorOneOfFromJSONTyped(json, true);
    }
    if (instanceOfAuthLoginErrorErrorOneOf1(json)) {
        return AuthLoginErrorErrorOneOf1FromJSONTyped(json, true);
    }
    if (instanceOfAuthLoginErrorErrorOneOf2(json)) {
        return AuthLoginErrorErrorOneOf2FromJSONTyped(json, true);
    }

    return {} as any;
}

export function AuthLoginErrorErrorToJSON(json: any): any {
    return AuthLoginErrorErrorToJSONTyped(json, false);
}

export function AuthLoginErrorErrorToJSONTyped(value?: AuthLoginErrorError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAccountListErrorErrorOneOf3(value)) {
        return AccountListErrorErrorOneOf3ToJSON(value as AccountListErrorErrorOneOf3);
    }
    if (instanceOfAuthLoginErrorErrorOneOf(value)) {
        return AuthLoginErrorErrorOneOfToJSON(value as AuthLoginErrorErrorOneOf);
    }
    if (instanceOfAuthLoginErrorErrorOneOf1(value)) {
        return AuthLoginErrorErrorOneOf1ToJSON(value as AuthLoginErrorErrorOneOf1);
    }
    if (instanceOfAuthLoginErrorErrorOneOf2(value)) {
        return AuthLoginErrorErrorOneOf2ToJSON(value as AuthLoginErrorErrorOneOf2);
    }

    return {};
}

