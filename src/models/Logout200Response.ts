/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AuthLogoutError } from './AuthLogoutError.js';
import {
    instanceOfAuthLogoutError,
    AuthLogoutErrorFromJSON,
    AuthLogoutErrorFromJSONTyped,
    AuthLogoutErrorToJSON,
} from './AuthLogoutError.js';
import type { AuthLogoutOk } from './AuthLogoutOk.js';
import {
    instanceOfAuthLogoutOk,
    AuthLogoutOkFromJSON,
    AuthLogoutOkFromJSONTyped,
    AuthLogoutOkToJSON,
} from './AuthLogoutOk.js';

/**
 * @type Logout200Response
 * 
 * @export
 */
export type Logout200Response = AuthLogoutError | AuthLogoutOk;

export function Logout200ResponseFromJSON(json: any): Logout200Response {
    return Logout200ResponseFromJSONTyped(json, false);
}

export function Logout200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Logout200Response {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAuthLogoutError(json)) {
        return AuthLogoutErrorFromJSONTyped(json, true);
    }
    if (instanceOfAuthLogoutOk(json)) {
        return AuthLogoutOkFromJSONTyped(json, true);
    }

    return {} as any;
}

export function Logout200ResponseToJSON(json: any): any {
    return Logout200ResponseToJSONTyped(json, false);
}

export function Logout200ResponseToJSONTyped(value?: Logout200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAuthLogoutError(value)) {
        return AuthLogoutErrorToJSON(value as AuthLogoutError);
    }
    if (instanceOfAuthLogoutOk(value)) {
        return AuthLogoutOkToJSON(value as AuthLogoutOk);
    }

    return {};
}

