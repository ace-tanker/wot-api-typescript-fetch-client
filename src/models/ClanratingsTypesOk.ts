/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ClanratingsTypesMeta } from './ClanratingsTypesMeta.js';
import {
    ClanratingsTypesMetaFromJSON,
    ClanratingsTypesMetaFromJSONTyped,
    ClanratingsTypesMetaToJSON,
    ClanratingsTypesMetaToJSONTyped,
} from './ClanratingsTypesMeta.js';
import type { ClanratingsTypesValue } from './ClanratingsTypesValue.js';
import {
    ClanratingsTypesValueFromJSON,
    ClanratingsTypesValueFromJSONTyped,
    ClanratingsTypesValueToJSON,
    ClanratingsTypesValueToJSONTyped,
} from './ClanratingsTypesValue.js';

/**
 * 
 * @export
 * @interface ClanratingsTypesOk
 */
export interface ClanratingsTypesOk {
    /**
     * 
     * @type {string}
     * @memberof ClanratingsTypesOk
     */
    status: ClanratingsTypesOkStatusEnum;
    /**
     * 
     * @type {ClanratingsTypesMeta}
     * @memberof ClanratingsTypesOk
     */
    meta: ClanratingsTypesMeta;
    /**
     * 
     * @type {{ [key: string]: ClanratingsTypesValue; }}
     * @memberof ClanratingsTypesOk
     */
    data: { [key: string]: ClanratingsTypesValue; };
}


/**
 * @export
 */
export const ClanratingsTypesOkStatusEnum = {
    Ok: 'ok'
} as const;
export type ClanratingsTypesOkStatusEnum = typeof ClanratingsTypesOkStatusEnum[keyof typeof ClanratingsTypesOkStatusEnum];


/**
 * Check if a given object implements the ClanratingsTypesOk interface.
 */
export function instanceOfClanratingsTypesOk(value: object): value is ClanratingsTypesOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function ClanratingsTypesOkFromJSON(json: any): ClanratingsTypesOk {
    return ClanratingsTypesOkFromJSONTyped(json, false);
}

export function ClanratingsTypesOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClanratingsTypesOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': ClanratingsTypesMetaFromJSON(json['meta']),
        'data': (mapValues(json['data'], ClanratingsTypesValueFromJSON)),
    };
}

export function ClanratingsTypesOkToJSON(json: any): ClanratingsTypesOk {
    return ClanratingsTypesOkToJSONTyped(json, false);
}

export function ClanratingsTypesOkToJSONTyped(value?: ClanratingsTypesOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': ClanratingsTypesMetaToJSON(value['meta']),
        'data': (mapValues(value['data'], ClanratingsTypesValueToJSON)),
    };
}

