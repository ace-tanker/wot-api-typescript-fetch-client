/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaAchievementsMeta } from './EncyclopediaAchievementsMeta.js';
import {
    EncyclopediaAchievementsMetaFromJSON,
    EncyclopediaAchievementsMetaFromJSONTyped,
    EncyclopediaAchievementsMetaToJSON,
    EncyclopediaAchievementsMetaToJSONTyped,
} from './EncyclopediaAchievementsMeta.js';
import type { EncyclopediaAchievementsValue } from './EncyclopediaAchievementsValue.js';
import {
    EncyclopediaAchievementsValueFromJSON,
    EncyclopediaAchievementsValueFromJSONTyped,
    EncyclopediaAchievementsValueToJSON,
    EncyclopediaAchievementsValueToJSONTyped,
} from './EncyclopediaAchievementsValue.js';

/**
 * 
 * @export
 * @interface EncyclopediaAchievementsOk
 */
export interface EncyclopediaAchievementsOk {
    /**
     * 
     * @type {string}
     * @memberof EncyclopediaAchievementsOk
     */
    status: EncyclopediaAchievementsOkStatusEnum;
    /**
     * 
     * @type {EncyclopediaAchievementsMeta}
     * @memberof EncyclopediaAchievementsOk
     */
    meta: EncyclopediaAchievementsMeta;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaAchievementsValue; }}
     * @memberof EncyclopediaAchievementsOk
     */
    data: { [key: string]: EncyclopediaAchievementsValue; };
}


/**
 * @export
 */
export const EncyclopediaAchievementsOkStatusEnum = {
    Ok: 'ok'
} as const;
export type EncyclopediaAchievementsOkStatusEnum = typeof EncyclopediaAchievementsOkStatusEnum[keyof typeof EncyclopediaAchievementsOkStatusEnum];


/**
 * Check if a given object implements the EncyclopediaAchievementsOk interface.
 */
export function instanceOfEncyclopediaAchievementsOk(value: object): value is EncyclopediaAchievementsOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function EncyclopediaAchievementsOkFromJSON(json: any): EncyclopediaAchievementsOk {
    return EncyclopediaAchievementsOkFromJSONTyped(json, false);
}

export function EncyclopediaAchievementsOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaAchievementsOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': EncyclopediaAchievementsMetaFromJSON(json['meta']),
        'data': (mapValues(json['data'], EncyclopediaAchievementsValueFromJSON)),
    };
}

export function EncyclopediaAchievementsOkToJSON(json: any): EncyclopediaAchievementsOk {
    return EncyclopediaAchievementsOkToJSONTyped(json, false);
}

export function EncyclopediaAchievementsOkToJSONTyped(value?: EncyclopediaAchievementsOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': EncyclopediaAchievementsMetaToJSON(value['meta']),
        'data': (mapValues(value['data'], EncyclopediaAchievementsValueToJSON)),
    };
}

