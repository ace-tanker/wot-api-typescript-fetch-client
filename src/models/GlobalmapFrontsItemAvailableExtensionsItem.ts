/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GlobalmapFrontsItemAvailableExtensionsItem
 */
export interface GlobalmapFrontsItemAvailableExtensionsItem {
    /**
     * Consumable ID
     * @type {string}
     * @memberof GlobalmapFrontsItemAvailableExtensionsItem
     */
    extensionId: string;
    /**
     * Cost of modules
     * @type {number}
     * @memberof GlobalmapFrontsItemAvailableExtensionsItem
     */
    cost: number;
    /**
     * Modules upkeep cost
     * @type {number}
     * @memberof GlobalmapFrontsItemAvailableExtensionsItem
     */
    wage: number;
    /**
     * Localized consumable name
     * @type {string}
     * @memberof GlobalmapFrontsItemAvailableExtensionsItem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapFrontsItemAvailableExtensionsItem
     */
    descriptionTactical: string | null;
    /**
     * Localized description of strategic effect
     * @type {string}
     * @memberof GlobalmapFrontsItemAvailableExtensionsItem
     */
    descriptionStrategic: string;
}

/**
 * Check if a given object implements the GlobalmapFrontsItemAvailableExtensionsItem interface.
 */
export function instanceOfGlobalmapFrontsItemAvailableExtensionsItem(value: object): value is GlobalmapFrontsItemAvailableExtensionsItem {
    if (!('extensionId' in value) || value['extensionId'] === undefined) return false;
    if (!('cost' in value) || value['cost'] === undefined) return false;
    if (!('wage' in value) || value['wage'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('descriptionTactical' in value) || value['descriptionTactical'] === undefined) return false;
    if (!('descriptionStrategic' in value) || value['descriptionStrategic'] === undefined) return false;
    return true;
}

export function GlobalmapFrontsItemAvailableExtensionsItemFromJSON(json: any): GlobalmapFrontsItemAvailableExtensionsItem {
    return GlobalmapFrontsItemAvailableExtensionsItemFromJSONTyped(json, false);
}

export function GlobalmapFrontsItemAvailableExtensionsItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapFrontsItemAvailableExtensionsItem {
    if (json == null) {
        return json;
    }
    return {
        
        'extensionId': json['extension_id'],
        'cost': json['cost'],
        'wage': json['wage'],
        'name': json['name'],
        'descriptionTactical': json['description_tactical'],
        'descriptionStrategic': json['description_strategic'],
    };
}

export function GlobalmapFrontsItemAvailableExtensionsItemToJSON(json: any): GlobalmapFrontsItemAvailableExtensionsItem {
    return GlobalmapFrontsItemAvailableExtensionsItemToJSONTyped(json, false);
}

export function GlobalmapFrontsItemAvailableExtensionsItemToJSONTyped(value?: GlobalmapFrontsItemAvailableExtensionsItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'extension_id': value['extensionId'],
        'cost': value['cost'],
        'wage': value['wage'],
        'name': value['name'],
        'description_tactical': value['descriptionTactical'],
        'description_strategic': value['descriptionStrategic'],
    };
}

