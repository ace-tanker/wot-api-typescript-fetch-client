/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Information on clan emblems in games and on clan portal
 * @export
 * @interface ClansInfoDataValueEmblems
 */
export interface ClansInfoDataValueEmblems {
    /**
     * List of links to 24x24 px emblems
     * @type {{ [key: string]: string | undefined; }}
     * @memberof ClansInfoDataValueEmblems
     */
    x24: { [key: string]: string | undefined; };
    /**
     * List of links to 32x32 px emblems
     * @type {{ [key: string]: string | undefined; }}
     * @memberof ClansInfoDataValueEmblems
     */
    x32: { [key: string]: string | undefined; };
    /**
     * List of links to 64x64 px emblems
     * @type {{ [key: string]: string | undefined; }}
     * @memberof ClansInfoDataValueEmblems
     */
    x64: { [key: string]: string | undefined; };
    /**
     * List of links to 195x195 px emblems
     * @type {{ [key: string]: string | undefined; }}
     * @memberof ClansInfoDataValueEmblems
     */
    x195: { [key: string]: string | undefined; };
    /**
     * List of links to 256x256 px emblems
     * @type {{ [key: string]: string | undefined; }}
     * @memberof ClansInfoDataValueEmblems
     */
    x256: { [key: string]: string | undefined; };
}

/**
 * Check if a given object implements the ClansInfoDataValueEmblems interface.
 */
export function instanceOfClansInfoDataValueEmblems(value: object): value is ClansInfoDataValueEmblems {
    if (!('x24' in value) || value['x24'] === undefined) return false;
    if (!('x32' in value) || value['x32'] === undefined) return false;
    if (!('x64' in value) || value['x64'] === undefined) return false;
    if (!('x195' in value) || value['x195'] === undefined) return false;
    if (!('x256' in value) || value['x256'] === undefined) return false;
    return true;
}

export function ClansInfoDataValueEmblemsFromJSON(json: any): ClansInfoDataValueEmblems {
    return ClansInfoDataValueEmblemsFromJSONTyped(json, false);
}

export function ClansInfoDataValueEmblemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClansInfoDataValueEmblems {
    if (json == null) {
        return json;
    }
    return {
        
        'x24': json['x24'],
        'x32': json['x32'],
        'x64': json['x64'],
        'x195': json['x195'],
        'x256': json['x256'],
    };
}

export function ClansInfoDataValueEmblemsToJSON(json: any): ClansInfoDataValueEmblems {
    return ClansInfoDataValueEmblemsToJSONTyped(json, false);
}

export function ClansInfoDataValueEmblemsToJSONTyped(value?: ClansInfoDataValueEmblems | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'x24': value['x24'],
        'x32': value['x32'],
        'x64': value['x64'],
        'x195': value['x195'],
        'x256': value['x256'],
    };
}

export const ClansInfoDataValueEmblemsPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

