/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaProvisionsMeta } from './EncyclopediaProvisionsMeta.js';
import {
    EncyclopediaProvisionsMetaFromJSON,
    EncyclopediaProvisionsMetaFromJSONTyped,
    EncyclopediaProvisionsMetaToJSON,
    EncyclopediaProvisionsMetaToJSONTyped,
} from './EncyclopediaProvisionsMeta.js';
import type { EncyclopediaProvisionsValue } from './EncyclopediaProvisionsValue.js';
import {
    EncyclopediaProvisionsValueFromJSON,
    EncyclopediaProvisionsValueFromJSONTyped,
    EncyclopediaProvisionsValueToJSON,
    EncyclopediaProvisionsValueToJSONTyped,
} from './EncyclopediaProvisionsValue.js';

/**
 * 
 * @export
 * @interface EncyclopediaProvisionsOk
 */
export interface EncyclopediaProvisionsOk {
    /**
     * 
     * @type {string}
     * @memberof EncyclopediaProvisionsOk
     */
    status: EncyclopediaProvisionsOkStatusEnum;
    /**
     * 
     * @type {EncyclopediaProvisionsMeta}
     * @memberof EncyclopediaProvisionsOk
     */
    meta: EncyclopediaProvisionsMeta;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaProvisionsValue | null; }}
     * @memberof EncyclopediaProvisionsOk
     */
    data: { [key: string]: EncyclopediaProvisionsValue | null; };
}


/**
 * @export
 */
export const EncyclopediaProvisionsOkStatusEnum = {
    Ok: 'ok'
} as const;
export type EncyclopediaProvisionsOkStatusEnum = typeof EncyclopediaProvisionsOkStatusEnum[keyof typeof EncyclopediaProvisionsOkStatusEnum];


/**
 * Check if a given object implements the EncyclopediaProvisionsOk interface.
 */
export function instanceOfEncyclopediaProvisionsOk(value: object): value is EncyclopediaProvisionsOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function EncyclopediaProvisionsOkFromJSON(json: any): EncyclopediaProvisionsOk {
    return EncyclopediaProvisionsOkFromJSONTyped(json, false);
}

export function EncyclopediaProvisionsOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaProvisionsOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': EncyclopediaProvisionsMetaFromJSON(json['meta']),
        'data': (mapValues(json['data'], EncyclopediaProvisionsValueFromJSON)),
    };
}

export function EncyclopediaProvisionsOkToJSON(json: any): EncyclopediaProvisionsOk {
    return EncyclopediaProvisionsOkToJSONTyped(json, false);
}

export function EncyclopediaProvisionsOkToJSONTyped(value?: EncyclopediaProvisionsOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': EncyclopediaProvisionsMetaToJSON(value['meta']),
        'data': (mapValues(value['data'], EncyclopediaProvisionsValueToJSON)),
    };
}

