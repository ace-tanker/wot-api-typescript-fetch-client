/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValue } from './EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValue.js';
import {
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValueFromJSON,
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValueFromJSONTyped,
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValueToJSON,
    EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValueToJSONTyped,
} from './EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValue.js';

/**
 * Operation missions
 * @export
 * @interface EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
 */
export interface EncyclopediaPersonalmissionsValueOperationsValueMissionsValue {
    /**
     * Mission ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    missionId: number;
    /**
     * Mission branch ID
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    setId: number;
    /**
     * Mission name
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    name: string;
    /**
     * Mission description
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    hint: string | null;
    /**
     * Minimum vehicle Tier
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    minLevel: number;
    /**
     * Maximum vehicle Tier
     * @type {number}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    maxLevel: number;
    /**
     * Mission tags
     * @type {Array<string>}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    tags: Array<string>;
    /**
     * 
     * @type {{ [key: string]: EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValue; }}
     * @memberof EncyclopediaPersonalmissionsValueOperationsValueMissionsValue
     */
    rewards: { [key: string]: EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValue; };
}

/**
 * Check if a given object implements the EncyclopediaPersonalmissionsValueOperationsValueMissionsValue interface.
 */
export function instanceOfEncyclopediaPersonalmissionsValueOperationsValueMissionsValue(value: object): value is EncyclopediaPersonalmissionsValueOperationsValueMissionsValue {
    if (!('missionId' in value) || value['missionId'] === undefined) return false;
    if (!('setId' in value) || value['setId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('hint' in value) || value['hint'] === undefined) return false;
    if (!('minLevel' in value) || value['minLevel'] === undefined) return false;
    if (!('maxLevel' in value) || value['maxLevel'] === undefined) return false;
    if (!('tags' in value) || value['tags'] === undefined) return false;
    if (!('rewards' in value) || value['rewards'] === undefined) return false;
    return true;
}

export function EncyclopediaPersonalmissionsValueOperationsValueMissionsValueFromJSON(json: any): EncyclopediaPersonalmissionsValueOperationsValueMissionsValue {
    return EncyclopediaPersonalmissionsValueOperationsValueMissionsValueFromJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsValueOperationsValueMissionsValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaPersonalmissionsValueOperationsValueMissionsValue {
    if (json == null) {
        return json;
    }
    return {
        
        'missionId': json['mission_id'],
        'setId': json['set_id'],
        'name': json['name'],
        'description': json['description'],
        'hint': json['hint'],
        'minLevel': json['min_level'],
        'maxLevel': json['max_level'],
        'tags': json['tags'],
        'rewards': (mapValues(json['rewards'], EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValueFromJSON)),
    };
}

export function EncyclopediaPersonalmissionsValueOperationsValueMissionsValueToJSON(json: any): EncyclopediaPersonalmissionsValueOperationsValueMissionsValue {
    return EncyclopediaPersonalmissionsValueOperationsValueMissionsValueToJSONTyped(json, false);
}

export function EncyclopediaPersonalmissionsValueOperationsValueMissionsValueToJSONTyped(value?: EncyclopediaPersonalmissionsValueOperationsValueMissionsValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mission_id': value['missionId'],
        'set_id': value['setId'],
        'name': value['name'],
        'description': value['description'],
        'hint': value['hint'],
        'min_level': value['minLevel'],
        'max_level': value['maxLevel'],
        'tags': value['tags'],
        'rewards': (mapValues(value['rewards'], EncyclopediaPersonalmissionsValueOperationsValueMissionsValueRewardsValueToJSON)),
    };
}

