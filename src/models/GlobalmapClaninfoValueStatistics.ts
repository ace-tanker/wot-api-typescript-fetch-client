/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Clan statistics on the Global Map
 * @export
 * @interface GlobalmapClaninfoValueStatistics
 */
export interface GlobalmapClaninfoValueStatistics {
    /**
     * Battles fought
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    battles: number;
    /**
     * Victories
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    wins: number;
    /**
     * Defeats
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    losses: number;
    /**
     * Battles fought in Absolute division
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    battles10Level: number;
    /**
     * Battles fought in Champion division
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    battles8Level: number;
    /**
     * Battles fought in Medium division
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    battles6Level: number;
    /**
     * Victories in Absolute division
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    wins10Level: number;
    /**
     * Victories in Champion division
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    wins8Level: number;
    /**
     * Victories in Medium division
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    wins6Level: number;
    /**
     * Total number by provinces captured by clan
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    captures: number;
    /**
     * Current number of captured provinces
     * @type {number}
     * @memberof GlobalmapClaninfoValueStatistics
     */
    provincesCount: number;
}

/**
 * Check if a given object implements the GlobalmapClaninfoValueStatistics interface.
 */
export function instanceOfGlobalmapClaninfoValueStatistics(value: object): value is GlobalmapClaninfoValueStatistics {
    if (!('battles' in value) || value['battles'] === undefined) return false;
    if (!('wins' in value) || value['wins'] === undefined) return false;
    if (!('losses' in value) || value['losses'] === undefined) return false;
    if (!('battles10Level' in value) || value['battles10Level'] === undefined) return false;
    if (!('battles8Level' in value) || value['battles8Level'] === undefined) return false;
    if (!('battles6Level' in value) || value['battles6Level'] === undefined) return false;
    if (!('wins10Level' in value) || value['wins10Level'] === undefined) return false;
    if (!('wins8Level' in value) || value['wins8Level'] === undefined) return false;
    if (!('wins6Level' in value) || value['wins6Level'] === undefined) return false;
    if (!('captures' in value) || value['captures'] === undefined) return false;
    if (!('provincesCount' in value) || value['provincesCount'] === undefined) return false;
    return true;
}

export function GlobalmapClaninfoValueStatisticsFromJSON(json: any): GlobalmapClaninfoValueStatistics {
    return GlobalmapClaninfoValueStatisticsFromJSONTyped(json, false);
}

export function GlobalmapClaninfoValueStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapClaninfoValueStatistics {
    if (json == null) {
        return json;
    }
    return {
        
        'battles': json['battles'],
        'wins': json['wins'],
        'losses': json['losses'],
        'battles10Level': json['battles_10_level'],
        'battles8Level': json['battles_8_level'],
        'battles6Level': json['battles_6_level'],
        'wins10Level': json['wins_10_level'],
        'wins8Level': json['wins_8_level'],
        'wins6Level': json['wins_6_level'],
        'captures': json['captures'],
        'provincesCount': json['provinces_count'],
    };
}

export function GlobalmapClaninfoValueStatisticsToJSON(json: any): GlobalmapClaninfoValueStatistics {
    return GlobalmapClaninfoValueStatisticsToJSONTyped(json, false);
}

export function GlobalmapClaninfoValueStatisticsToJSONTyped(value?: GlobalmapClaninfoValueStatistics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'battles': value['battles'],
        'wins': value['wins'],
        'losses': value['losses'],
        'battles_10_level': value['battles10Level'],
        'battles_8_level': value['battles8Level'],
        'battles_6_level': value['battles6Level'],
        'wins_10_level': value['wins10Level'],
        'wins_8_level': value['wins8Level'],
        'wins_6_level': value['wins6Level'],
        'captures': value['captures'],
        'provinces_count': value['provincesCount'],
    };
}

