/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Vehicle characteristics in Rapid mode (for wheeled vehicles)
 * @export
 * @interface EncyclopediaVehicleprofileDataValueRapid
 */
export interface EncyclopediaVehicleprofileDataValueRapid {
    /**
     * Top speed (km/h)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileDataValueRapid
     */
    speed_forward: number;
    /**
     * Top reverse speed (km/h)
     * @type {number}
     * @memberof EncyclopediaVehicleprofileDataValueRapid
     */
    speed_backward: number;
    /**
     * Maximum wheel turning angle
     * @type {number}
     * @memberof EncyclopediaVehicleprofileDataValueRapid
     */
    suspension_steering_lock_angle: number;
    /**
     * Time required to switch to Cruise mode
     * @type {number}
     * @memberof EncyclopediaVehicleprofileDataValueRapid
     */
    switch_off_time: number;
    /**
     * Time required to switch to Rapid mode
     * @type {number}
     * @memberof EncyclopediaVehicleprofileDataValueRapid
     */
    switch_on_time: number;
}

/**
 * Check if a given object implements the EncyclopediaVehicleprofileDataValueRapid interface.
 */
export function instanceOfEncyclopediaVehicleprofileDataValueRapid(value: object): value is EncyclopediaVehicleprofileDataValueRapid {
    if (!('speed_forward' in value) || value['speed_forward'] === undefined) return false;
    if (!('speed_backward' in value) || value['speed_backward'] === undefined) return false;
    if (!('suspension_steering_lock_angle' in value) || value['suspension_steering_lock_angle'] === undefined) return false;
    if (!('switch_off_time' in value) || value['switch_off_time'] === undefined) return false;
    if (!('switch_on_time' in value) || value['switch_on_time'] === undefined) return false;
    return true;
}

export function EncyclopediaVehicleprofileDataValueRapidFromJSON(json: any): EncyclopediaVehicleprofileDataValueRapid {
    return EncyclopediaVehicleprofileDataValueRapidFromJSONTyped(json, false);
}

export function EncyclopediaVehicleprofileDataValueRapidFromJSONTyped(json: any, ignoreDiscriminator: boolean): EncyclopediaVehicleprofileDataValueRapid {
    if (json == null) {
        return json;
    }
    return {
        
        'speed_forward': json['speed_forward'],
        'speed_backward': json['speed_backward'],
        'suspension_steering_lock_angle': json['suspension_steering_lock_angle'],
        'switch_off_time': json['switch_off_time'],
        'switch_on_time': json['switch_on_time'],
    };
}

export function EncyclopediaVehicleprofileDataValueRapidToJSON(json: any): EncyclopediaVehicleprofileDataValueRapid {
    return EncyclopediaVehicleprofileDataValueRapidToJSONTyped(json, false);
}

export function EncyclopediaVehicleprofileDataValueRapidToJSONTyped(value?: EncyclopediaVehicleprofileDataValueRapid | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'speed_forward': value['speed_forward'],
        'speed_backward': value['speed_backward'],
        'suspension_steering_lock_angle': value['suspension_steering_lock_angle'],
        'switch_off_time': value['switch_off_time'],
        'switch_on_time': value['switch_on_time'],
    };
}

export const EncyclopediaVehicleprofileDataValueRapidPropertyValidationAttributesMap: {
    [property: string]: {
        maxLength?: number,
        minLength?: number,
        pattern?: string,
        maximum?: number,
        exclusiveMaximum?: boolean,
        minimum?: number,
        exclusiveMinimum?: boolean,
        multipleOf?: number,
        maxItems?: number,
        minItems?: number,
        uniqueItems?: boolean
    }
} = {
}

