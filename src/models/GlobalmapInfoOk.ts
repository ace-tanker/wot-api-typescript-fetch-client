/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { GlobalmapInfoMeta } from './GlobalmapInfoMeta.js';
import {
    GlobalmapInfoMetaFromJSON,
    GlobalmapInfoMetaFromJSONTyped,
    GlobalmapInfoMetaToJSON,
    GlobalmapInfoMetaToJSONTyped,
} from './GlobalmapInfoMeta.js';
import type { GlobalmapInfoData } from './GlobalmapInfoData.js';
import {
    GlobalmapInfoDataFromJSON,
    GlobalmapInfoDataFromJSONTyped,
    GlobalmapInfoDataToJSON,
    GlobalmapInfoDataToJSONTyped,
} from './GlobalmapInfoData.js';

/**
 * 
 * @export
 * @interface GlobalmapInfoOk
 */
export interface GlobalmapInfoOk {
    /**
     * 
     * @type {string}
     * @memberof GlobalmapInfoOk
     */
    status: GlobalmapInfoOkStatusEnum;
    /**
     * 
     * @type {GlobalmapInfoMeta}
     * @memberof GlobalmapInfoOk
     */
    meta: GlobalmapInfoMeta;
    /**
     * 
     * @type {GlobalmapInfoData}
     * @memberof GlobalmapInfoOk
     */
    data: GlobalmapInfoData;
}


/**
 * @export
 */
export const GlobalmapInfoOkStatusEnum = {
    Ok: 'ok'
} as const;
export type GlobalmapInfoOkStatusEnum = typeof GlobalmapInfoOkStatusEnum[keyof typeof GlobalmapInfoOkStatusEnum];


/**
 * Check if a given object implements the GlobalmapInfoOk interface.
 */
export function instanceOfGlobalmapInfoOk(value: object): value is GlobalmapInfoOk {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function GlobalmapInfoOkFromJSON(json: any): GlobalmapInfoOk {
    return GlobalmapInfoOkFromJSONTyped(json, false);
}

export function GlobalmapInfoOkFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapInfoOk {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'meta': GlobalmapInfoMetaFromJSON(json['meta']),
        'data': GlobalmapInfoDataFromJSON(json['data']),
    };
}

export function GlobalmapInfoOkToJSON(json: any): GlobalmapInfoOk {
    return GlobalmapInfoOkToJSONTyped(json, false);
}

export function GlobalmapInfoOkToJSONTyped(value?: GlobalmapInfoOk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'meta': GlobalmapInfoMetaToJSON(value['meta']),
        'data': GlobalmapInfoDataToJSON(value['data']),
    };
}

