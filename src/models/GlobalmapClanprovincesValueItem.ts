/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GlobalmapClanprovincesValueItem
 */
export interface GlobalmapClanprovincesValueItem {
    /**
     * Map ID
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    arenaId: string;
    /**
     * Localized map name
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    arenaName: string;
    /**
     * Daily income
     * @type {number}
     * @memberof GlobalmapClanprovincesValueItem
     */
    dailyRevenue: number;
    /**
     * Front ID
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    frontId: string;
    /**
     * Front name
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    frontName: string;
    /**
     * Income level from 0 to 11. 0 value means that income was not raised.
     * @type {number}
     * @memberof GlobalmapClanprovincesValueItem
     */
    revenueLevel: number;
    /**
     * Prime Time in UTC
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    primeTime: string;
    /**
     * Province ID
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    provinceId: string;
    /**
     * Province name
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    provinceName: string;
    /**
     * Clan ID
     * @type {number}
     * @memberof GlobalmapClanprovincesValueItem
     */
    clanId: number;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    landingType: string | null;
    /**
     * Province owned (number of turns)
     * @type {number}
     * @memberof GlobalmapClanprovincesValueItem
     */
    turnsOwned: number;
    /**
     * Maximum vehicle Tier in a Front
     * @type {number}
     * @memberof GlobalmapClanprovincesValueItem
     */
    maxVehicleLevel: number;
    /**
     * 
     * @type {any}
     * @memberof GlobalmapClanprovincesValueItem
     */
    _private: any | null;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapClanprovincesValueItem
     */
    pillageEndAt: string | null;
}

/**
 * Check if a given object implements the GlobalmapClanprovincesValueItem interface.
 */
export function instanceOfGlobalmapClanprovincesValueItem(value: object): value is GlobalmapClanprovincesValueItem {
    if (!('arenaId' in value) || value['arenaId'] === undefined) return false;
    if (!('arenaName' in value) || value['arenaName'] === undefined) return false;
    if (!('dailyRevenue' in value) || value['dailyRevenue'] === undefined) return false;
    if (!('frontId' in value) || value['frontId'] === undefined) return false;
    if (!('frontName' in value) || value['frontName'] === undefined) return false;
    if (!('revenueLevel' in value) || value['revenueLevel'] === undefined) return false;
    if (!('primeTime' in value) || value['primeTime'] === undefined) return false;
    if (!('provinceId' in value) || value['provinceId'] === undefined) return false;
    if (!('provinceName' in value) || value['provinceName'] === undefined) return false;
    if (!('clanId' in value) || value['clanId'] === undefined) return false;
    if (!('landingType' in value) || value['landingType'] === undefined) return false;
    if (!('turnsOwned' in value) || value['turnsOwned'] === undefined) return false;
    if (!('maxVehicleLevel' in value) || value['maxVehicleLevel'] === undefined) return false;
    if (!('_private' in value) || value['_private'] === undefined) return false;
    if (!('pillageEndAt' in value) || value['pillageEndAt'] === undefined) return false;
    return true;
}

export function GlobalmapClanprovincesValueItemFromJSON(json: any): GlobalmapClanprovincesValueItem {
    return GlobalmapClanprovincesValueItemFromJSONTyped(json, false);
}

export function GlobalmapClanprovincesValueItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapClanprovincesValueItem {
    if (json == null) {
        return json;
    }
    return {
        
        'arenaId': json['arena_id'],
        'arenaName': json['arena_name'],
        'dailyRevenue': json['daily_revenue'],
        'frontId': json['front_id'],
        'frontName': json['front_name'],
        'revenueLevel': json['revenue_level'],
        'primeTime': json['prime_time'],
        'provinceId': json['province_id'],
        'provinceName': json['province_name'],
        'clanId': json['clan_id'],
        'landingType': json['landing_type'],
        'turnsOwned': json['turns_owned'],
        'maxVehicleLevel': json['max_vehicle_level'],
        '_private': json['private'],
        'pillageEndAt': json['pillage_end_at'],
    };
}

export function GlobalmapClanprovincesValueItemToJSON(json: any): GlobalmapClanprovincesValueItem {
    return GlobalmapClanprovincesValueItemToJSONTyped(json, false);
}

export function GlobalmapClanprovincesValueItemToJSONTyped(value?: GlobalmapClanprovincesValueItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'arena_id': value['arenaId'],
        'arena_name': value['arenaName'],
        'daily_revenue': value['dailyRevenue'],
        'front_id': value['frontId'],
        'front_name': value['frontName'],
        'revenue_level': value['revenueLevel'],
        'prime_time': value['primeTime'],
        'province_id': value['provinceId'],
        'province_name': value['provinceName'],
        'clan_id': value['clanId'],
        'landing_type': value['landingType'],
        'turns_owned': value['turnsOwned'],
        'max_vehicle_level': value['maxVehicleLevel'],
        'private': value['_private'],
        'pillage_end_at': value['pillageEndAt'],
    };
}

