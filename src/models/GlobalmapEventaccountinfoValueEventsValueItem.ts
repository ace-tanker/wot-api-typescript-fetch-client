/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface GlobalmapEventaccountinfoValueEventsValueItem
 */
export interface GlobalmapEventaccountinfoValueEventsValueItem {
    /**
     * Account ID
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    accountId: number;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    awardLevel: string | null;
    /**
     * Battles fought for current clan
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    battles: number;
    /**
     * Battles to fight in a current clan to get clan award for the season
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    battlesToAward: number;
    /**
     * Clan ID
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    clanId: number;
    /**
     * Clan rating
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    clanRank: number;
    /**
     * Event ID
     * @type {string}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    eventId: string;
    /**
     * Total Fame Points
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    famePoints: number;
    /**
     * Change of Fame Points since last turn calculation
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    famePointsSinceTurn: number;
    /**
     * 
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    famePointsToImproveAward: number | null;
    /**
     * Front ID
     * @type {string}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    frontId: string;
    /**
     * 
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    rank: number | null;
    /**
     * 
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    rankDelta: number | null;
    /**
     * 
     * @type {number}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    updatedAt: number | null;
    /**
     * 
     * @type {string}
     * @memberof GlobalmapEventaccountinfoValueEventsValueItem
     */
    url: string | null;
}

/**
 * Check if a given object implements the GlobalmapEventaccountinfoValueEventsValueItem interface.
 */
export function instanceOfGlobalmapEventaccountinfoValueEventsValueItem(value: object): value is GlobalmapEventaccountinfoValueEventsValueItem {
    if (!('accountId' in value) || value['accountId'] === undefined) return false;
    if (!('awardLevel' in value) || value['awardLevel'] === undefined) return false;
    if (!('battles' in value) || value['battles'] === undefined) return false;
    if (!('battlesToAward' in value) || value['battlesToAward'] === undefined) return false;
    if (!('clanId' in value) || value['clanId'] === undefined) return false;
    if (!('clanRank' in value) || value['clanRank'] === undefined) return false;
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('famePoints' in value) || value['famePoints'] === undefined) return false;
    if (!('famePointsSinceTurn' in value) || value['famePointsSinceTurn'] === undefined) return false;
    if (!('famePointsToImproveAward' in value) || value['famePointsToImproveAward'] === undefined) return false;
    if (!('frontId' in value) || value['frontId'] === undefined) return false;
    if (!('rank' in value) || value['rank'] === undefined) return false;
    if (!('rankDelta' in value) || value['rankDelta'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function GlobalmapEventaccountinfoValueEventsValueItemFromJSON(json: any): GlobalmapEventaccountinfoValueEventsValueItem {
    return GlobalmapEventaccountinfoValueEventsValueItemFromJSONTyped(json, false);
}

export function GlobalmapEventaccountinfoValueEventsValueItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlobalmapEventaccountinfoValueEventsValueItem {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['account_id'],
        'awardLevel': json['award_level'],
        'battles': json['battles'],
        'battlesToAward': json['battles_to_award'],
        'clanId': json['clan_id'],
        'clanRank': json['clan_rank'],
        'eventId': json['event_id'],
        'famePoints': json['fame_points'],
        'famePointsSinceTurn': json['fame_points_since_turn'],
        'famePointsToImproveAward': json['fame_points_to_improve_award'],
        'frontId': json['front_id'],
        'rank': json['rank'],
        'rankDelta': json['rank_delta'],
        'updatedAt': json['updated_at'],
        'url': json['url'],
    };
}

export function GlobalmapEventaccountinfoValueEventsValueItemToJSON(json: any): GlobalmapEventaccountinfoValueEventsValueItem {
    return GlobalmapEventaccountinfoValueEventsValueItemToJSONTyped(json, false);
}

export function GlobalmapEventaccountinfoValueEventsValueItemToJSONTyped(value?: GlobalmapEventaccountinfoValueEventsValueItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'account_id': value['accountId'],
        'award_level': value['awardLevel'],
        'battles': value['battles'],
        'battles_to_award': value['battlesToAward'],
        'clan_id': value['clanId'],
        'clan_rank': value['clanRank'],
        'event_id': value['eventId'],
        'fame_points': value['famePoints'],
        'fame_points_since_turn': value['famePointsSinceTurn'],
        'fame_points_to_improve_award': value['famePointsToImproveAward'],
        'front_id': value['frontId'],
        'rank': value['rank'],
        'rank_delta': value['rankDelta'],
        'updated_at': value['updatedAt'],
        'url': value['url'],
    };
}

