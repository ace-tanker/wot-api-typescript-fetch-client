/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * Vehicle Rental.
 * @export
 * @interface AccountInfoValuePrivateRentedValue
 */
export interface AccountInfoValuePrivateRentedValue {
    /**
     * Rented vehicle ID
     * @type {number}
     * @memberof AccountInfoValuePrivateRentedValue
     */
    tankId: number;
    /**
     * Rental compensation in credits
     * @type {number}
     * @memberof AccountInfoValuePrivateRentedValue
     */
    compensationCredits: number;
    /**
     * Rental compensation in gold
     * @type {number}
     * @memberof AccountInfoValuePrivateRentedValue
     */
    compensationGold: number;
    /**
     * Vehicle Rental expiration time
     * @type {number}
     * @memberof AccountInfoValuePrivateRentedValue
     */
    expirationTime: number;
}

/**
 * Check if a given object implements the AccountInfoValuePrivateRentedValue interface.
 */
export function instanceOfAccountInfoValuePrivateRentedValue(value: object): value is AccountInfoValuePrivateRentedValue {
    if (!('tankId' in value) || value['tankId'] === undefined) return false;
    if (!('compensationCredits' in value) || value['compensationCredits'] === undefined) return false;
    if (!('compensationGold' in value) || value['compensationGold'] === undefined) return false;
    if (!('expirationTime' in value) || value['expirationTime'] === undefined) return false;
    return true;
}

export function AccountInfoValuePrivateRentedValueFromJSON(json: any): AccountInfoValuePrivateRentedValue {
    return AccountInfoValuePrivateRentedValueFromJSONTyped(json, false);
}

export function AccountInfoValuePrivateRentedValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountInfoValuePrivateRentedValue {
    if (json == null) {
        return json;
    }
    return {
        
        'tankId': json['tank_id'],
        'compensationCredits': json['compensation_credits'],
        'compensationGold': json['compensation_gold'],
        'expirationTime': json['expiration_time'],
    };
}

export function AccountInfoValuePrivateRentedValueToJSON(json: any): AccountInfoValuePrivateRentedValue {
    return AccountInfoValuePrivateRentedValueToJSONTyped(json, false);
}

export function AccountInfoValuePrivateRentedValueToJSONTyped(value?: AccountInfoValuePrivateRentedValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tank_id': value['tankId'],
        'compensation_credits': value['compensationCredits'],
        'compensation_gold': value['compensationGold'],
        'expiration_time': value['expirationTime'],
    };
}

