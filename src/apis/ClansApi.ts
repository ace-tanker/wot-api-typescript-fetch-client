/* tslint:disable */
/* eslint-disable */
/**
 * World of Tanks
 * OpenAPI specification for the Wargaming.net Public API. The official Wargaming.net Public API documentation can be found at the Wargaming [Developer\'s room](https://developers.wargaming.net/).
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@ace-tanker.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  ClansAccountinfoResponse,
  ClansGlossaryResponse,
  ClansInfoResponse,
  ClansListResponse,
  ClansMemberhistoryResponse,
  ClansMessageboardResponse,
} from '../models/index.js';
import {
    ClansAccountinfoResponseFromJSON,
    ClansAccountinfoResponseToJSON,
    ClansGlossaryResponseFromJSON,
    ClansGlossaryResponseToJSON,
    ClansInfoResponseFromJSON,
    ClansInfoResponseToJSON,
    ClansListResponseFromJSON,
    ClansListResponseToJSON,
    ClansMemberhistoryResponseFromJSON,
    ClansMemberhistoryResponseToJSON,
    ClansMessageboardResponseFromJSON,
    ClansMessageboardResponseToJSON,
} from '../models/index.js';

export interface GetClansAccountinfoRequest {
    account_id: Array<number>;
    fields?: Array<string>;
    language?: GetClansAccountinfoLanguageEnum;
}

export interface GetClansGlossaryRequest {
    fields?: Array<string>;
    language?: GetClansGlossaryLanguageEnum;
}

export interface GetClansInfoRequest {
    clan_id: Array<number>;
    access_token?: string;
    extra?: Array<GetClansInfoExtraEnum>;
    fields?: Array<string>;
    language?: GetClansInfoLanguageEnum;
    members_key?: GetClansInfoMembersKeyEnum;
}

export interface GetClansListRequest {
    fields?: Array<string>;
    language?: GetClansListLanguageEnum;
    limit?: number;
    page_no?: number;
    search?: string;
}

export interface GetClansMemberhistoryRequest {
    account_id: number;
    fields?: Array<string>;
    language?: GetClansMemberhistoryLanguageEnum;
}

export interface GetClansMessageboardRequest {
    access_token: string;
    fields?: Array<string>;
}

/**
 * ClansApi - interface
 * 
 * @export
 * @interface ClansApiInterface
 */
export interface ClansApiInterface {
    /**
     * Method returns detailed clan member information and brief clan details.
     * @summary Clan member details
     * @param {Array<number>} account_id Account ID.
     * @param {Array<string>} [fields] Response field. Embedded fields are separated with dots. To exclude a field, use “-” in front of its name. In case the parameter is not defined, the method returns all fields.
     * @param {'en' | 'ru' | 'pl' | 'de' | 'fr' | 'es' | 'zh-cn' | 'zh-tw' | 'tr' | 'cs' | 'th' | 'vi' | 'ko'} [language] Localization language.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClansApiInterface
     */
    getClansAccountinfoRaw(requestParameters: GetClansAccountinfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansAccountinfoResponse>>;

    /**
     * Method returns detailed clan member information and brief clan details.
     * Clan member details
     */
    getClansAccountinfo(requestParameters: GetClansAccountinfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansAccountinfoResponse>;

    /**
     * Method returns information on clan entities.
     * @summary Clan glossary
     * @param {Array<string>} [fields] Response field. Embedded fields are separated with dots. To exclude a field, use “-” in front of its name. In case the parameter is not defined, the method returns all fields.
     * @param {'en' | 'ru' | 'pl' | 'de' | 'fr' | 'es' | 'zh-cn' | 'zh-tw' | 'tr' | 'cs' | 'th' | 'vi' | 'ko'} [language] Localization language.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClansApiInterface
     */
    getClansGlossaryRaw(requestParameters: GetClansGlossaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansGlossaryResponse>>;

    /**
     * Method returns information on clan entities.
     * Clan glossary
     */
    getClansGlossary(requestParameters: GetClansGlossaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansGlossaryResponse>;

    /**
     * Method returns detailed clan information.
     * @summary Clan details
     * @param {Array<number>} clan_id Clan ID.
     * @param {string} [access_token] [Access token](https://developers.wargaming.net/documentation/guide/principles/#access_token) for the private data of a user\&#39;s account; can be received via the authorization method; valid within a stated time period
     * @param {Array<'private.online_members'>} [extra] Extra fields that will be added to the response.
     * @param {Array<string>} [fields] Response field. Embedded fields are separated with dots. To exclude a field, use “-” in front of its name. In case the parameter is not defined, the method returns all fields.
     * @param {'en' | 'ru' | 'pl' | 'de' | 'fr' | 'es' | 'zh-cn' | 'zh-tw' | 'tr' | 'cs' | 'th' | 'vi' | 'ko'} [language] Localization language.
     * @param {'id'} [members_key] This parameter changes members field type.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClansApiInterface
     */
    getClansInfoRaw(requestParameters: GetClansInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansInfoResponse>>;

    /**
     * Method returns detailed clan information.
     * Clan details
     */
    getClansInfo(requestParameters: GetClansInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansInfoResponse>;

    /**
     * Method searches through clans and sorts them in a specified order.
     * @summary Clans
     * @param {Array<string>} [fields] Response field. Embedded fields are separated with dots. To exclude a field, use “-” in front of its name. In case the parameter is not defined, the method returns all fields.
     * @param {'en' | 'ru' | 'pl' | 'de' | 'fr' | 'es' | 'zh-cn' | 'zh-tw' | 'tr' | 'cs' | 'th' | 'vi' | 'ko'} [language] Localization language.
     * @param {number} [limit] Number of returned entries.
     * @param {number} [page_no] Page number.
     * @param {string} [search] Part of name or tag for clan search. Minimum 2 characters
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClansApiInterface
     */
    getClansListRaw(requestParameters: GetClansListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansListResponse>>;

    /**
     * Method searches through clans and sorts them in a specified order.
     * Clans
     */
    getClansList(requestParameters: GetClansListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansListResponse>;

    /**
     * Method returns information about player\'s clan history. Data on 10 last clan memberships are presented in the response.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/memberhistory/\">Player\'s clan history (World of Tanks)</a>
     * @summary Player\'s clan history
     * @param {number} account_id Account ID.
     * @param {Array<string>} [fields] Response field. Embedded fields are separated with dots. To exclude a field, use “-” in front of its name. In case the parameter is not defined, the method returns all fields.
     * @param {'en' | 'ru' | 'pl' | 'de' | 'fr' | 'es' | 'zh-cn' | 'zh-tw' | 'tr' | 'cs' | 'th' | 'vi' | 'ko'} [language] Localization language.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClansApiInterface
     */
    getClansMemberhistoryRaw(requestParameters: GetClansMemberhistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansMemberhistoryResponse>>;

    /**
     * Method returns information about player\'s clan history. Data on 10 last clan memberships are presented in the response.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/memberhistory/\">Player\'s clan history (World of Tanks)</a>
     * Player\'s clan history
     */
    getClansMemberhistory(requestParameters: GetClansMemberhistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansMemberhistoryResponse>;

    /**
     * Method returns messages of clan message board.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/messageboard/\">Message board (World of Tanks)</a>
     * @summary Message board
     * @param {string} access_token [Access token](https://developers.wargaming.net/documentation/guide/principles/#access_token) for the private data of a user\&#39;s account; can be received via the authorization method; valid within a stated time period
     * @param {Array<string>} [fields] Response field. Embedded fields are separated with dots. To exclude a field, use “-” in front of its name. In case the parameter is not defined, the method returns all fields.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ClansApiInterface
     */
    getClansMessageboardRaw(requestParameters: GetClansMessageboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansMessageboardResponse>>;

    /**
     * Method returns messages of clan message board.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/messageboard/\">Message board (World of Tanks)</a>
     * Message board
     */
    getClansMessageboard(requestParameters: GetClansMessageboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansMessageboardResponse>;

}

/**
 * 
 */
export class ClansApi extends runtime.BaseAPI implements ClansApiInterface {

    /**
     * Method returns detailed clan member information and brief clan details.
     * Clan member details
     */
    async getClansAccountinfoRaw(requestParameters: GetClansAccountinfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansAccountinfoResponse>> {
        if (requestParameters['account_id'] == null) {
            throw new runtime.RequiredError(
                'account_id',
                'Required parameter "account_id" was null or undefined when calling getClansAccountinfo().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['account_id'] != null) {
            queryParameters['account_id'] = requestParameters['account_id']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['fields'] != null) {
            queryParameters['fields'] = requestParameters['fields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["application_id"] = await this.configuration.apiKey("application_id"); // application_id authentication
        }


        let urlPath = `/clans/accountinfo/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClansAccountinfoResponseFromJSON(jsonValue));
    }

    /**
     * Method returns detailed clan member information and brief clan details.
     * Clan member details
     */
    async getClansAccountinfo(requestParameters: GetClansAccountinfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansAccountinfoResponse> {
        const response = await this.getClansAccountinfoRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Method returns information on clan entities.
     * Clan glossary
     */
    async getClansGlossaryRaw(requestParameters: GetClansGlossaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansGlossaryResponse>> {
        const queryParameters: any = {};

        if (requestParameters['fields'] != null) {
            queryParameters['fields'] = requestParameters['fields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["application_id"] = await this.configuration.apiKey("application_id"); // application_id authentication
        }


        let urlPath = `/clans/glossary/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClansGlossaryResponseFromJSON(jsonValue));
    }

    /**
     * Method returns information on clan entities.
     * Clan glossary
     */
    async getClansGlossary(requestParameters: GetClansGlossaryRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansGlossaryResponse> {
        const response = await this.getClansGlossaryRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Method returns detailed clan information.
     * Clan details
     */
    async getClansInfoRaw(requestParameters: GetClansInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansInfoResponse>> {
        if (requestParameters['clan_id'] == null) {
            throw new runtime.RequiredError(
                'clan_id',
                'Required parameter "clan_id" was null or undefined when calling getClansInfo().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['clan_id'] != null) {
            queryParameters['clan_id'] = requestParameters['clan_id']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['access_token'] != null) {
            queryParameters['access_token'] = requestParameters['access_token'];
        }

        if (requestParameters['extra'] != null) {
            queryParameters['extra'] = requestParameters['extra']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['fields'] != null) {
            queryParameters['fields'] = requestParameters['fields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        if (requestParameters['members_key'] != null) {
            queryParameters['members_key'] = requestParameters['members_key'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["application_id"] = await this.configuration.apiKey("application_id"); // application_id authentication
        }


        let urlPath = `/clans/info/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClansInfoResponseFromJSON(jsonValue));
    }

    /**
     * Method returns detailed clan information.
     * Clan details
     */
    async getClansInfo(requestParameters: GetClansInfoRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansInfoResponse> {
        const response = await this.getClansInfoRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Method searches through clans and sorts them in a specified order.
     * Clans
     */
    async getClansListRaw(requestParameters: GetClansListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansListResponse>> {
        const queryParameters: any = {};

        if (requestParameters['fields'] != null) {
            queryParameters['fields'] = requestParameters['fields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['page_no'] != null) {
            queryParameters['page_no'] = requestParameters['page_no'];
        }

        if (requestParameters['search'] != null) {
            queryParameters['search'] = requestParameters['search'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["application_id"] = await this.configuration.apiKey("application_id"); // application_id authentication
        }


        let urlPath = `/clans/list/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClansListResponseFromJSON(jsonValue));
    }

    /**
     * Method searches through clans and sorts them in a specified order.
     * Clans
     */
    async getClansList(requestParameters: GetClansListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansListResponse> {
        const response = await this.getClansListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Method returns information about player\'s clan history. Data on 10 last clan memberships are presented in the response.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/memberhistory/\">Player\'s clan history (World of Tanks)</a>
     * Player\'s clan history
     */
    async getClansMemberhistoryRaw(requestParameters: GetClansMemberhistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansMemberhistoryResponse>> {
        if (requestParameters['account_id'] == null) {
            throw new runtime.RequiredError(
                'account_id',
                'Required parameter "account_id" was null or undefined when calling getClansMemberhistory().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['account_id'] != null) {
            queryParameters['account_id'] = requestParameters['account_id'];
        }

        if (requestParameters['fields'] != null) {
            queryParameters['fields'] = requestParameters['fields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        if (requestParameters['language'] != null) {
            queryParameters['language'] = requestParameters['language'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["application_id"] = await this.configuration.apiKey("application_id"); // application_id authentication
        }


        let urlPath = `/clans/memberhistory/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClansMemberhistoryResponseFromJSON(jsonValue));
    }

    /**
     * Method returns information about player\'s clan history. Data on 10 last clan memberships are presented in the response.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/memberhistory/\">Player\'s clan history (World of Tanks)</a>
     * Player\'s clan history
     */
    async getClansMemberhistory(requestParameters: GetClansMemberhistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansMemberhistoryResponse> {
        const response = await this.getClansMemberhistoryRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Method returns messages of clan message board.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/messageboard/\">Message board (World of Tanks)</a>
     * Message board
     */
    async getClansMessageboardRaw(requestParameters: GetClansMessageboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ClansMessageboardResponse>> {
        if (requestParameters['access_token'] == null) {
            throw new runtime.RequiredError(
                'access_token',
                'Required parameter "access_token" was null or undefined when calling getClansMessageboard().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['access_token'] != null) {
            queryParameters['access_token'] = requestParameters['access_token'];
        }

        if (requestParameters['fields'] != null) {
            queryParameters['fields'] = requestParameters['fields']!.join(runtime.COLLECTION_FORMATS["csv"]);
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["application_id"] = await this.configuration.apiKey("application_id"); // application_id authentication
        }


        let urlPath = `/clans/messageboard/`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ClansMessageboardResponseFromJSON(jsonValue));
    }

    /**
     * Method returns messages of clan message board.<p/>This method will be removed. Use method <a href=\"/reference/all/wot/clans/messageboard/\">Message board (World of Tanks)</a>
     * Message board
     */
    async getClansMessageboard(requestParameters: GetClansMessageboardRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ClansMessageboardResponse> {
        const response = await this.getClansMessageboardRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
  * @export
  * @enum {string}
  */
export enum GetClansAccountinfoLanguageEnum {
    En = 'en',
    Ru = 'ru',
    Pl = 'pl',
    De = 'de',
    Fr = 'fr',
    Es = 'es',
    ZhMinusCn = 'zh-cn',
    ZhMinusTw = 'zh-tw',
    Tr = 'tr',
    Cs = 'cs',
    Th = 'th',
    Vi = 'vi',
    Ko = 'ko'
}
/**
  * @export
  * @enum {string}
  */
export enum GetClansGlossaryLanguageEnum {
    En = 'en',
    Ru = 'ru',
    Pl = 'pl',
    De = 'de',
    Fr = 'fr',
    Es = 'es',
    ZhMinusCn = 'zh-cn',
    ZhMinusTw = 'zh-tw',
    Tr = 'tr',
    Cs = 'cs',
    Th = 'th',
    Vi = 'vi',
    Ko = 'ko'
}
/**
  * @export
  * @enum {string}
  */
export enum GetClansInfoExtraEnum {
    PrivateOnlineMembers = 'private.online_members'
}
/**
  * @export
  * @enum {string}
  */
export enum GetClansInfoLanguageEnum {
    En = 'en',
    Ru = 'ru',
    Pl = 'pl',
    De = 'de',
    Fr = 'fr',
    Es = 'es',
    ZhMinusCn = 'zh-cn',
    ZhMinusTw = 'zh-tw',
    Tr = 'tr',
    Cs = 'cs',
    Th = 'th',
    Vi = 'vi',
    Ko = 'ko'
}
/**
  * @export
  * @enum {string}
  */
export enum GetClansInfoMembersKeyEnum {
    Id = 'id'
}
/**
  * @export
  * @enum {string}
  */
export enum GetClansListLanguageEnum {
    En = 'en',
    Ru = 'ru',
    Pl = 'pl',
    De = 'de',
    Fr = 'fr',
    Es = 'es',
    ZhMinusCn = 'zh-cn',
    ZhMinusTw = 'zh-tw',
    Tr = 'tr',
    Cs = 'cs',
    Th = 'th',
    Vi = 'vi',
    Ko = 'ko'
}
/**
  * @export
  * @enum {string}
  */
export enum GetClansMemberhistoryLanguageEnum {
    En = 'en',
    Ru = 'ru',
    Pl = 'pl',
    De = 'de',
    Fr = 'fr',
    Es = 'es',
    ZhMinusCn = 'zh-cn',
    ZhMinusTw = 'zh-tw',
    Tr = 'tr',
    Cs = 'cs',
    Th = 'th',
    Vi = 'vi',
    Ko = 'ko'
}
